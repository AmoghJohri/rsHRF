<<<<<<< HEAD
function rsHRF(job,flag)
%% resting state BOLD-fMRI HRF deconvolution
if nargin>0
    para_global = wgr_rsHRF_global_para;
    switch flag;
        case 'vox'
            flag_delete = para_global.delete_files; % delete temporary files (generated wm/csf/brainmask) 
            TR = job.HRFE.TR ; 
            nii_file = job.images; %cell file
            nii_mask = job.mask{1};
            if isempty(nii_mask)
                nii_mask = para_global.mask_nii ;
            end
            
            data = [];
            fprintf('Reading NIFTI Data ...\n')
            Nscans = length(nii_file);
            for i=Nscans:-1:1
                v(i) = spm_vol(nii_file{i});
                tmp  = spm_read_vols(v(i));
                data(i,:) = tmp(:);
            end       
            
            outdir = job.outdir{1};
            if isempty(outdir)
                outdir = fileparts(v(1).fname);
            end
            
            if  isfield(job,'genericROI')    
                ROI = job.genericROI;
            else
                ROI = [];
            end
            
            if ~isempty(ROI);
                flag_ROI = 1;
                [mat,atlas,nii]= wgr_check_ROI(ROI, nii_file{1},flag_delete);                
                roinfo = [mat;atlas;nii];
                nvar = size(roinfo,1);
                data_ROI = zeros(Nscans,nvar);
                for j=1:nvar
                    data_ROI(:,j) = mean(data(:,roinfo{j,1}),2);
                end
            else
                flag_ROI=0;
            end
            
            if ~isempty(nii_mask);
                nii_masknew  = spm_file(nii_mask,'prefix','bin_');
                spm_imcalc({nii_file{1};nii_mask},nii_masknew,'(i1~=0).*(i2~=0)',{0,0,0,16});
                v0 = spm_vol(nii_masknew);
                datam = spm_read_vols(v0);
                voxel_ind = find(datam); clear datam
                if flag_delete
                    delete(v0.fname)
                end
            else
                data_var = nanvar(data,0,1);
                voxel_ind = find(data_var); clear data_var
            end
            data_gm = mean(data(:,voxel_ind),2);
            fprintf('# %d voxels inside defaut mask ...\n',length(voxel_ind))
            
            covariates = job.Denoising.generic;
            fprintf('Reading Covariates ...\n')
            if ~isempty(covariates)
                [txt,mat,nii]= wgr_check_covariates(covariates);     
                if ~isempty(nii)
                    nii2 = {}; 
                    for i=1:length(nii)
                        nii2{1,i} = spm_file(nii{i,1},'prefix','bin_');
                        spm_imcalc({nii_file{1};nii{i,1}},nii2{1,i},'(i1~=0).*(i2>0.9)',{0,0,0,16});
                        v0 = spm_vol(nii2{1,i});
                        datam = spm_read_vols(v0);
                        if flag_delete
                            delete(v0.fname)
                        end
                        id = find(datam==1); clear datam
                        if isempty(id)
                            error(['no survived voxels (>0.9) in ',nii{i,1}])
                        else
                            if para_global.aCompcor,                                 
                                numcomps = para_global.aCompcor_numcomps;
                                z = data(:,id);
                                z(isnan(z))=0;
                                m = size(z,2) ;
                                if m<numcomps
                                    error(['# components = ',num2str(m),', < ', num2str(numcomps)])
                                else
                                    [pc,score,latent] = princomp(z,'econ');
                                end
                                nii2{1,i} = z*pc(:,1:numcomps);
                            else
                                nii2{1,i} = mean(data(:,id),2);
                            end
                        end
                    end
                    nii = cell2mat(nii2);
                    clear nii2 datam
                else
                    nii = [];
                end
                if para_global.aCompcor
                    nuisance = [txt mat nii];
                else ~para_global.aCompcor & para_global.globa_reg
                    nuisance = [txt mat nii data_gm];
                end
            else
                nuisance = [];
            end
            %% 
            if flag_ROI
                data = data_ROI;
            else
                data = data(:,voxel_ind);
            end
            if length(job.Denoising.bands)>1
                error('please check your setting for band-pass filtering \n')
            elseif length(job.Denoising.bands)==1
                Bands = job.Denoising.bands{1};   
            else
                Bands =[];
            end
            p_detrend = job.Denoising.Detrend; 
            if p_detrend
                nuisance_detrend = zeros(Nscans,p_detrend);
                for i = 1:p_detrend
                    d = (1:Nscans).^i;
                    nuisance_detrend(:,i+1) = d(:)./(Nscans.^i);
                end
            else
                nuisance_detrend= [];
            end
            
            fprintf('Removing regressors & Detrend................. \n ')
            nuisance = [nuisance_detrend nuisance];
            if ~isempty(nuisance)
                nuisance = bsxfun(@minus, nuisance, sum(nuisance, 1)./Nscans);% Remove the mean
                nuisance = [orth(nuisance) ones(Nscans, 1)];
                mu   = sum(data, 1)./Nscans;    % mean 
                data = data - nuisance*(nuisance\data);
                data = bsxfun(@plus, data, mu);
            end
            
            if ~isempty(Bands)
                fprintf('Frequency filter.................... \n ')
                data = wgr_band_filter(data, TR,Bands);
            end
            
            if job.Denoising.Despiking;
                fprintf(' Temporal despiking with a hyperbolic tangent squashing function... \n')
                data = wgr_despiking(data);
            end           
            
            %% HRF deconvolution
            para.TR = TR;
            %%% the following parameter (upsample grid) can be > 1 only for Canonical.
            %%% Set = 1 for FIR
            para.T  = job.HRFE.fmri_t; % magnification factor of temporal grid with respect to TR. i.e. para.T=1 for no upsampling, para.T=3 for 3x finer grid
            para.T0 = job.HRFE.fmri_t; % position of the reference slice in bins, on the grid defined by para.T. For example, if the reference slice is the middle one, then para.T0=fix(para.T/2)
            if para.T==1
                para.T0 = 1;
            end
            min_onset_search = min(job.HRFE.mdelay); % minimum delay allowed between event and HRF onset (seconds)
            max_onset_search = max(job.HRFE.mdelay); % maximum delay allowed between event and HRF onset (seconds)
            para.dt  = para.TR/para.T; % fine scale time resolution.
            if job.HRFE.hrfm==1
                para.TD_DD = 2; % time and dispersion derivative
            elseif job.HRFE.hrfm==3
                para.TD_DD = 1; % time and dispersion derivative
            end
            para.AR_lag = job.HRFE.cvi; % AR(1) noise autocorrelation.
            para.thr = job.HRFE.thr; % (mean+) para.thr*standard deviation threshold to detect event.
            para.len = job.HRFE.hrflen; % length of HRF, in seconds
            para.lag  = fix(min_onset_search/para.dt):fix(max_onset_search/para.dt);
            para.localK = para_global.localK;
            temporal_mask = ones(Nscans,1);
            if job.HRFE.hrfm==1 | job.HRFE.hrfm==3
                tic
                [beta_hrf, bf, event_bold] = wgr_rsHRF_estimation_canonhrf2dd_par2(data,para, temporal_mask);
                hrfa = bf*beta_hrf(1:size(bf,2),:); %HRF
            elseif job.HRFE.hrfm==2 | job.HRFE.hrfm==4
                tic
                if  job.HRFE.hrfm==2
                    para.estimation = 'FIR';
                elseif job.HRFE.hrfm==4
                    para.estimation = 'sFIR';
                end
                para.T=1; % this needs to be = 1 for FIR
                [hrfa,event_bold] = wgr_rsHRF_FIR(data,para, temporal_mask);
            end
            
            nvar = size(hrfa,2);
            PARA = zeros(3,nvar);
            for voxel_id=1:nvar
                hrf1 = hrfa(:,voxel_id);
                [PARA(:,voxel_id)] = wgr_rsHRF_get_parameters(hrf1,para.TR/para.T);% estimate HRF parameter
            end
            fprintf('\nDone HRF estimation %8.2f seconds\n',toc)
            
            fprintf('Deconvolving HRF ...\n');
            tic
            T = round(para.len/TR);
            if para.T>1
                hrfa_TR = resample(hrfa,1,para.T);
            else
                hrfa_TR = hrfa;
            end
            for voxel_id=1:nvar
                hrf=hrfa_TR(:,voxel_id);
                H=fft([hrf; zeros(Nscans-length(hrf),1)]);
                M=fft(data(:,voxel_id));
                data_deconv(:,voxel_id) = ifft(conj(H).*M./(H.*conj(H)+2));
                event_number(voxel_id)=length(event_bold{1,voxel_id});
            end
            toc
            fprintf('Save HRF deconvolution results....\n');
            v0 = v(1);   v0.dt = [16,0]; v0.n = [1 1];
            [fpath,name,ext] = fileparts(v0.fname);
            save(fullfile(outdir,[job.prefix,name, '_hrf.mat']), 'para', 'hrfa', 'event_bold', 'event_number','PARA','-v7.3');
            
            if ~flag_ROI
                %write nifti maps of the three HRF parameters
                HRF_para_str = {'Height.nii', 'Time2peak.nii','FWHM.nii'};
                dat= zeros(v0.dim);
                for i=1:3
                    v0.fname = fullfile(outdir,[job.prefix,name,'_',HRF_para_str{i}]);
                    dat(voxel_ind)=PARA(i,:);
                    spm_write_vol(v0,dat);
                end
                % write number of events
                v0.fname = fullfile(outdir,[job.prefix,name,'_event_number.nii']);
                dat(voxel_ind)=event_number;
                spm_write_vol(v0,dat);
                
                if job.rmoutlier
                    PARA_rm = PARA;
                    pvalue_rm=para_global.pvalue_rm;
                    Inpainted_method =para_global.Inpainted ;
                    for i=1:3
                        v0.fname = fullfile(outdir,[job.prefix,name,'_Olrm_',HRF_para_str{i}]);
                        dat(voxel_ind)=PARA(i,:);
                        if i==1
                            id = (PARA_rm(1,:)<=0);
                            PARA_rm(1,id)=nan;
                            [PARA_rm(1,:),idx,outliers] = deleteoutliers(PARA_rm(1,:),pvalue_rm,1);
                            fprintf('height outlier: negative/zeros #%d + extreme #%d, [%3.3f %3.3f];\n',nnz(id),length(idx),min(outliers),max(outliers));
                            dat(voxel_ind)=PARA_rm(1,:);
                            dat=inpaint_nans3(dat,Inpainted_method);
                            PARA_rm(1,:) = dat(voxel_ind);
                            id_rm = union(find(id),idx);
                            dat2 = zeros(v0.dim);
                            PARA_rm0=zeros(1,size(PARA,2));
                            PARA_rm0(1,id_rm)=1;
                            dat2(voxel_ind)=PARA_rm0;
                            v00 = v0;
                            v00.fname = fullfile(outdir,[job.prefix,name,'_outlier_NAN.nii']);
                            spm_write_vol(v00,dat2);  clear dat2
                        else
                            PARA_rm(i,id_rm)=nan;
                            dat(voxel_ind)=PARA_rm(i,:);
                            dat=inpaint_nans3(dat,Inpainted_method);
                            PARA_rm(i,:) = dat(voxel_ind);
                        end
                        spm_write_vol(v0,dat);
                    end
                    % write number of events
                    v0.fname = fullfile(outdir,[job.prefix,name,'_Olrm_event_number.nii']);
                    dat(voxel_ind)=event_number;
                    event_number_rm  = event_number;
                    event_number_rm(1,id_rm)=nan;
                    dat(voxel_ind)=event_number_rm;
                    dat=inpaint_nans3(dat,Inpainted_method);
                    event_number_rm = dat(voxel_ind);
                    spm_write_vol(v0,dat);
                    save(fullfile(outdir,[job.prefix,name, '_hrf.mat']), 'PARA_rm','event_number_rm','id_rm','-append')
                end

                % writing back deconvolved data into nifti file
                v1 = v; dat3 = zeros(v1(1).dim);
                for i=1:Nscans
                    [fpath,name,ext] = fileparts(v1(i).fname);
                    v1(i).fname = fullfile(outdir,[job.prefix,name,ext]);
                    dat3(voxel_ind) = data_deconv(i,:);
                    spm_write_vol(v1(i),dat3);
                end
                if job.rmoutlier & para_global.rmoutlier_deconv
                    v1 = v; dat3 = zeros(v1(1).dim);
                    
                    for i=1:Nscans
                        [fpath,name,ext] = fileparts(v1(i).fname);
                        v1(i).fname = fullfile(outdir,[job.prefix,name,'_Olrm',ext]);
                        data_deconv_rm= data_deconv(i,:);
                        data_deconv_rm(id_rm)=nan;
                        dat3(voxel_ind) = data_deconv_rm;
                        dat3=inpaint_nans3(dat3,Inpainted_method);
                        spm_write_vol(v1(i),dat3);
                    end
                    clear data_deconv_rm
                end
                clear data_deconv
            else
                save(fullfile(outdir,[job.prefix,name, '.mat']), 'roinfo','data','data_deconv','-v7.3');
                clear data data_deconv
            end
            save(fullfile(outdir,[job.prefix,name, '_job.mat']), 'job','para_global');            
        case 'sig'
            wgr_ROI_sig_deconvolution(job,para_global)
    end
    return
else
    code_path = fileparts(which('rsHRF.m')) ;
    a = imread(fullfile(code_path,'rsHRF_logo.png'));
    S.fig = figure('Visible','on',...
        'numbertitle','off',...    
        'menubar','none',...         
        'units','normalized',...
        'color','w',...
        'position',[0.4   0.4    0.15    0.3],...[563    98   480   360],...
        'name',['rsHRF v1.0(',getenv('USERNAME'),')'],...
        'resize','off');
    
    S.pb(1) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.05,0.65,0.9,0.28],...
        'style','pushbutton',...'string','Resting State HRF Deconvolution',...
        'backgroundc','w',...
        'CData',wgr_hrflo,....
        'foregroundcolor','b');
    
    %% ROI signal HRF deconvolution
    S.pb(2) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.05,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','ROI Signals',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.sig_rsHRF'');',...
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');


    %% ROI-wise HRF deconvolution
    S.pb(3) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.25,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','ROI Level',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.ROI_rsHRF'');',...        
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');
    
    %% voxelwise HRF deconvolution
    S.pb(4) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.45,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','Voxel Level',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.vox_rsHRF'');',...        
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');
                                                                                                                                                      
end


function x1 = wgr_despiking(x1)
my=repmat(median(x1,1),[size(x1,1),1]);
sy=repmat(4*median(abs(x1-my)),[size(x1,1),1]);
x1=my+sy.*tanh((x1-my)./max(eps,sy));

function  x = wgr_band_filter(x, TR,Bands)
x = conn_filter(TR,Bands,x,'full') +...%mean-center by default
     repmat(mean(x,1),size(x,1),1);    %mean back in

function [y,fy]=conn_filter(rt,filter,x,option)
% from conn toolbox
USEDCT=true;
if nargin<4, option='full'; end
if strcmpi(option,'base'), Nx=x; x=eye(Nx); end
if USEDCT % discrete cosine basis
    Nx=size(x,1);
    fy=fft(cat(1,x,flipud(x)),[],1);
    f=(0:size(fy,1)-1);
    f=min(f,size(fy,1)-f);
    switch(lower(option))
        case {'full','base'}
            idx=find(f<filter(1)*(rt*size(fy,1))|f>=filter(2)*(rt*size(fy,1)));
            %idx=idx(idx>1);
            fy(idx,:)=0;
            k=1; %2*size(fy,1)*(min(.5,filter(2)*rt)-max(0,filter(1)*rt))/max(1,size(fy,1)-numel(idx));
            y=real(ifft(fy,[],1))*k;
            y=y(1:Nx,:);
        case 'partial'
            idx=find(f>=filter(1)*(rt*size(x,1))&f<filter(2)*(rt*size(x,1)));
            %if ~any(idx==1), idx=[1,idx]; end
            y=fy(idx,:);
    end
else % discrete fourier basis
    fy=fft(x,[],1);
    f=(0:size(fy,1)-1);
    f=min(f,size(fy,1)-f);
    switch(lower(option))
        case 'full',
            idx=find(f<filter(1)*(rt*size(fy,1))|f>=filter(2)*(rt*size(fy,1)));
            %idx=idx(idx>1);
            fy(idx,:)=0;
            k=1; %2*size(fy,1)*(min(.5,filter(2)*rt)-max(0,filter(1)*rt))/max(1,size(fy,1)-numel(idx));
            y=real(ifft(fy,[],1))*k;
        case 'partial',
            idx=find(f>=filter(1)*(rt*size(x,1))&f<filter(2)*(rt*size(x,1)));
            %if ~any(idx==1), idx=[1,idx]; end
            y=fy(idx,:);
    end
end

function a = wgr_hrflo()
a = uint8(ones(80,177,3)*255);
id  = [930,931,932,933,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1162,1163,1164,1165,1166,1167,1168,1169,1247,1248,1249,1327,1328,1329,1407,1408,1409,1487,1488,1489,1492,1493,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1802,1803,1804,1884,1885,1964,1965,1970,1971,1972,1973,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2203,2204,2205,2206,2207,2208,2209,2210,2213,2283,2284,2288,2289,2290,2363,2364,2368,2369,2370,2443,2444,2447,2448,2449,2450,2451,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2603,2604,2605,2606,2607,2608,2610,2611,2612,2613,2684,2685,2686,2687,2691,2692,2693,2772,2773,2774,2852,2853,2854,2929,2930,2931,2932,2933,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3163,3164,3165,3166,3167,3168,3169,3170,3243,3244,3245,3248,3249,3323,3324,3327,3328,3329,3402,3403,3404,3407,3408,3409,3468,3469,3482,3483,3484,3487,3488,3489,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3562,3563,3564,3567,3568,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3643,3644,3700,3701,3702,3703,3704,3705,3706,3780,3781,3782,3785,3786,3787,3860,3861,3864,3865,3866,3867,3940,3941,3942,3944,3945,3946,3947,3948,4020,4021,4022,4023,4024,4025,4027,4028,4029,4101,4102,4103,4104,4107,4108,4109,4110,4129,4130,4131,4132,4133,4182,4183,4188,4189,4190,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4265,4266,4267,4268,4269,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4297,4298,4344,4345,4346,4347,4348,4349,4350,4363,4364,4365,4366,4367,4368,4371,4372,4373,4376,4377,4423,4424,4425,4426,4427,4428,4429,4430,4443,4444,4445,4450,4451,4452,4456,4457,4502,4503,4504,4505,4506,4507,4508,4509,4510,4523,4524,4525,4530,4531,4532,4535,4536,4537,4582,4583,4584,4585,4586,4588,4589,4603,4604,4605,4610,4611,4612,4614,4615,4616,4662,4663,4664,4665,4667,4668,4669,4683,4684,4685,4689,4690,4691,4693,4694,4695,4696,4743,4744,4747,4748,4749,4750,4763,4764,4765,4768,4769,4770,4771,4772,4773,4774,4775,4776,4824,4825,4826,4828,4829,4830,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4854,4855,4903,4904,4905,4906,4907,4908,4909,4910,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4982,4983,4984,4985,4986,4987,4988,4989,4990,5005,5006,5007,5008,5009,5010,5011,5012,5013,5062,5063,5064,5066,5067,5068,5069,5070,5083,5084,5085,5087,5088,5089,5090,5091,5092,5142,5143,5144,5146,5147,5148,5149,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5223,5224,5227,5228,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,5248,5249,5250,5251,5252,5253,5303,5304,5305,5306,5307,5308,5309,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5381,5382,5383,5384,5385,5386,5387,5388,5389,5390,5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5411,5412,5413,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5491,5492,5493,5540,5541,5542,5543,5544,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5570,5571,5572,5623,5624,5627,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5650,5651,5703,5704,5706,5707,5708,5710,5711,5712,5713,5714,5715,5716,5717,5718,5719,5720,5721,5729,5730,5731,5732,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,5807,5808,5809,5810,5811,5812,5813,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5886,5887,5888,5889,5890,5892,5893,5939,5940,5941,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5966,5967,5968,5972,5973,6017,6018,6019,6020,6021,6022,6023,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6046,6047,6048,6049,6051,6052,6053,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6127,6128,6131,6132,6133,6176,6177,6178,6179,6180,6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6210,6211,6212,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6289,6290,6291,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6351,6352,6353,6368,6369,6370,6371,6372,6373,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6447,6448,6449,6450,6451,6452,6453,6495,6496,6497,6498,6499,6500,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6526,6527,6528,6529,6532,6533,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6606,6607,6608,6611,6612,6613,6656,6657,6658,6659,6660,6661,6662,6663,6664,6665,6666,6668,6669,6670,6671,6672,6673,6686,6687,6688,6690,6691,6692,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6766,6767,6768,6769,6770,6771,6772,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6847,6848,6849,6850,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917,6927,6928,6929,6983,6984,6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,6998,6999,7007,7008,7009,7063,7064,7066,7067,7068,7069,7070,7071,7072,7073,7074,7075,7076,7077,7078,7079,7080,7081,7087,7088,7089,7090,7091,7092,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7166,7167,7168,7169,7170,7171,7172,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7246,7247,7248,7249,7250,7251,7303,7304,7305,7306,7312,7313,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,7328,7329,7330,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,7408,7409,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491,7559,7560,7561,7562,7563,7564,7565,7566,7567,7568,7569,7570,7571,7572,7573,7574,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7783,7784,7788,7789,7790,7808,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7862,7863,7864,7865,7868,7869,7870,7889,7890,7891,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7941,7942,7943,7944,7945,7949,7950,7967,7968,7969,7970,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,8020,8021,8022,8024,8025,8026,8028,8029,8030,8046,8047,8048,8049,8050,8051,8052,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8100,8101,8102,8104,8105,8106,8108,8109,8110,8126,8127,8128,8129,8130,8131,8132,8133,8134,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8180,8181,8185,8186,8187,8188,8189,8211,8212,8213,8214,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8260,8261,8262,8265,8266,8267,8268,8269,8288,8289,8290,8291,8292,8293,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8340,8341,8342,8346,8347,8348,8367,8368,8369,8370,8371,8372,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8421,8422,8423,8424,8447,8448,8449,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8503,8504,8505,8506,8507,8508,8509,8528,8529,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8608,8609,8610,8611,8612,8613,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8687,8688,8689,8690,8691,8692,8693,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8740,8741,8742,8743,8744,8748,8749,8750,8766,8767,8768,8769,8770,8772,8773,8784,8785,8786,8787,8788,8789,8790,8791,8792,8793,8794,8795,8796,8823,8824,8827,8828,8829,8846,8847,8848,8851,8852,8853,8864,8865,8866,8867,8868,8869,8870,8871,8872,8873,8874,8875,8876,8903,8904,8907,8908,8926,8927,8928,8930,8931,8932,8933,8944,8945,8946,8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8983,8985,8986,8987,8988,8989,9006,9007,9008,9009,9010,9011,9012,9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9064,9065,9066,9067,9068,9069,9070,9087,9088,9089,9090,9091,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9143,9144,9145,9146,9148,9149,9167,9168,9169,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194,9222,9223,9224,9227,9228,9229,9247,9248,9249,9262,9263,9264,9265,9266,9267,9268,9269,9270,9271,9272,9273,9274,9302,9303,9304,9305,9306,9307,9308,9309,9326,9327,9328,9329,9330,9331,9332,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9352,9353,9382,9383,9384,9385,9386,9387,9388,9389,9390,9402,9403,9404,9405,9406,9407,9408,9409,9410,9411,9412,9413,9421,9422,9423,9424,9425,9426,9427,9428,9429,9430,9431,9432,9463,9464,9465,9466,9467,9468,9469,9470,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9543,9544,9562,9563,9564,9571,9572,9573,9580,9581,9582,9583,9584,9585,9586,9587,9588,9589,9590,9623,9624,9625,9626,9627,9628,9629,9651,9652,9653,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9701,9702,9703,9704,9705,9706,9707,9708,9709,9710,9730,9731,9732,9739,9740,9741,9742,9743,9744,9745,9746,9747,9748,9749,9780,9781,9782,9783,9784,9785,9786,9787,9788,9789,9790,9809,9810,9811,9819,9820,9821,9822,9823,9824,9825,9826,9827,9828,9860,9861,9862,9863,9864,9868,9869,9870,9887,9888,9889,9890,9891,9892,9893,9898,9899,9900,9901,9902,9903,9904,9905,9906,9943,9944,9947,9948,9949,9966,9967,9968,9969,9970,9971,9972,9973,9978,9979,9980,9981,9982,9983,9984,9985,10023,10024,10027,10028,10047,10048,10049,10051,10052,10053,10058,10059,10060,10061,10062,10063,10064,10104,10105,10106,10107,10108,10109,10130,10131,10132,10133,10138,10139,10140,10141,10142,10143,10183,10184,10185,10186,10187,10188,10189,10190,10209,10210,10211,10212,10217,10218,10219,10220,10221,10222,10262,10263,10264,10265,10266,10267,10268,10269,10270,10286,10287,10288,10289,10290,10291,10297,10298,10299,10300,10342,10343,10344,10345,10346,10347,10348,10349,10350,10366,10367,10368,10369,10370,10371,10372,10377,10378,10379,10380,10422,10423,10424,10425,10426,10428,10429,10446,10447,10448,10449,10450,10451,10452,10457,10458,10459,10503,10504,10505,10507,10508,10509,10530,10531,10532,10536,10537,10538,10539,10587,10588,10607,10608,10609,10610,10611,10617,10618,10687,10688,10689,10690,10697,10698,10767,10768,10769,10770,10771,10772,10773,10774,10777,10778,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,10933,10934,11003,11004,11005,11006,11007,11008,11009,11087,11088,11167,11168,11169,11170,11171,11243,11244,11246,11247,11248,11249,11250,11251,11252,11253,11322,11323,11324,11326,11327,11328,11329,11330,11331,11332,11333,11402,11403,11404,11406,11407,11412,11413,11482,11483,11491,11492,11493,11570,11571,11572,11573,11649,11650,11651,11652,11728,11729,11730,11731,11732,11733,11807,11808,11809,11810,11811,11812,11813,11886,11887,11888,11889,11892,11893,11966,11967,11968,11971,11972,11973,12046,12047,12048,12050,12051,12052,12126,12127,12128,12129,12130,12131,12132,12207,12208,12209,12210,12211,12287,12288,12289,12367,12368,12369,12447,12448,12449,12450,12451,12452,12526,12527,12528,12529,12530,12531,12532,12606,12607,12608,12609,12610,12611,12687,12688,12689,12690,12767,12768,12769,12846,12847,12848,12849,12850,12851,12927,12928,12929,12930,12931,12932,13008,13009,13010,13011,13012,13090,13091,13092,13170,13171,13172,13249,13250,13251,13328,13329,13330,13408,13409,15090,15091,15092,15093,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15322,15323,15324,15325,15326,15327,15328,15329,15407,15408,15409,15487,15488,15489,15567,15568,15569,15647,15648,15649,15652,15653,15724,15725,15726,15727,15728,15729,15730,15731,15732,15733,15801,15802,15803,15804,15805,15806,15807,15808,15809,15810,15811,15812,15813,15881,15882,15883,15884,15885,15886,15887,15888,15889,15890,15891,15892,15893,15962,15963,15964,16044,16045,16124,16125,16129,16130,16131,16132,16133,16203,16204,16205,16206,16207,16208,16209,16210,16211,16212,16213,16214,16283,16284,16285,16286,16287,16288,16289,16290,16291,16292,16293,16294,16363,16364,16365,16366,16367,16368,16369,16370,16373,16443,16444,16448,16449,16450,16523,16524,16528,16529,16530,16603,16604,16607,16608,16609,16610,16611,16683,16684,16685,16686,16687,16688,16689,16690,16691,16692,16763,16764,16765,16766,16767,16768,16770,16771,16772,16773,16844,16845,16846,16847,16851,16852,16853,16932,16933,16934,17012,17013,17014,17089,17090,17091,17092,17093,17163,17164,17165,17166,17167,17168,17169,17170,17171,17172,17173,17174,17243,17244,17245,17246,17247,17248,17249,17250,17251,17252,17253,17254,17323,17324,17325,17326,17327,17328,17329,17330,17403,17404,17405,17408,17409,17483,17484,17487,17488,17489,17562,17563,17564,17567,17568,17569,17628,17629,17642,17643,17644,17647,17648,17649,17701,17702,17703,17704,17705,17706,17707,17708,17709,17710,17722,17723,17724,17727,17728,17780,17781,17782,17783,17784,17785,17786,17787,17788,17789,17790,17803,17804,17860,17861,17862,17863,17864,17865,17866,17940,17941,17942,17945,17946,17947,18020,18021,18024,18025,18026,18027,18100,18101,18102,18104,18105,18106,18107,18108,18180,18181,18182,18183,18184,18185,18187,18188,18189,18261,18262,18263,18264,18267,18268,18269,18270,18289,18290,18291,18292,18293,18342,18343,18348,18349,18350,18363,18364,18365,18366,18367,18368,18369,18370,18371,18372,18373,18425,18426,18427,18428,18429,18443,18444,18445,18446,18447,18448,18449,18450,18451,18452,18453,18457,18458,18504,18505,18506,18507,18508,18509,18510,18523,18524,18525,18526,18527,18528,18531,18532,18533,18536,18537,18538,18583,18584,18585,18586,18587,18588,18589,18590,18603,18604,18605,18610,18611,18612,18616,18617,18662,18663,18664,18665,18666,18667,18668,18669,18670,18683,18684,18685,18690,18691,18692,18695,18696,18697,18742,18743,18744,18745,18746,18748,18749,18763,18764,18765,18770,18771,18772,18774,18775,18776,18822,18823,18824,18825,18827,18828,18829,18843,18844,18845,18849,18850,18851,18853,18854,18855,18856,18903,18904,18907,18908,18909,18910,18923,18924,18925,18928,18929,18930,18931,18932,18933,18934,18935,18936,18984,18985,18986,18988,18989,18990,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19063,19064,19065,19066,19067,19068,19069,19070,19084,19085,19086,19087,19088,19089,19090,19091,19092,19093,19094,19142,19143,19144,19145,19146,19147,19148,19149,19150,19165,19166,19167,19168,19169,19170,19171,19172,19173,19222,19223,19224,19226,19227,19228,19229,19230,19242,19243,19244,19245,19246,19247,19248,19249,19250,19251,19252,19302,19303,19304,19306,19307,19308,19309,19319,19320,19321,19322,19323,19324,19325,19326,19327,19328,19329,19330,19331,19332,19333,19383,19384,19387,19388,19396,19397,19398,19399,19400,19401,19402,19403,19404,19405,19406,19407,19408,19409,19410,19411,19412,19413,19463,19464,19465,19466,19467,19468,19469,19473,19474,19475,19476,19477,19478,19479,19480,19481,19482,19483,19484,19485,19486,19487,19488,19489,19490,19491,19492,19493,19541,19542,19543,19544,19545,19546,19547,19548,19549,19550,19551,19552,19553,19554,19555,19556,19557,19558,19559,19560,19561,19562,19563,19564,19565,19566,19567,19568,19569,19571,19572,19573,19620,19621,19622,19623,19624,19625,19626,19627,19628,19629,19630,19631,19632,19633,19634,19635,19636,19637,19638,19639,19640,19641,19642,19643,19644,19645,19646,19647,19648,19651,19652,19653,19700,19701,19702,19703,19704,19706,19707,19708,19709,19710,19711,19712,19713,19714,19715,19716,19717,19718,19719,19720,19721,19722,19723,19724,19730,19731,19732,19783,19784,19785,19786,19787,19788,19789,19790,19791,19792,19793,19794,19795,19796,19797,19798,19799,19800,19801,19802,19803,19810,19811,19858,19859,19860,19861,19862,19863,19864,19865,19866,19867,19868,19869,19870,19871,19872,19873,19874,19875,19876,19877,19878,19879,19880,19881,19889,19890,19891,19892,19935,19936,19937,19938,19939,19940,19941,19942,19943,19944,19945,19946,19947,19948,19949,19950,19951,19952,19953,19954,19955,19956,19957,19958,19959,19960,19967,19968,19969,19970,19971,19972,19973,20012,20013,20014,20015,20016,20017,20018,20019,20020,20021,20022,20023,20024,20025,20026,20027,20028,20029,20030,20031,20032,20033,20034,20035,20036,20037,20038,20046,20047,20048,20049,20050,20052,20053,20090,20091,20092,20093,20094,20095,20096,20097,20098,20099,20100,20101,20102,20103,20104,20105,20106,20107,20108,20109,20110,20111,20112,20113,20114,20115,20116,20117,20126,20127,20128,20132,20133,20168,20169,20170,20171,20172,20173,20174,20175,20176,20177,20178,20179,20180,20181,20182,20183,20184,20185,20186,20187,20188,20189,20190,20191,20192,20193,20194,20195,20196,20206,20207,20208,20209,20211,20212,20213,20246,20247,20248,20249,20250,20251,20252,20253,20254,20255,20256,20257,20258,20259,20260,20261,20262,20263,20264,20265,20266,20267,20268,20269,20270,20271,20272,20273,20274,20275,20287,20288,20291,20292,20293,20325,20326,20327,20328,20329,20330,20331,20332,20333,20334,20335,20336,20337,20338,20339,20340,20341,20342,20343,20344,20345,20346,20347,20348,20349,20350,20351,20352,20353,20354,20370,20371,20372,20403,20404,20405,20406,20407,20408,20409,20410,20411,20412,20413,20414,20415,20416,20417,20418,20419,20420,20421,20422,20423,20424,20425,20426,20427,20428,20429,20430,20431,20432,20433,20449,20450,20451,20483,20484,20485,20486,20487,20488,20489,20490,20491,20492,20493,20494,20495,20496,20497,20498,20499,20500,20501,20502,20503,20504,20505,20506,20507,20508,20509,20510,20511,20512,20513,20528,20529,20530,20531,20532,20533,20562,20563,20564,20565,20566,20567,20568,20569,20570,20571,20572,20573,20574,20575,20576,20577,20578,20579,20580,20581,20582,20583,20584,20585,20586,20587,20588,20589,20590,20591,20592,20607,20608,20609,20610,20611,20612,20613,20642,20643,20644,20645,20646,20647,20648,20649,20650,20651,20652,20653,20654,20655,20656,20657,20658,20659,20660,20661,20662,20663,20664,20665,20666,20667,20668,20669,20670,20671,20672,20686,20687,20688,20689,20692,20693,20722,20723,20724,20725,20726,20727,20728,20729,20730,20731,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20742,20743,20744,20745,20746,20747,20748,20749,20750,20751,20752,20753,20766,20767,20768,20771,20772,20773,20803,20804,20805,20806,20807,20808,20809,20810,20811,20812,20813,20814,20815,20816,20817,20818,20819,20820,20821,20822,20823,20824,20825,20826,20827,20828,20829,20830,20831,20832,20833,20846,20847,20848,20850,20851,20852,20884,20885,20886,20887,20888,20889,20890,20891,20892,20893,20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906,20907,20908,20909,20910,20911,20912,20913,20914,20926,20927,20928,20929,20930,20931,20932,20965,20966,20967,20968,20969,20970,20971,20972,20973,20974,20975,20976,20977,20978,20979,20980,20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993,20994,20995,20996,21007,21008,21009,21010,21047,21048,21049,21050,21051,21052,21053,21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065,21066,21067,21068,21069,21070,21071,21072,21073,21074,21075,21076,21077,21087,21088,21089,21129,21130,21131,21132,21133,21134,21135,21136,21137,21138,21139,21140,21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152,21153,21154,21155,21156,21157,21158,21159,21167,21168,21169,21211,21212,21213,21214,21215,21216,21217,21218,21219,21220,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21232,21233,21234,21235,21236,21237,21238,21239,21240,21241,21247,21248,21249,21250,21251,21252,21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21307,21308,21309,21310,21311,21312,21313,21314,21315,21316,21317,21318,21319,21320,21321,21322,21323,21326,21327,21328,21329,21330,21331,21332,21376,21377,21378,21379,21380,21381,21382,21383,21384,21385,21386,21387,21388,21389,21390,21391,21392,21393,21394,21395,21396,21397,21398,21399,21400,21401,21402,21403,21404,21406,21407,21408,21409,21410,21411,21460,21461,21462,21463,21464,21465,21466,21467,21468,21469,21470,21471,21472,21473,21474,21475,21476,21477,21478,21479,21480,21481,21482,21483,21484,21485,21486,21487,21488,21489,21490,21543,21545,21546,21547,21548,21549,21550,21551,21552,21553,21554,21555,21556,21557,21558,21559,21560,21561,21562,21563,21564,21565,21566,21567,21568,21569,21626,21627,21628,21629,21630,21631,21632,21633,21634,21635,21636,21637,21638,21639,21640,21641,21642,21643,21644,21645,21646,21647,21648,21649,21650,21651,21710,21711,21712,21713,21714,21715,21716,21717,21718,21719,21720,21721,21722,21723,21724,21725,21726,21727,21728,21729,21730,21731,21732,21733,21734,21793,21794,21795,21796,21797,21798,21799,21800,21801,21802,21803,21804,21805,21806,21807,21808,21809,21810,21811,21812,21813,21814,21815,21816,21817,21877,21878,21879,21880,21881,21882,21883,21884,21885,21886,21887,21888,21889,21890,21891,21892,21893,21894,21895,21896,21897,21898,21899,21943,21944,21948,21949,21950,21960,21961,21962,21963,21964,21965,21966,21967,21968,21969,21970,21971,21972,21973,21974,21975,21976,21977,21978,21979,21980,21981,22022,22023,22024,22025,22028,22029,22030,22044,22045,22046,22047,22049,22050,22051,22052,22053,22054,22055,22056,22057,22058,22059,22060,22061,22062,22063,22101,22102,22103,22104,22105,22109,22110,22127,22128,22129,22130,22132,22133,22134,22135,22136,22137,22138,22139,22140,22141,22142,22143,22144,22145,22180,22181,22182,22184,22185,22186,22188,22189,22190,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22218,22219,22220,22221,22222,22223,22224,22225,22226,22227,22260,22261,22262,22264,22265,22266,22268,22269,22270,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22300,22301,22302,22303,22304,22305,22306,22307,22308,22340,22341,22345,22346,22347,22348,22349,22371,22372,22373,22374,22376,22377,22378,22379,22380,22381,22382,22383,22384,22385,22386,22387,22388,22389,22390,22420,22421,22422,22425,22426,22427,22428,22429,22448,22449,22450,22451,22452,22453,22457,22458,22459,22460,22461,22462,22463,22464,22465,22466,22467,22468,22469,22470,22471,22500,22501,22502,22506,22507,22508,22527,22528,22529,22530,22531,22532,22539,22540,22541,22542,22543,22544,22545,22546,22547,22548,22549,22550,22551,22552,22553,22581,22582,22583,22584,22607,22608,22609,22620,22621,22622,22623,22624,22625,22626,22627,22628,22629,22630,22631,22632,22633,22634,22663,22664,22665,22666,22667,22668,22669,22688,22689,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22716,22741,22742,22743,22744,22745,22746,22747,22748,22749,22750,22768,22769,22770,22771,22772,22773,22783,22784,22785,22786,22787,22788,22789,22790,22791,22792,22793,22794,22795,22796,22797,22820,22821,22822,22823,22824,22825,22826,22827,22828,22829,22830,22847,22848,22849,22850,22851,22852,22853,22864,22865,22866,22867,22868,22869,22870,22871,22872,22873,22874,22875,22876,22877,22878,22900,22901,22902,22903,22904,22908,22909,22910,22926,22927,22928,22929,22930,22932,22933,22944,22945,22946,22947,22948,22949,22950,22951,22952,22953,22954,22955,22956,22957,22958,22959,22983,22984,22987,22988,22989,23006,23007,23008,23011,23012,23013,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23063,23064,23067,23068,23086,23087,23088,23090,23091,23092,23093,23104,23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23143,23145,23146,23147,23148,23149,23166,23167,23168,23169,23170,23171,23172,23184,23185,23186,23187,23188,23189,23190,23191,23192,23193,23194,23195,23196,23197,23198,23199,23200,23224,23225,23226,23227,23228,23229,23230,23247,23248,23249,23250,23251,23263,23264,23265,23266,23267,23268,23269,23270,23271,23272,23273,23274,23275,23276,23277,23278,23279,23280,23303,23304,23305,23306,23308,23309,23327,23328,23329,23343,23344,23345,23346,23347,23348,23349,23350,23351,23352,23353,23354,23355,23356,23357,23358,23359,23360,23382,23383,23384,23387,23388,23389,23407,23408,23409,23422,23423,23424,23425,23426,23427,23428,23429,23430,23431,23432,23433,23434,23435,23436,23437,23438,23439,23462,23463,23464,23465,23466,23467,23468,23469,23486,23487,23488,23489,23490,23491,23492,23502,23503,23504,23505,23506,23507,23508,23509,23510,23511,23512,23513,23514,23515,23516,23517,23518,23542,23543,23544,23545,23546,23547,23548,23549,23550,23562,23563,23564,23565,23566,23567,23568,23569,23570,23571,23572,23573,23581,23582,23583,23584,23585,23586,23587,23588,23589,23590,23591,23592,23593,23594,23595,23596,23597,23598,23623,23624,23625,23626,23627,23628,23629,23630,23642,23643,23644,23645,23646,23647,23648,23649,23650,23651,23652,23653,23661,23662,23663,23664,23665,23666,23667,23668,23669,23670,23671,23672,23673,23674,23675,23676,23677,23703,23704,23722,23723,23724,23731,23732,23733,23740,23741,23742,23743,23744,23745,23746,23747,23748,23749,23750,23751,23752,23753,23754,23755,23756,23783,23784,23785,23786,23787,23788,23789,23811,23812,23813,23820,23821,23822,23823,23824,23825,23826,23827,23828,23829,23830,23831,23832,23833,23834,23835,23861,23862,23863,23864,23865,23866,23867,23868,23869,23870,23890,23891,23892,23899,23900,23901,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23913,23914,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23969,23970,23971,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23991,23992,23993,24020,24021,24022,24023,24024,24028,24029,24030,24047,24048,24049,24050,24051,24052,24053,24058,24059,24060,24061,24062,24063,24064,24065,24066,24067,24068,24069,24070,24071,24103,24104,24107,24108,24109,24126,24127,24128,24129,24130,24131,24132,24133,24138,24139,24140,24141,24142,24143,24144,24145,24146,24147,24148,24149,24150,24183,24184,24187,24188,24207,24208,24209,24211,24212,24213,24218,24219,24220,24221,24222,24223,24224,24225,24226,24227,24228,24264,24265,24266,24267,24268,24269,24290,24291,24292,24293,24298,24299,24300,24301,24302,24303,24304,24305,24306,24307,24343,24344,24345,24346,24347,24348,24349,24350,24369,24370,24371,24372,24377,24378,24379,24380,24381,24382,24383,24384,24385,24422,24423,24424,24425,24426,24427,24428,24429,24430,24446,24447,24448,24449,24450,24451,24457,24458,24459,24460,24461,24462,24463,24464,24502,24503,24504,24505,24506,24507,24508,24509,24510,24526,24527,24528,24529,24530,24531,24532,24537,24538,24539,24540,24541,24542,24543,24582,24583,24584,24585,24586,24588,24589,24606,24607,24608,24609,24610,24611,24612,24617,24618,24619,24620,24621,24622,24663,24664,24665,24667,24668,24669,24690,24691,24692,24697,24698,24699,24700,24701,24702,24747,24748,24767,24768,24769,24770,24771,24777,24778,24779,24780,24781,24847,24848,24849,24850,24857,24858,24859,24860,24927,24928,24929,24930,24931,24932,24933,24934,24937,24938,24939,25004,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25015,25083,25084,25085,25086,25087,25088,25089,25090,25091,25092,25093,25094,25163,25164,25165,25166,25167,25168,25169,25247,25248,25327,25328,25329,25330,25331,25403,25404,25406,25407,25408,25409,25410,25411,25412,25413,25482,25483,25484,25486,25487,25488,25489,25490,25491,25492,25493,25562,25563,25564,25566,25567,25572,25573,25642,25643,25651,25652,25653,25730,25731,25732,25733,25809,25810,25811,25812,25888,25889,25890,25891,25892,25893,25967,25968,25969,25970,25971,25972,25973,26046,26047,26048,26049,26052,26053,26126,26127,26128,26131,26132,26133,26206,26207,26208,26210,26211,26212,26286,26287,26288,26289,26290,26291,26292,26367,26368,26369,26370,26371,26447,26448,26449,26527,26528,26529,26607,26608,26609,26610,26611,26612,26686,26687,26688,26689,26690,26691,26692,26766,26767,26768,26769,26770,26771,26847,26848,26849,26850,26927,26928,26929,27006,27007,27008,27009,27010,27011,27087,27088,27089,27090,27091,27092,27168,27169,27170,27171,27172,27250,27251,27252,27330,27331,27332,27409,27410,27411,27488,27489,27490,27568,27569,29250,29251,29252,29253,29323,29324,29325,29326,29327,29328,29329,29330,29331,29332,29333,29334,29402,29403,29404,29405,29406,29407,29408,29409,29410,29411,29412,29413,29482,29483,29484,29485,29486,29487,29488,29489,29567,29568,29569,29647,29648,29649,29727,29728,29729,29807,29808,29809,29812,29813,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29961,29962,29963,29964,29965,29966,29967,29968,29969,29970,29971,29972,29973,30041,30042,30043,30044,30045,30046,30047,30048,30049,30050,30051,30052,30053,30122,30123,30124,30204,30205,30284,30285,30289,30290,30291,30292,30293,30363,30364,30365,30366,30367,30368,30369,30370,30371,30372,30373,30374,30443,30444,30445,30446,30447,30448,30449,30450,30451,30452,30453,30454,30523,30524,30525,30526,30527,30528,30529,30530,30533,30603,30604,30608,30609,30610,30683,30684,30688,30689,30690,30763,30764,30767,30768,30769,30770,30771,30843,30844,30845,30846,30847,30848,30849,30850,30851,30852,30924,30925,30926,30927,30928,30930,30931,30932,30933,31004,31005,31006,31007,31011,31012,31013,31092,31093,31094,31172,31173,31174,31249,31250,31251,31252,31253,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31403,31404,31405,31406,31407,31408,31409,31410,31411,31412,31413,31414,31483,31484,31485,31486,31487,31488,31489,31490,31563,31564,31565,31568,31569,31643,31644,31647,31648,31649,31722,31723,31724,31727,31728,31729,31788,31789,31802,31803,31804,31807,31808,31809,31861,31862,31863,31864,31865,31866,31867,31868,31869,31870,31882,31883,31884,31887,31888,31940,31941,31942,31943,31944,31945,31946,31947,31948,31949,31950,31963,31964,32020,32021,32022,32023,32024,32025,32026,32100,32101,32102,32105,32106,32107,32180,32181,32184,32185,32186,32187,32260,32261,32262,32264,32265,32266,32267,32268,32340,32341,32342,32343,32344,32345,32347,32348,32349,32421,32422,32423,32424,32427,32428,32429,32430,32449,32450,32451,32452,32453,32508,32509,32510,32523,32524,32525,32526,32527,32528,32529,32530,32531,32532,32533,32585,32586,32587,32588,32589,32603,32604,32605,32606,32607,32608,32609,32610,32611,32612,32613,32617,32618,32664,32665,32666,32667,32668,32669,32670,32683,32684,32685,32686,32687,32688,32691,32692,32693,32697,32698,32743,32744,32745,32746,32747,32748,32749,32750,32763,32764,32765,32770,32771,32772,32776,32777,32822,32823,32824,32825,32826,32827,32828,32829,32830,32843,32844,32845,32850,32851,32852,32855,32856,32857,32902,32903,32904,32905,32906,32908,32909,32923,32924,32925,32930,32931,32932,32934,32935,32936,32937,32982,32983,32984,32985,32987,32988,32989,33003,33004,33005,33009,33010,33011,33013,33014,33015,33016,33063,33067,33068,33069,33070,33083,33084,33085,33088,33089,33090,33091,33092,33093,33094,33095,33096,33144,33145,33146,33148,33149,33150,33164,33165,33166,33167,33168,33169,33170,33171,33172,33173,33174,33175,33223,33224,33225,33226,33227,33228,33229,33230,33244,33245,33246,33247,33248,33249,33250,33251,33252,33253,33254,33302,33303,33304,33305,33306,33307,33308,33309,33310,33325,33326,33327,33328,33329,33330,33331,33332,33333,33382,33383,33384,33386,33387,33388,33389,33390,33402,33403,33404,33405,33406,33407,33408,33409,33410,33411,33462,33463,33464,33466,33467,33468,33469,33479,33480,33481,33482,33483,33484,33485,33486,33487,33488,33489,33490,33491,33492,33493,33543,33544,33547,33548,33556,33557,33558,33559,33560,33561,33562,33563,33564,33566,33567,33568,33569,33570,33571,33572,33573,33623,33624,33625,33626,33627,33628,33629,33633,33634,33635,33636,33637,33638,33639,33640,33641,33642,33643,33644,33645,33646,33647,33648,33649,33650,33651,33652,33653,33701,33702,33703,33704,33705,33706,33707,33708,33709,33710,33711,33712,33713,33714,33715,33716,33717,33718,33719,33720,33721,33722,33723,33724,33725,33726,33727,33728,33729,33731,33732,33733,33780,33781,33782,33783,33784,33785,33786,33787,33788,33789,33790,33791,33792,33793,33794,33795,33796,33797,33798,33799,33800,33801,33802,33803,33805,33806,33807,33808,33811,33812,33813,33860,33861,33862,33863,33864,33866,33867,33868,33869,33870,33871,33872,33873,33874,33875,33876,33877,33878,33879,33880,33881,33882,33890,33891,33892,33943,33944,33945,33946,33947,33948,33949,33950,33951,33952,33953,33954,33955,33956,33957,33958,33959,33960,33970,33971,34018,34019,34020,34021,34022,34023,34024,34025,34026,34027,34028,34029,34030,34031,34032,34033,34034,34035,34036,34037,34038,34048,34049,34050,34051,34052,34095,34096,34097,34098,34099,34100,34101,34102,34103,34104,34105,34106,34107,34108,34109,34110,34111,34112,34113,34114,34115,34116,34127,34128,34129,34130,34131,34132,34133,34172,34173,34174,34175,34176,34177,34178,34179,34180,34181,34182,34183,34184,34185,34186,34187,34188,34189,34190,34191,34192,34193,34194,34195,34206,34207,34208,34209,34210,34212,34213,34250,34251,34252,34253,34254,34255,34256,34257,34258,34259,34260,34261,34262,34263,34264,34265,34266,34267,34268,34269,34270,34271,34272,34273,34286,34287,34288,34292,34293,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34343,34344,34345,34346,34347,34348,34349,34350,34351,34352,34366,34367,34368,34369,34371,34372,34373,34406,34407,34408,34409,34410,34411,34412,34413,34414,34415,34416,34417,34418,34419,34420,34421,34422,34423,34424,34425,34426,34427,34428,34429,34430,34447,34448,34451,34452,34485,34486,34487,34488,34489,34490,34491,34492,34493,34494,34495,34496,34497,34498,34499,34500,34501,34502,34503,34504,34505,34506,34507,34508,34509,34510,34530,34531,34532,34563,34564,34565,34566,34567,34568,34569,34570,34571,34572,34573,34574,34575,34576,34577,34578,34579,34580,34581,34582,34583,34584,34585,34586,34587,34588,34609,34610,34611,34643,34644,34645,34646,34647,34648,34649,34650,34651,34652,34653,34654,34655,34656,34657,34658,34659,34660,34661,34662,34663,34664,34665,34666,34667,34668,34688,34689,34690,34691,34692,34693,34722,34723,34724,34725,34726,34727,34728,34729,34730,34731,34732,34733,34734,34735,34736,34737,34738,34739,34740,34741,34742,34743,34744,34745,34746,34747,34748,34767,34768,34769,34770,34771,34772,34773,34802,34803,34804,34805,34806,34807,34808,34809,34810,34811,34812,34813,34814,34815,34816,34817,34818,34819,34820,34821,34822,34823,34824,34825,34826,34827,34828,34829,34846,34847,34848,34849,34852,34853,34882,34883,34884,34885,34886,34887,34888,34889,34890,34891,34892,34893,34894,34895,34896,34897,34898,34899,34900,34901,34902,34903,34904,34905,34906,34907,34908,34909,34926,34927,34928,34931,34932,34933,34963,34964,34965,34966,34967,34968,34969,34970,34971,34972,34973,34974,34975,34976,34977,34978,34979,34980,34981,34982,34983,34984,34986,34987,34988,34989,34991,34992,35006,35007,35008,35010,35011,35012,35044,35045,35046,35047,35048,35049,35050,35051,35052,35053,35054,35055,35056,35057,35058,35059,35060,35061,35062,35063,35064,35065,35066,35067,35068,35069,35071,35072,35073,35086,35087,35088,35089,35090,35091,35092,35125,35126,35127,35128,35129,35130,35131,35132,35133,35134,35135,35136,35137,35138,35139,35140,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35152,35153,35167,35168,35169,35170,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,35234,35247,35248,35249,35289,35290,35291,35292,35293,35294,35295,35296,35297,35298,35299,35300,35301,35302,35303,35304,35305,35306,35307,35308,35309,35312,35313,35314,35327,35328,35329,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35390,35391,35392,35393,35394,35395,35396,35407,35408,35409,35410,35411,35412,35454,35455,35456,35457,35458,35459,35460,35461,35462,35463,35464,35465,35466,35467,35468,35469,35470,35471,35472,35473,35474,35475,35476,35477,35478,35486,35487,35488,35489,35490,35491,35492,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,35556,35557,35558,35559,35560,35561,35566,35567,35568,35569,35570,35571,35620,35621,35622,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35647,35648,35649,35650,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35727,35728,35729,35786,35787,35788,35789,35790,35791,35792,35793,35794,35795,35796,35797,35798,35799,35800,35801,35802,35803,35804,35805,35806,35807,35808,35809,35810,35811,35870,35871,35872,35873,35874,35875,35876,35877,35878,35879,35880,35881,35882,35883,35884,35885,35886,35887,35888,35889,35890,35891,35892,35953,35954,35955,35956,35957,35958,35959,35960,35961,35962,35963,35964,35965,35966,35967,35968,35969,35970,35971,35972,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36103,36104,36108,36109,36110,36120,36121,36122,36123,36124,36125,36126,36127,36128,36129,36130,36131,36132,36133,36134,36135,36136,36137,36138,36182,36183,36184,36185,36188,36189,36190,36204,36205,36206,36207,36209,36210,36211,36212,36213,36214,36215,36216,36217,36218,36219,36220,36261,36262,36263,36264,36265,36269,36270,36287,36288,36289,36290,36292,36293,36294,36295,36296,36297,36298,36299,36300,36301,36302,36340,36341,36342,36344,36345,36346,36348,36349,36350,36366,36367,36368,36369,36370,36371,36372,36373,36374,36375,36376,36377,36378,36379,36380,36381,36382,36383,36384,36385,36420,36421,36422,36424,36425,36426,36428,36429,36430,36446,36447,36448,36449,36450,36451,36452,36453,36454,36455,36456,36457,36458,36459,36460,36461,36462,36463,36464,36465,36466,36467,36500,36501,36505,36506,36507,36508,36509,36531,36532,36533,36534,36536,36537,36538,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36580,36581,36582,36585,36586,36587,36588,36589,36608,36609,36610,36611,36612,36613,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36660,36661,36662,36666,36667,36668,36687,36688,36689,36690,36691,36692,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36710,36711,36712,36713,36741,36742,36743,36744,36767,36768,36769,36780,36781,36782,36783,36784,36785,36786,36787,36788,36789,36790,36791,36792,36793,36794,36823,36824,36825,36826,36827,36828,36829,36848,36849,36862,36863,36864,36865,36866,36867,36868,36869,36870,36871,36872,36873,36874,36875,36876,36901,36902,36903,36904,36905,36906,36907,36908,36909,36910,36928,36929,36930,36931,36932,36933,36943,36944,36945,36946,36947,36948,36949,36950,36951,36952,36953,36954,36955,36956,36957,36980,36981,36982,36983,36984,36985,36986,36987,36988,36989,36990,37007,37008,37009,37010,37011,37012,37013,37024,37025,37026,37027,37028,37029,37030,37031,37032,37033,37034,37035,37036,37037,37038,37060,37061,37062,37063,37064,37068,37069,37070,37086,37087,37088,37089,37090,37092,37093,37104,37105,37106,37107,37108,37109,37110,37111,37112,37113,37114,37115,37116,37117,37118,37119,37143,37144,37147,37148,37149,37166,37167,37168,37171,37172,37173,37185,37186,37187,37188,37189,37190,37191,37192,37193,37194,37195,37196,37197,37198,37199,37223,37224,37227,37228,37246,37247,37248,37250,37251,37252,37253,37265,37266,37267,37268,37269,37270,37271,37272,37273,37274,37275,37276,37277,37278,37279,37280,37303,37305,37306,37307,37308,37309,37326,37327,37328,37329,37330,37331,37332,37345,37346,37347,37348,37349,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37384,37385,37386,37387,37388,37389,37390,37407,37408,37409,37410,37411,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37463,37464,37465,37466,37468,37469,37487,37488,37489,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37518,37519,37520,37542,37543,37544,37547,37548,37549,37567,37568,37569,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37622,37623,37624,37625,37626,37627,37628,37629,37646,37647,37648,37649,37650,37651,37652,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37702,37703,37704,37705,37706,37707,37708,37709,37710,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37783,37784,37785,37786,37787,37788,37789,37790,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37834,37835,37836,37837,37863,37864,37882,37883,37884,37891,37892,37893,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37943,37944,37945,37946,37947,37948,37949,37971,37972,37973,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37995,38021,38022,38023,38024,38025,38026,38027,38028,38029,38030,38050,38051,38052,38061,38062,38063,38064,38065,38066,38067,38068,38069,38070,38071,38072,38073,38074,38100,38101,38102,38103,38104,38105,38106,38107,38108,38109,38110,38129,38130,38131,38141,38142,38143,38144,38145,38146,38147,38148,38149,38150,38151,38152,38153,38180,38181,38182,38183,38184,38188,38189,38190,38207,38208,38209,38210,38211,38212,38213,38220,38221,38222,38223,38224,38225,38226,38227,38228,38229,38230,38231,38263,38264,38267,38268,38269,38286,38287,38288,38289,38290,38291,38292,38293,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38343,38344,38346,38347,38348,38367,38368,38369,38371,38372,38373,38379,38380,38381,38382,38383,38384,38385,38386,38387,38388,38424,38425,38426,38427,38428,38429,38450,38451,38452,38459,38460,38461,38462,38463,38464,38465,38466,38467,38503,38504,38505,38506,38507,38508,38509,38510,38529,38530,38531,38532,38538,38539,38540,38541,38542,38543,38544,38545,38582,38583,38584,38585,38586,38587,38588,38589,38590,38606,38607,38608,38609,38610,38611,38618,38619,38620,38621,38622,38623,38624,38662,38663,38664,38665,38666,38667,38668,38669,38670,38686,38687,38688,38689,38690,38691,38692,38698,38699,38700,38701,38702,38703,38742,38743,38744,38745,38746,38748,38749,38766,38767,38768,38769,38770,38771,38772,38777,38778,38779,38780,38781,38782,38823,38824,38825,38827,38828,38829,38850,38851,38852,38857,38858,38859,38860,38861,38862,38907,38908,38927,38928,38929,38930,38931,38937,38938,38939,38940,38941,39007,39008,39009,39010,39017,39018,39019,39020,39087,39088,39089,39090,39091,39092,39093,39094,39098,39099,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,39243,39244,39245,39246,39247,39248,39249,39250,39251,39252,39253,39254,39323,39324,39325,39326,39327,39328,39329,39407,39408,39487,39488,39489,39490,39491,39563,39564,39566,39567,39568,39569,39570,39571,39572,39573,39642,39643,39644,39646,39647,39648,39649,39650,39651,39652,39653,39722,39723,39724,39726,39727,39732,39733,39802,39803,39811,39812,39813,39890,39891,39892,39893,39969,39970,39971,39972,40048,40049,40050,40051,40052,40053,40127,40128,40129,40130,40131,40132,40133,40206,40207,40208,40209,40212,40213,40286,40287,40288,40291,40292,40293,40366,40367,40368,40370,40371,40372,40446,40447,40448,40449,40450,40451,40452,40527,40528,40529,40530,40531,40607,40608,40609,40687,40688,40689,40767,40768,40769,40770,40771,40772,40846,40847,40848,40849,40850,40851,40852,40926,40927,40928,40929,40930,40931,41007,41008,41009,41010,41087,41088,41089,41166,41167,41168,41169,41170,41171,41247,41248,41249,41250,41251,41252,41328,41329,41330,41331,41332,41410,41411,41412,41490,41491,41492,41569,41570,41571,41648,41649,41650,41728,41729];
b = [250,221,171,188,236,211,188,158,127,97,55,14,0,0,14,231,217,5,0,0,0,0,0,15,60,87,104,180,236,82,69,110,171,165,0,146,219,0,171,213,0,179,190,0,185,171,0,212,246,249,252,234,212,84,0,92,92,53,11,58,253,94,37,24,1,0,0,0,0,0,1,0,71,245,28,0,31,77,127,170,197,212,224,233,237,250,235,232,254,254,254,70,162,231,202,193,236,190,0,54,108,98,67,26,0,0,0,45,254,125,0,11,0,0,15,70,96,119,87,76,254,70,48,244,214,227,218,111,230,253,37,82,172,0,189,40,89,84,0,85,85,30,179,0,34,0,128,164,0,132,201,15,34,240,63,0,172,254,69,0,0,16,201,216,8,12,219,243,145,124,221,158,0,75,87,0,224,229,103,242,252,233,210,192,218,230,152,173,139,97,62,36,3,0,0,0,210,135,0,0,0,1,6,0,57,101,100,104,229,143,0,128,207,252,107,0,234,99,10,248,54,46,49,50,243,6,98,248,11,87,201,0,154,251,250,226,0,100,198,35,223,254,206,224,192,140,99,62,34,17,15,195,247,40,146,254,252,222,6,0,0,0,16,39,56,63,41,202,246,253,203,0,105,177,222,110,163,165,22,252,34,31,243,137,30,219,12,0,83,154,5,239,74,56,154,0,117,222,5,46,47,0,195,100,0,166,172,20,30,185,245,37,11,238,248,219,188,205,254,253,253,200,89,242,203,70,176,149,94,50,14,0,0,0,151,209,120,80,116,231,124,0,0,0,0,16,54,92,42,0,130,171,231,111,0,0,3,0,38,243,153,0,95,184,218,249,75,0,214,236,124,100,0,163,76,90,197,0,190,155,0,214,230,0,78,152,170,197,0,209,231,6,191,214,0,206,126,0,238,158,0,169,213,108,246,164,4,148,14,89,77,48,117,0,233,62,19,246,238,105,194,241,61,0,104,125,11,221,154,0,204,202,0,141,240,118,159,249,254,254,169,216,216,243,206,0,131,237,43,35,246,239,124,150,238,252,150,80,207,222,0,165,71,0,128,144,21,0,192,235,118,158,233,245,124,0,0,32,246,243,0,154,230,57,0,0,14,185,213,111,180,231,238,216,0,150,220,0,139,223,0,199,250,173,157,218,168,129,213,228,235,135,4,242,108,8,55,39,253,250,234,238,215,136,153,208,211,246,143,25,250,237,44,0,183,246,231,233,248,204,140,83,48,24,4,0,107,254,178,185,254,253,253,241,228,232,250,212,134,133,87,0,41,57,15,58,0,161,112,25,247,205,159,141,209,248,234,225,234,252,216,136,115,192,175,0,140,214,27,147,251,0,108,251,218,72,0,9,0,0,0,15,224,254,242,229,225,236,253,216,137,113,173,231,246,122,0,87,7,107,232,0,142,189,6,0,0,16,106,168,222,180,0,193,235,226,227,238,252,215,136,112,169,229,231,217,217,212,89,35,151,152,0,225,196,79,175,58,75,149,13,217,230,231,239,249,216,138,111,167,228,232,219,213,216,238,243,24,118,48,112,223,26,160,249,237,244,220,144,111,162,226,233,220,215,212,226,250,78,69,77,182,242,240,234,238,225,159,109,154,224,234,220,217,213,216,239,110,0,58,163,253,241,216,187,163,122,96,109,171,117,139,215,235,222,217,215,212,225,250,197,30,0,28,25,0,150,251,219,239,238,88,0,0,0,5,4,0,104,204,237,224,219,216,214,214,236,183,0,57,193,251,42,65,145,0,130,108,62,139,201,176,99,174,236,227,220,218,216,213,218,245,45,2,210,48,85,254,250,146,11,166,231,239,187,125,204,233,224,219,217,216,213,222,250,153,1,37,251,216,0,167,254,231,233,240,223,228,227,179,99,89,26,62,24,21,205,222,216,213,222,252,232,221,82,39,254,235,237,231,219,223,221,237,96,0,19,12,0,13,102,210,219,214,218,250,150,5,211,246,237,228,218,221,221,221,222,225,102,57,3,98,212,237,218,215,213,239,185,0,135,249,230,218,221,221,221,221,227,204,13,21,175,244,226,215,216,214,221,254,209,12,0,0,37,222,248,220,220,221,221,221,221,237,144,0,153,245,231,236,223,215,213,227,222,37,0,84,116,0,114,247,219,220,221,221,221,221,232,175,2,0,17,40,89,191,222,213,226,228,22,18,194,24,117,234,217,221,221,221,221,220,239,117,75,92,43,0,73,229,227,229,248,92,7,232,178,0,187,254,232,218,220,221,221,221,225,214,121,216,86,107,240,121,141,244,70,0,205,181,0,68,237,219,219,221,221,220,230,215,114,145,107,201,238,130,0,165,246,218,25,4,14,0,71,242,246,226,218,220,221,237,175,27,0,0,68,241,232,49,42,221,232,253,137,1,138,191,254,238,221,236,155,0,42,184,81,7,175,251,151,0,190,220,222,247,202,3,222,209,2,72,237,245,31,116,156,149,119,1,202,223,213,215,231,251,216,2,211,92,40,242,70,57,233,214,93,0,39,180,227,228,216,212,217,236,252,166,1,69,58,53,163,251,16,108,211,50,0,37,20,0,0,83,199,137,116,164,217,231,218,212,218,235,251,155,0,6,41,11,0,119,59,0,0,22,67,85,112,147,190,231,230,235,204,143,115,144,199,230,223,213,217,233,214,160,213,97,0,111,217,141,209,254,242,227,219,222,234,217,164,120,127,175,220,229,216,214,242,245,59,0,166,248,236,225,221,230,229,188,135,116,147,200,230,231,58,7,214,254,247,235,225,226,232,211,160,121,131,169,22,11,99,132,202,254,247,235,228,232,227,188,142,59,0,0,0,0,138,240,244,254,247,236,232,233,225,174,107,77,0,64,238,216,222,238,253,254,247,237,238,240,197,5,48,158,205,229,218,218,234,250,246,251,244,133,214,253,111,9,192,163,116,134,192,229,221,215,229,248,114,0,41,218,228,0,97,154,0,177,244,230,173,120,123,181,229,222,214,228,246,116,0,93,6,72,23,78,215,123,5,181,252,242,237,244,243,193,125,118,181,230,221,213,228,248,215,0,150,147,0,217,242,3,124,236,18,0,0,52,160,250,252,238,233,242,250,199,125,118,193,235,218,215,231,251,140,6,241,229,0,132,179,0,195,252,152,145,140,58,0,31,87,185,247,231,226,242,253,199,116,132,216,231,214,218,238,102,29,64,36,253,54,48,186,23,0,118,245,223,221,242,250,176,107,176,237,221,215,225,249,129,0,176,179,0,5,2,195,238,161,62,0,41,165,253,233,216,222,247,231,127,141,230,224,217,220,242,222,13,60,138,52,181,198,11,0,44,169,253,240,218,217,227,246,159,128,230,223,220,218,235,238,251,207,185,194,0,105,239,219,220,219,242,156,132,232,220,221,217,234,111,25,248,208,158,136,211,83,41,232,218,221,220,238,131,176,235,219,221,217,239,251,220,73,0,11,0,0,0,15,224,93,20,94,32,102,246,249,221,220,221,224,216,119,236,225,220,220,220,248,190,7,0,0,16,104,166,220,179,0,192,243,32,0,13,35,0,135,230,219,221,220,236,145,173,249,220,221,218,234,195,76,173,58,75,148,17,242,253,72,0,125,250,25,107,236,218,221,221,228,182,138,245,234,219,220,225,254,49,111,237,32,172,130,0,184,216,0,166,236,217,221,221,227,189,138,233,239,222,220,223,253,72,178,245,224,62,4,234,237,43,26,244,232,216,221,221,229,177,144,231,235,228,218,225,254,251,240,125,29,18,142,172,0,49,81,11,16,204,224,217,221,221,235,146,171,228,233,230,217,232,192,18,0,69,49,20,246,113,0,60,113,232,249,216,219,221,222,222,116,214,221,235,227,218,245,183,0,55,222,87,57,186,7,233,235,213,220,221,234,163,142,235,220,239,219,229,246,22,91,123,16,220,216,1,209,253,220,216,221,224,219,109,213,222,231,234,220,250,202,0,167,211,66,0,140,253,246,174,4,130,149,184,251,238,212,219,221,236,134,161,234,220,240,221,243,251,76,0,0,1,14,0,21,234,230,127,78,36,1,0,0,0,0,0,70,251,253,219,215,220,233,177,119,233,218,235,229,236,234,162,191,227,238,179,68,239,113,0,4,46,103,152,185,205,207,106,0,167,235,212,219,227,211,104,213,224,228,235,234,203,188,218,190,240,212,0,155,250,217,216,222,231,114,181,231,222,238,236,111,23,238,192,138,116,201,120,1,229,231,212,219,237,140,147,236,219,237,239,253,245,203,66,0,3,0,0,0,9,219,181,0,156,248,216,216,234,175,118,232,219,234,245,253,183,0,0,0,21,124,183,234,190,0,193,177,8,140,231,212,225,209,104,216,223,231,250,254,202,96,190,62,76,137,22,246,171,114,11,8,30,52,214,252,218,217,232,116,183,229,229,252,46,114,235,37,183,233,15,0,10,57,81,0,116,241,212,234,157,137,234,229,254,84,186,240,237,209,194,231,214,0,158,231,218,208,109,220,231,254,248,136,43,17,31,172,236,34,51,254,223,231,130,170,240,253,231,43,0,18,26,41,4,223,181,18,54,239,251,225,191,117,236,251,252,47,35,237,67,113,226,0,189,247,152,40,0,92,254,244,229,127,181,174,4,244,174,1,228,186,0,223,93,0,6,7,0,74,244,240,194,117,244,177,0,57,0,151,30,92,215,216,240,238,127,0,181,240,141,167,130,62,179,92,56,249,159,0,227,253,224,117,223,225,248,254,229,233,21,118,193,131,228,18,13,69,163,156,209,0,42,214,183,125,109,200,206,219,253,227,186,91,0,20,7,0,0,0,40,254,139,16,0,0,0,0,61,131,189,232,196,155,92,26,110,196,126,19,251,138,38,97,66,241,220,241,226,248,252,50,0,1,0,6,87,232,161,0,184,210,22,51,84,93,49,0,84,106,0,207,254,249,29,43,243,235,200,0,134,245,37,53,252,254,70,13,224,252,88,0,0,53,225,230,53,0,72,104,0,117,233,29,9,183,25,116,98,5,226,185,0,183,68,0,215,192,4,61,211,19,10,22,0,61,238,133,0,125,179,253,199,4,224,216,1,210,174,2,80,69,65,172,158,0,2,32,10,0,115,206,143,208,104,0,100,249,71,0,153,77,7,222,250,26,13,129,165,224,147,17,0,0,1,171,248,228,187,8,67,251,18,102,126,4,224,161,0,173,151,0,170,129,195,249,218,168,188,234,209,185,156,125,95,53,12,0,0,15,232,216,4,0,0,0,0,0,15,61,89,105,182,236,83,69,111,172,165,0,147,219,0,171,212,0,179,190,0,185,170,0,212,244,246,251,232,209,82,0,87,90,51,9,56,253,92,36,22,0,0,0,0,0,0,1,0,71,245,29,0,32,78,128,171,198,213,225,233,237,250,236,233,254,254,254,66,161,254,229,199,190,234,190,0,50,107,95,64,24,0,0,0,45,254,123,0,11,0,0,15,71,97,119,87,77,254,69,48,244,214,228,217,110,230,254,37,82,172,0,189,40,88,81,0,84,86,28,178,0,35,0,126,164,0,131,197,13,35,240,64,0,171,254,69,0,0,17,202,216,9,11,218,243,147,126,221,159,0,74,88,0,224,230,104,242,251,231,207,191,217,229,151,170,135,93,60,34,3,0,0,0,208,135,0,0,0,1,6,0,58,103,101,105,229,143,0,128,208,253,106,0,234,98,10,248,52,47,49,51,243,6,98,247,10,87,201,0,154,250,250,226,0,100,199,35,223,204,221,189,137,96,59,32,14,13,193,247,40,147,254,252,222,6,0,0,0,16,40,57,63,42,202,247,253,202,0,107,178,222,107,162,165,22,252,34,30,242,137,30,219,12,0,80,154,4,238,70,57,154,0,116,222,6,42,45,0,195,100,0,164,174,21,31,185,246,38,9,236,247,217,185,203,254,253,253,200,90,242,200,66,173,147,91,48,12,0,0,0,150,206,116,76,112,228,124,0,0,0,0,16,55,94,43,0,130,169,228,107,0,0,4,0,35,243,153,0,96,185,219,249,76,0,214,240,104,251,98,0,164,77,91,198,0,190,155,0,214,230,0,79,136,126,196,0,210,230,6,192,212,0,206,124,0,238,158,0,169,203,57,218,164,4,145,14,89,76,48,117,0,233,62,19,246,217,75,148,242,61,0,105,120,10,222,155,0,204,201,0,143,204,82,126,227,254,254,170,217,212,242,206,0,128,234,40,36,242,180,58,119,208,252,146,78,203,222,0,164,71,0,126,141,19,3,172,138,37,126,202,242,123,0,0,31,245,243,0,154,232,60,0,0,21,126,76,33,153,201,236,215,0,151,221,0,137,223,0,200,244,162,113,94,43,82,187,203,235,135,4,242,109,7,54,39,253,250,234,213,176,132,78,71,137,177,192,247,144,25,250,237,45,0,184,253,240,225,205,163,117,70,70,74,46,17,2,0,107,253,179,183,254,253,253,243,228,216,192,148,114,82,72,120,81,0,44,59,15,58,0,159,112,25,245,202,156,140,206,252,243,230,217,207,177,131,108,96,85,108,166,142,0,142,211,25,149,251,0,108,250,215,71,0,8,0,0,0,13,219,252,231,218,211,198,157,114,109,112,102,110,149,188,214,115,0,82,6,109,231,0,142,187,4,0,0,17,111,171,218,167,0,165,225,208,184,136,102,117,133,117,108,143,186,195,203,219,215,90,35,152,150,0,225,197,83,179,59,74,246,247,127,16,193,170,116,97,131,157,128,103,140,185,193,200,212,219,238,242,22,118,48,97,234,219,198,26,91,115,101,149,179,135,98,135,185,191,196,211,216,227,249,77,69,250,238,225,217,219,65,157,226,194,138,96,135,168,197,143,94,129,184,190,191,209,216,218,239,104,0,54,159,251,239,226,216,214,223,219,218,206,180,121,44,29,63,100,148,99,117,178,191,186,203,217,214,225,250,195,28,0,28,26,0,147,254,244,229,217,213,213,216,217,184,209,180,56,0,0,0,12,6,0,87,169,195,183,194,214,217,215,236,179,0,58,193,251,42,65,251,235,221,214,213,215,216,216,234,129,0,62,114,74,57,118,168,147,84,146,196,186,183,205,219,215,218,245,44,2,208,46,86,249,232,217,212,214,216,216,216,216,219,219,82,3,117,189,203,212,216,155,105,169,193,183,187,211,219,213,222,250,154,1,37,251,216,0,167,251,230,215,212,215,216,216,216,216,216,222,196,102,114,183,194,189,147,82,73,19,50,19,14,176,220,218,213,222,252,233,222,81,40,254,238,218,212,215,216,216,216,216,216,216,222,191,89,134,195,187,183,196,81,0,17,11,0,9,91,210,220,214,218,250,149,6,212,254,230,212,215,216,216,216,216,216,216,216,219,212,92,149,196,183,183,183,184,187,86,46,3,82,174,226,220,215,213,239,184,0,131,229,212,216,216,216,216,216,216,216,216,216,228,140,123,196,182,183,183,183,188,169,11,18,146,199,200,218,216,214,221,254,207,12,0,0,36,221,246,214,215,216,216,216,216,216,216,216,216,216,221,114,174,185,183,183,183,183,196,119,0,125,201,187,217,226,215,213,227,221,35,0,84,117,0,114,239,213,216,216,216,216,216,216,216,216,216,217,215,114,181,183,183,183,183,183,192,145,2,0,12,29,81,191,222,213,226,227,21,19,195,23,118,250,215,215,216,216,216,216,216,216,216,216,216,228,131,157,191,182,183,183,183,182,198,100,64,77,36,0,73,229,226,230,248,91,7,232,177,0,187,239,213,215,216,216,216,216,216,216,216,216,221,197,103,187,189,182,183,183,183,186,177,103,180,221,70,106,241,120,136,244,71,0,203,179,0,69,240,215,213,216,216,216,216,216,216,216,215,227,180,104,183,194,181,183,183,182,190,179,96,119,88,168,229,134,0,163,247,219,25,4,13,0,72,242,249,228,214,213,216,216,216,216,216,216,215,228,187,107,146,199,188,181,183,197,142,22,0,0,54,200,221,52,41,221,232,253,137,1,139,192,244,225,214,213,215,216,216,216,216,215,225,217,135,115,163,196,202,127,0,35,154,66,7,144,208,134,0,191,220,222,247,202,3,222,247,230,217,212,214,216,216,216,215,218,229,189,125,123,147,6,67,198,200,24,98,131,125,96,0,191,226,215,215,231,251,216,2,211,251,237,224,215,213,214,216,216,215,222,229,194,42,10,165,197,58,48,192,175,75,0,33,149,201,221,219,214,218,236,252,164,0,66,56,52,162,248,235,222,214,213,214,215,219,218,20,78,99,15,0,30,24,0,0,70,165,115,95,137,194,223,221,214,218,235,251,154,0,7,42,12,0,119,254,246,234,223,215,215,218,50,0,2,23,60,67,26,62,147,204,199,195,169,120,95,120,178,219,224,215,218,233,214,160,213,95,0,111,248,237,233,189,117,175,214,227,233,212,163,120,114,142,176,197,202,181,137,98,105,155,208,226,218,215,242,245,58,0,167,254,240,223,215,212,218,229,222,185,138,109,113,144,180,203,197,157,111,96,129,185,224,232,59,7,215,254,245,234,224,216,213,219,229,218,180,134,108,115,145,184,206,183,133,98,111,154,20,12,97,129,200,250,240,229,219,215,220,228,215,177,133,107,114,147,188,201,163,118,51,0,0,0,0,136,241,244,253,245,234,224,217,221,227,215,177,134,109,114,150,190,200,153,92,66,0,61,235,219,223,238,253,250,240,228,220,221,227,215,177,134,108,116,155,198,167,3,40,138,190,222,219,221,234,250,244,250,244,130,212,253,244,232,222,222,227,214,177,131,121,65,5,158,148,99,113,171,216,219,219,231,248,112,0,38,216,228,0,96,247,235,224,236,127,0,103,109,128,165,153,110,104,156,209,216,217,230,247,114,0,94,7,70,23,78,206,108,2,160,207,150,105,107,142,150,116,103,151,203,210,214,231,249,215,0,150,148,0,215,242,3,124,236,18,0,0,40,136,219,246,230,178,125,102,123,133,113,108,159,201,202,213,234,252,140,6,242,229,0,132,179,0,195,252,152,146,141,61,0,28,73,158,232,219,197,147,110,113,113,98,121,177,194,195,214,241,102,29,64,36,253,54,48,184,22,0,119,232,218,211,198,162,125,106,85,91,158,193,183,192,219,251,129,0,174,180,0,5,3,196,237,159,60,0,41,166,249,232,214,196,193,177,134,87,47,124,196,181,179,195,236,222,13,60,138,52,182,198,10,0,45,170,253,248,225,198,182,194,182,130,31,90,197,185,179,179,213,254,238,252,207,183,194,0,104,254,237,198,180,185,196,175,75,100,194,187,181,176,199,241,111,25,246,204,155,135,208,83,41,242,191,180,182,188,202,97,65,184,189,182,178,197,229,251,250,217,72,0,9,0,0,0,13,223,93,20,92,26,99,246,234,181,182,183,185,188,64,84,177,188,182,182,207,219,243,188,5,0,0,16,105,167,221,179,0,192,242,32,0,14,37,0,134,203,178,183,183,195,135,109,101,186,184,180,196,217,215,243,196,78,174,58,75,148,16,242,253,71,0,126,250,25,107,228,179,183,183,189,150,132,137,123,194,181,187,216,215,215,246,49,112,236,31,173,128,0,185,215,0,166,237,186,181,183,187,157,118,193,99,179,183,185,214,217,213,224,72,179,245,224,63,4,234,236,42,26,244,235,192,180,183,190,147,121,205,118,151,187,187,215,216,216,214,248,251,239,123,26,17,141,173,0,47,80,11,17,204,226,193,180,183,195,122,143,201,127,143,188,193,218,216,216,213,243,190,17,0,71,50,20,246,113,0,61,114,232,249,218,191,181,184,184,98,177,195,117,152,186,206,218,216,216,213,246,182,0,56,223,87,57,186,7,233,236,211,186,182,194,136,119,195,184,101,176,193,218,216,216,214,219,254,246,22,91,120,16,220,216,1,209,253,222,205,181,185,181,92,177,195,139,115,195,212,217,216,216,212,238,202,0,166,207,63,0,139,251,244,171,4,128,145,182,250,238,215,193,180,196,113,135,195,184,93,171,208,219,216,216,212,227,251,77,0,0,1,14,0,20,234,228,123,76,34,0,0,0,0,0,0,69,250,253,221,209,182,193,148,100,192,196,113,129,211,218,216,216,213,222,253,233,162,192,227,239,180,69,239,112,0,5,48,104,153,186,205,208,107,0,166,235,215,195,185,176,88,176,197,147,97,207,218,216,216,213,219,250,203,187,219,191,241,212,0,155,250,219,209,183,190,96,150,198,173,85,190,222,216,216,213,219,249,111,24,236,189,135,115,197,119,1,230,232,215,193,193,117,123,198,187,89,167,227,216,216,213,221,250,243,200,64,0,3,0,0,0,7,218,180,0,156,248,218,207,191,145,100,193,194,103,145,230,216,216,212,224,252,182,0,0,0,21,125,183,235,190,0,193,176,7,140,231,214,195,171,88,179,199,115,129,230,217,215,212,230,254,203,98,191,62,76,136,22,246,168,110,9,7,29,49,213,251,220,205,189,98,152,204,123,120,228,218,213,216,238,46,115,234,36,184,233,15,0,11,57,81,0,116,242,214,202,129,115,208,127,117,226,217,212,225,249,85,186,237,236,210,195,232,214,0,158,233,208,171,92,197,130,116,226,216,216,238,247,132,40,14,28,167,233,29,52,254,226,204,106,156,144,112,224,216,226,250,228,39,0,19,27,42,4,223,177,17,55,239,252,221,161,108,161,102,222,217,235,252,45,36,238,67,113,226,0,189,245,148,38,0,90,253,247,213,107,146,102,206,222,242,174,4,245,173,0,229,183,0,223,92,0,7,8,0,71,243,241,171,110,123,162,227,237,177,0,54,0,153,28,93,215,217,240,239,128,0,180,234,122,124,118,221,227,131,63,180,88,57,249,159,0,227,211,110,115,159,228,247,226,248,254,227,231,20,119,180,106,113,209,239,228,17,10,70,163,57,150,248,208,0,42,214,181,122,106,198,208,149,236,253,225,183,90,0,18,6,0,0,0,40,254,138,15,0,0,0,0,61,132,190,233,198,156,92,27,111,197,126,19,251,137,38,97,65,241,220,239,222,247,252,49,0,1,0,4,84,231,157,0,184,210,23,52,85,94,50,0,83,106,0,208,254,250,29,44,244,235,199,0,135,243,35,54,253,254,70,11,223,252,84,0,0,51,225,228,51,0,73,106,0,117,232,29,9,184,24,116,97,5,227,184,0,184,68,0,212,191,4,61,212,19,9,21,0,61,238,134,0,126,180,253,199,4,224,216,1,210,172,1,77,67,64,170,157,0,3,32,10,0,115,206,144,208,102,0,100,249,70,0,154,77,7,222,250,26,13,126,162,222,148,18,0,0,0,169,248,229,188,9,66,250,18,102,124,4,224,161,0,174,151,0,170,130,196,248,217,168,187,234,208,184,155,123,94,52,11,0,0,15,231,216,4,0,0,0,0,0,17,64,90,107,184,237,83,71,116,174,170,0,146,219,0,172,212,0,179,190,0,185,170,0,212,244,246,251,231,209,82,0,87,89,50,7,54,253,91,36,21,0,0,0,0,0,0,3,3,75,245,28,0,34,81,131,174,199,216,226,236,243,251,237,234,254,254,254,65,161,254,228,199,190,233,190,0,50,104,93,63,23,0,0,0,44,253,123,0,12,0,0,17,73,99,123,90,79,254,69,48,246,214,230,219,110,230,254,37,83,171,0,189,40,88,81,0,84,86,28,177,0,36,0,126,165,0,130,196,12,37,243,66,0,170,72,0,0,17,202,217,9,10,217,244,149,127,223,160,0,73,88,0,224,231,107,242,250,230,206,190,217,229,149,170,134,92,59,34,3,0,0,0,208,135,0,0,0,1,6,0,61,105,101,106,230,142,0,131,211,254,106,0,234,98,11,249,52,47,48,51,243,6,99,247,10,88,201,0,154,250,250,226,0,100,199,37,224,203,220,188,136,95,58,31,13,13,193,247,45,149,254,253,221,5,0,0,0,18,42,60,69,44,203,248,253,202,0,109,180,225,110,162,165,22,252,34,30,241,137,30,218,13,0,80,154,4,238,70,58,158,0,115,223,7,41,44,0,197,102,0,163,175,26,35,188,247,39,9,236,246,216,184,202,254,202,92,243,200,66,173,146,90,47,11,0,0,0,149,205,115,76,111,228,124,0,0,0,0,19,57,96,44,0,130,250,252,107,0,0,5,0,34,242,153,0,99,188,222,250,76,0,214,230,250,97,0,169,78,91,200,0,190,155,0,215,230,0,79,238,210,196,1,212,229,6,193,212,0,207,124,0,238,158,0,170,243,203,226,164,4,143,12,91,75,50,117,0,233,61,20,247,233,224,208,251,242,63,0,108,120,12,224,155,0,204,200,0,143,218,218,221,232,254,172,218,211,242,208,0,128,234,39,36,246,199,188,222,223,254,145,76,202,222,0,164,74,0,125,141,18,6,183,173,173,222,222,251,122,0,0,30,245,243,0,154,232,61,0,0,22,132,137,176,227,224,252,215,0,152,225,0,136,223,0,200,247,181,120,113,151,215,234,229,253,135,4,242,110,7,53,40,254,248,238,232,194,143,152,212,227,196,221,144,26,250,239,48,0,185,251,238,233,228,184,123,123,202,187,62,4,4,1,103,252,179,183,254,253,252,240,229,229,218,170,119,124,193,124,0,52,71,15,60,0,159,112,25,245,201,155,139,205,252,241,228,223,227,206,152,111,134,204,247,243,153,0,168,240,29,149,251,0,108,249,214,70,0,7,0,0,0,13,219,251,228,219,224,223,186,133,111,150,220,251,230,211,242,137,0,96,6,108,231,0,144,187,3,0,0,18,114,174,219,168,0,164,230,227,213,163,118,119,173,235,250,227,210,218,241,239,90,35,156,149,0,226,198,85,182,60,74,245,244,124,20,218,199,140,113,137,196,244,246,226,211,215,236,253,241,21,120,48,96,231,220,211,31,109,136,117,159,214,245,242,227,212,212,231,251,76,70,250,238,225,217,218,65,161,244,225,166,116,158,187,224,239,239,229,214,210,224,247,254,104,0,54,159,251,239,226,216,214,223,217,221,226,209,145,50,31,69,109,214,241,232,217,210,218,240,194,27,0,31,29,0,146,254,244,229,217,213,213,216,215,183,224,209,68,0,0,0,9,4,0,192,232,211,213,229,252,179,0,62,197,253,44,65,251,235,221,214,213,215,216,216,233,130,0,75,134,89,69,142,182,212,232,207,216,212,217,242,44,2,208,46,86,249,232,217,212,214,216,216,216,215,219,239,100,8,142,223,239,249,248,252,252,218,215,216,221,249,159,3,37,251,216,0,167,251,230,215,212,215,216,216,216,216,215,222,218,123,134,218,229,224,173,91,88,90,59,13,16,208,234,223,80,41,238,218,212,215,216,216,216,216,216,216,222,210,106,157,230,220,216,232,95,0,23,6,0,13,111,247,148,7,214,254,230,212,215,216,216,216,216,216,216,216,217,220,109,175,232,216,216,216,216,221,210,71,1,100,209,183,0,133,229,212,216,216,216,216,216,216,216,216,216,228,146,147,232,215,216,216,216,219,218,56,17,176,236,235,207,12,0,0,35,220,246,214,215,216,216,216,216,216,216,216,216,216,220,120,208,218,216,216,216,216,231,141,0,148,237,222,244,220,34,0,88,118,0,114,239,213,216,216,216,216,216,216,216,216,216,217,213,121,216,216,216,216,216,216,226,173,6,0,14,32,94,224,227,21,21,197,23,118,250,215,215,216,216,216,216,216,216,216,216,216,228,129,177,228,215,216,216,216,215,223,200,123,78,48,0,86,91,7,233,177,0,187,239,213,215,216,216,216,216,216,216,216,216,221,196,103,210,225,215,216,216,216,214,228,243,254,84,126,143,160,72,0,202,178,0,71,240,215,213,216,216,216,216,216,216,216,215,227,179,102,201,230,216,216,216,216,214,235,234,148,98,198,159,0,192,219,25,4,13,0,75,243,249,228,214,213,216,216,216,216,216,216,215,228,187,104,155,227,224,215,216,233,161,20,0,0,57,226,63,48,139,1,143,196,244,225,214,213,215,216,216,216,216,215,225,217,133,114,179,227,239,149,0,40,184,74,44,233,234,153,0,224,202,3,222,247,230,217,212,214,216,216,216,215,218,230,189,122,126,163,8,83,236,235,23,130,135,0,217,216,2,211,251,237,224,215,213,214,216,216,215,222,230,193,39,10,183,227,67,57,222,189,122,0,91,238,228,247,163,0,65,56,51,161,248,235,222,214,213,214,215,219,218,20,77,96,14,0,36,30,1,0,75,221,238,233,227,231,246,154,0,8,43,12,0,121,254,246,234,223,215,215,218,51,0,3,24,62,69,27,72,176,243,229,214,219,231,233,231,233,244,254,214,164,215,95,0,115,248,237,232,192,121,178,216,227,233,212,163,124,128,169,211,229,222,218,226,232,233,234,242,252,242,57,0,169,239,223,215,212,218,229,221,182,137,116,131,172,213,227,222,223,230,234,236,240,250,70,13,230,254,245,234,224,216,213,219,228,216,177,134,116,133,174,212,227,226,227,232,239,234,25,10,111,148,213,250,240,229,219,215,220,227,214,174,134,115,133,173,211,228,230,240,149,32,0,0,0,160,253,245,234,224,217,220,227,213,175,135,116,132,172,210,244,236,222,190,11,64,250,240,228,220,221,227,213,175,134,116,133,174,225,237,14,102,253,239,248,244,250,243,129,212,253,244,232,222,223,226,212,175,135,135,71,5,201,247,238,233,234,242,253,111,0,37,215,228,0,95,247,235,224,235,126,0,112,125,138,188,234,244,235,229,234,249,113,0,95,8,70,23,78,206,106,3,161,213,163,122,117,154,211,246,238,224,227,244,215,0,152,150,0,215,242,3,124,236,18,0,0,39,134,216,245,237,194,146,114,127,188,243,244,220,220,239,253,139,6,242,229,0,132,178,0,196,253,154,149,144,63,0,27,71,154,230,226,220,176,122,114,168,237,243,215,217,235,250,102,29,65,35,253,53,50,186,23,0,120,231,216,221,228,196,138,110,164,239,236,210,216,231,248,131,0,173,180,0,5,3,198,236,158,59,0,45,171,249,229,214,218,231,209,141,111,175,237,220,211,215,229,248,223,14,60,143,58,184,198,9,0,48,173,254,247,222,212,218,230,208,137,127,216,221,216,213,215,232,253,239,252,206,183,194,0,105,254,233,214,215,218,231,188,174,222,216,221,215,213,219,240,111,25,246,204,154,135,207,84,41,239,214,215,215,222,219,221,143,202,224,215,214,212,226,251,250,216,71,0,8,0,0,0,13,222,94,19,91,26,98,246,239,214,216,216,215,225,199,103,206,222,216,216,213,218,243,188,4,0,0,17,108,170,223,180,0,193,242,31,0,16,38,0,134,226,213,216,216,213,241,189,106,220,217,216,216,214,215,243,197,80,177,59,75,147,17,242,253,71,0,129,252,25,107,246,215,216,216,214,223,248,145,143,229,216,216,216,214,215,246,48,112,236,34,174,128,0,187,215,0,166,223,214,216,215,222,234,214,114,210,217,216,216,216,213,224,75,180,246,227,64,4,233,235,41,28,245,230,213,216,214,225,231,227,138,177,223,216,216,216,216,214,248,252,238,122,26,16,140,174,0,47,79,9,18,206,231,213,216,213,230,226,227,149,167,225,216,216,216,216,213,243,190,16,0,73,51,20,246,114,0,64,119,234,227,213,216,216,236,217,228,136,179,222,216,216,216,216,213,246,182,0,57,225,86,57,186,7,232,253,219,215,213,227,231,214,217,117,210,217,216,216,216,214,219,254,246,21,96,119,16,221,216,1,209,242,214,215,216,238,217,228,162,136,229,216,216,216,216,212,238,202,0,165,205,62,0,140,250,244,170,5,127,144,181,249,228,213,213,233,227,215,217,108,205,219,216,216,216,212,227,252,79,0,0,1,14,0,19,234,227,122,75,33,0,0,0,0,0,0,69,250,247,215,213,225,236,213,232,133,154,229,215,216,216,213,222,253,235,166,195,228,238,181,72,241,111,0,5,50,106,155,190,206,209,109,0,166,230,212,218,239,217,227,173,116,227,216,216,216,213,219,250,203,186,220,193,243,212,0,155,247,215,213,237,223,220,205,101,209,221,216,216,213,219,249,111,24,235,188,134,115,196,118,1,230,228,210,232,230,216,222,107,182,227,215,216,213,221,250,243,199,63,0,3,0,0,0,7,217,179,0,158,245,212,225,236,214,229,123,154,231,215,216,212,224,252,181,0,0,0,22,128,185,237,191,0,194,175,8,141,224,216,239,217,231,138,134,230,216,215,212,230,254,204,100,194,63,76,135,21,246,167,109,9,8,28,48,212,242,211,236,224,229,148,123,228,217,213,216,238,46,115,235,40,185,234,15,0,11,59,82,0,116,222,226,232,228,152,118,225,217,212,225,249,88,187,254,238,238,211,196,233,214,0,160,244,216,237,230,153,116,224,216,216,238,247,130,39,13,26,167,233,29,54,227,230,239,159,113,222,216,226,250,228,39,0,21,28,43,3,222,176,17,58,239,250,223,245,179,106,220,218,235,252,44,38,241,67,114,227,0,189,245,147,36,0,93,254,237,234,219,102,203,222,242,174,5,246,171,1,230,182,0,224,93,0,12,10,0,70,242,231,247,133,160,227,237,177,0,53,0,154,28,95,218,219,245,241,130,0,180,248,236,211,111,219,227,133,66,183,88,59,251,158,0,228,241,247,146,155,228,247,227,249,254,226,231,19,120,241,230,109,207,239,228,17,10,72,254,155,136,248,208,0,42,213,180,120,106,198,185,229,253,225,182,89,0,17,6,0,0,0,41,254,137,14,0,0,0,0,65,136,193,236,199,158,96,31,114,200,127,19,251,137,38,97,65,239,218,239,221,247,252,49,0,1,0,4,83,231,157,0,184,211,24,55,87,94,53,0,82,106,0,208,254,250,29,44,245,238,198,0,136,243,35,56,253,254,69,11,224,251,84,0,0,50,225,228,50,0,76,107,0,116,232,29,11,186,24,116,96,5,227,183,0,184,69,0,212,190,3,63,212,19,9,21,0,64,238,135,0,130,184,254,199,3,224,216,1,210,171,1,76,67,63,169,157,0,3,34,11,0,117,208,149,211,102,0,104,248,69,0,157,76,9,224,249,26,13,125,161,222,149,20,0,0,0,168,249,231,191,9,67,250,18,105,123,5,227,160,0,174,150,0,172,131,198];
a(id)=b;  clear id b

function [mat,atlas,nii]= wgr_check_ROI(ROI, funii, flag_delete)
mat = {};  atlas = {}; nii  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'ROI');
    if flag
        for j=1: size(tmp.ROI,1)
            tmp2 = tmp.ROI(j,:);
            xY = [];
            xY.def='sphere';
            xY.xyz=tmp2(1:3)';
            xY.spec=tmp2(4);
            [xY, XYZmm, id] = spm_ROI(xY, funii);
            mat{j,1} = id;
            mat{j,2} = tmp2;
            mat{j,3} = '';
            continue;
        end
    end
        
    flag = isfield(tmp,'atlas');
    if flag
        for j=1: length(tmp.atlas)
            tmp2 = strcat(tmp.atlas{j});
            atlas{k2,1} = tmp2;
            niinew  = spm_file(tmp2,'prefix','bin_');
            spm_imcalc({funii;tmp2},niinew,'(i1~=0).*i2',{0,0,0,16});
            v = spm_vol(niinew);
            datam = spm_read_vols(v); datam(isnan(datam)) = 0;
            idu = unique(datam(:)); idu(idu==0)=[];
            for k=1:length(idu)
                atlas{k2,1} = find(datam==idu(k)); 
                atlas{k2,2} = tmp2; 
                atlas{k2,3} = idu(k); 
                k2 = k2+1;
            end            
            clear datam
            if flag_delete
                delete(v.fname)
            end
            
        end
        continue;
    end
    
    flag = isfield(tmp,'images');
    if flag
        for j=1: length(tmp.images)
            tmp2 = strcat(tmp.images{j});            
            nii{k3,1} = tmp2;
            niinew  = spm_file(tmp2,'prefix','bin_');
            spm_imcalc({funii;tmp2},niinew,'(i1~=0).*i2',{0,0,0,16});
            v  =spm_vol(niinew);
            datam = spm_read_vols(v);
            nii{k3,1} = find(datam); clear datam
            nii{k3,2} = tmp2; 
            nii{k3,3} = ''; 
            if flag_delete
                delete(v.fname)
            end
            k3 = k3+1;
        end
        continue;
    end
end

function [txt,mat,nii]= wgr_check_covariates(covariates)
txt={};  mat = {};  nii  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(covariates)
    tmp  = covariates{i};
    flag = isfield(tmp,'multi_reg');
    if flag
        for j=1: length(tmp.multi_reg)
            tmp2 = strcat(tmp.multi_reg{j});
            [fpath,name,ext] = fileparts(tmp2);
            if ~isempty(strfind(ext,'txt'))
                txt{1,k1} = load(tmp2);
                k1 = k1+1;
            elseif ~isempty(strfind(ext,'mat'))                
                tmp3  = load(tmp2);
                try
                    mat{1,k2} = tmp3.R;
                catch
                    tmp4 = fieldnames(tmp3);
                    if length(tmp4)==1
                        eval(['mat{1,k2} = tmp3.',tmp4{1},';']);
                    else
                        error('there are more than one variable in your mat file');
                    end
                end
                k2 = k2+1;
            else
                error('Unknown File Types')
            end
            continue;
        end
    end
        
    flag = isfield(tmp,'images');
    if flag
        for j=1: length(tmp.images)
            tmp2 = strcat(tmp.images{j});
            nii{k3,1} = tmp2;
            k3 = k3+1;
        end
        continue;
    end
end
txt = cell2mat(txt);
mat = cell2mat(mat);

function wgr_ROI_sig_deconvolution(job,para_global)
TR = job.HRFE.TR ; 
ROI = job.Datasig; %cell file
[mat_name,mat_txt]= wgr_check_ROIsig(ROI);
tmp = mat_txt(:,1)';
data = cell2mat(tmp);
Nscans = size(data,1);
datainfo = mat_txt(:,2);

if isempty(mat_txt{1,2})
    error('No data input!')
else
    [fpath,name,ext] = fileparts(mat_txt{1,2});
end

outdir = job.outdir{1};
if isempty(outdir)
    outdir = fpath;
end
covariates = job.Denoising.generic;
fprintf('Reading Covariates ...\n')
if ~isempty(covariates)
    [txt,mat,nii]= wgr_check_covariates(covariates);     
    nuisance = [txt mat];
else
    nuisance = [];
end

if length(job.Denoising.bands)>1
    error('please check your setting for band-pass filtering \n')
elseif length(job.Denoising.bands)==1
    Bands = job.Denoising.bands{1};   
else
    Bands =[];
end
p_detrend = job.Denoising.Detrend; 
if p_detrend
    nuisance_detrend = zeros(Nscans,p_detrend);
    for i = 1:p_detrend
        d = (1:Nscans).^i;
        nuisance_detrend(:,i+1) = d(:)./(Nscans.^i);
    end
else
    nuisance_detrend= [];
end
            
fprintf('Removing regressors & Detrend................. \n ')
nuisance = [nuisance_detrend nuisance];
if ~isempty(nuisance)
    nuisance = bsxfun(@minus, nuisance, sum(nuisance, 1)./Nscans);% Remove the mean
    nuisance = [orth(nuisance) ones(Nscans, 1)];
    mu   = sum(data, 1)./Nscans;    % mean 
    data = data - nuisance*(nuisance\data);
    data = bsxfun(@plus, data, mu);
end
            
if ~isempty(Bands)
    fprintf('Frequency filter.................... \n ')
    data = wgr_band_filter(data, TR,Bands);
end
            
if job.Denoising.Despiking;
    fprintf(' Temporal despiking with a hyperbolic tangent squashing function... \n')
    data = wgr_despiking(data);
end           
            
%% HRF deconvolution
para.TR = TR;
%%% the following parameter (upsample grid) can be > 1 only for Canonical.
%%% Set = 1 for FIR
para.T  = job.HRFE.fmri_t; % magnification factor of temporal grid with respect to TR. i.e. para.T=1 for no upsampling, para.T=3 for 3x finer grid
para.T0 = job.HRFE.fmri_t; % position of the reference slice in bins, on the grid defined by para.T. For example, if the reference slice is the middle one, then para.T0=fix(para.T/2)
if para.T==1
    para.T0 = 1;
end
min_onset_search = min(job.HRFE.mdelay); % minimum delay allowed between event and HRF onset (seconds)
max_onset_search = max(job.HRFE.mdelay); % maximum delay allowed between event and HRF onset (seconds)
para.dt  = para.TR/para.T; % fine scale time resolution.
if job.HRFE.hrfm==1
    para.TD_DD = 2; % time and dispersion derivative
elseif job.HRFE.hrfm==3
    para.TD_DD = 1; % time and dispersion derivative
end
para.AR_lag = job.HRFE.cvi; % AR(1) noise autocorrelation.
para.thr = job.HRFE.thr; % (mean+) para.thr*standard deviation threshold to detect event.
para.len = job.HRFE.hrflen; % length of HRF, in seconds
para.lag  = fix(min_onset_search/para.dt):fix(max_onset_search/para.dt);
para.localK = para_global.localK;
temporal_mask = ones(Nscans,1);
if job.HRFE.hrfm==1 | job.HRFE.hrfm==3
    tic
    [beta_hrf, bf, event_bold] = wgr_rsHRF_estimation_canonhrf2dd_par2(data,para, temporal_mask);
    hrfa = bf*beta_hrf(1:size(bf,2),:); %HRF
elseif job.HRFE.hrfm==2 | job.HRFE.hrfm==4
    tic
    if  job.HRFE.hrfm==2
        para.estimation = 'FIR';
    elseif job.HRFE.hrfm==4
        para.estimation = 'sFIR';
    end
    para.T=1; % this needs to be = 1 for FIR
    [hrfa,event_bold] = wgr_rsHRF_FIR(data,para, temporal_mask);
end

nvar = size(hrfa,2);
PARA = zeros(3,nvar);
for voxel_id=1:nvar
    hrf1 = hrfa(:,voxel_id);
    [PARA(:,voxel_id)] = wgr_rsHRF_get_parameters(hrf1,para.TR/para.T);% estimate HRF parameter
end
fprintf('Done HRF estimation %8.2f seconds\n',toc)

fprintf('Deconvolving HRF ...\n');
tic
T = round(para.len/TR);
if para.T>1
    hrfa_TR = resample(hrfa,1,para.T);
else
    hrfa_TR = hrfa;
end
for voxel_id=1:nvar
    hrf=hrfa_TR(:,voxel_id);
    H=fft([hrf; zeros(Nscans-length(hrf),1)]);
    M=fft(data(:,voxel_id));
    data_deconv(:,voxel_id) = ifft(conj(H).*M./(H.*conj(H)+2));
    event_number(voxel_id)=length(event_bold{1,voxel_id});
end
toc
fprintf('Save HRF deconvolution results....\n');
save(fullfile(outdir,[job.prefix,name, 'hrf.mat']), 'para', 'hrfa', 'event_bold', 'event_number','PARA','-v7.3');
save(fullfile(outdir,[job.prefix,name, '_deconv.mat']), 'datainfo','data','data_deconv','-v7.3');
save(fullfile(outdir,[job.prefix,name, 'job.mat']), 'job');

function [mat_name,mat_txt]= wgr_check_ROIsig(ROI)
mat_txt = {}; mat_name  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'name');
    if flag
        if size(tmp.name,1)>1
            error('more than 1 variable names')
        else
            tmp2 = strcat(tmp.name);
            mat_name = tmp2;            
        end
        break
    end
end

for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'sigdata');
    if flag
        for j=1: size(tmp.sigdata,1)
            tmp2 = tmp.sigdata{j};
            [fpath,name,ext] = fileparts(tmp2);
            if strfind(ext,'txt')
                mat_txt{j,1} = load(tmp2);
                mat_txt{j,2} = tmp2;
            elseif strfind(ext,'mat')
                tmp3 = load(tmp2);
                try
                    eval(['mat_txt{j,1} = tmp3.',mat_name,';']);
                catch
                    tmp4 = fieldnames(tmp3);
                    if length(tmp4)==1
                        eval(['mat_txt{j,1} = tmp3.',tmp4{1},';']);
                    else
                        error(['there are more than one variable in mat file, and no variable ''',mat_name,'" in mat file']);
                    end
                end
                mat_txt{j,2} = tmp2;
            end
            continue;
        end
    end  
=======
function rsHRF(job,flag)
%% resting state BOLD-fMRI HRF deconvolution
if nargin>0
    para_global = wgr_rsHRF_global_para;
    switch flag;
        case 'vox'
            flag_delete = para_global.delete_files; % delete temporary files (generated wm/csf/brainmask) 
            TR = job.HRFE.TR ; 
            nii_file = job.images; %cell file
            nii_mask = job.mask{1};
            if isempty(nii_mask)
                nii_mask = para_global.mask_nii ;
            end
            
            data = [];
            fprintf('Reading NIFTI Data ...\n')
            Nscans = length(nii_file);
            for i=Nscans:-1:1
                v(i) = spm_vol(nii_file{i});
                tmp  = spm_read_vols(v(i));
                data(i,:) = tmp(:);
            end       
            
            outdir = job.outdir{1};
            if isempty(outdir)
                outdir = fileparts(v(1).fname);
            end
            
            if  isfield(job,'genericROI')    
                ROI = job.genericROI;
            else
                ROI = [];
            end
            
            if ~isempty(ROI);
                flag_ROI = 1;
                [mat,atlas,nii]= wgr_check_ROI(ROI, nii_file{1},flag_delete);                
                roinfo = [mat;atlas;nii];
                nvar = size(roinfo,1);
                data_ROI = zeros(Nscans,nvar);
                for j=1:nvar
                    data_ROI(:,j) = mean(data(:,roinfo{j,1}),2);
                end
            else
                flag_ROI=0;
            end
            
            if ~isempty(nii_mask);
                nii_masknew  = spm_file(nii_mask,'prefix','bin_');
                spm_imcalc({nii_file{1};nii_mask},nii_masknew,'(i1~=0).*(i2~=0)',{0,0,0,16});
                v0 = spm_vol(nii_masknew);
                datam = spm_read_vols(v0);
                voxel_ind = find(datam); clear datam
                if flag_delete
                    delete(v0.fname)
                end
            else
                data_var = nanvar(data,0,1);
                voxel_ind = find(data_var); clear data_var
            end
            data_gm = mean(data(:,voxel_ind),2);
            fprintf('# %d voxels inside defaut mask ...\n',length(voxel_ind))
            
            covariates = job.Denoising.generic;
            fprintf('Reading Covariates ...\n')
            if ~isempty(covariates)
                [txt,mat,nii]= wgr_check_covariates(covariates);     
                if ~isempty(nii)
                    nii2 = {}; 
                    for i=1:length(nii)
                        nii2{1,i} = spm_file(nii{i,1},'prefix','bin_');
                        spm_imcalc({nii_file{1};nii{i,1}},nii2{1,i},'(i1~=0).*(i2>0.9)',{0,0,0,16});
                        v0 = spm_vol(nii2{1,i});
                        datam = spm_read_vols(v0);
                        if flag_delete
                            delete(v0.fname)
                        end
                        id = find(datam==1); clear datam
                        if isempty(id)
                            error(['no survived voxels (>0.9) in ',nii{i,1}])
                        else
                            if para_global.aCompcor,                                 
                                numcomps = para_global.aCompcor_numcomps;
                                z = data(:,id);
                                z(isnan(z))=0;
                                m = size(z,2) ;
                                if m<numcomps
                                    error(['# components = ',num2str(m),', < ', num2str(numcomps)])
                                else
                                    [pc,score,latent] = princomp(z,'econ');
                                end
                                nii2{1,i} = z*pc(:,1:numcomps);
                            else
                                nii2{1,i} = mean(data(:,id),2);
                            end
                        end
                    end
                    nii = cell2mat(nii2);
                    clear nii2 datam
                else
                    nii = [];
                end
                if para_global.aCompcor
                    nuisance = [txt mat nii];
                else ~para_global.aCompcor & para_global.globa_reg
                    nuisance = [txt mat nii data_gm];
                end
            else
                nuisance = [];
            end
            %% 
            if flag_ROI
                data = data_ROI;
            else
                data = data(:,voxel_ind);
            end
            if length(job.Denoising.bands)>1
                error('please check your setting for band-pass filtering \n')
            elseif length(job.Denoising.bands)==1
                Bands = job.Denoising.bands{1};   
            else
                Bands =[];
            end
            p_detrend = job.Denoising.Detrend; 
            if p_detrend
                nuisance_detrend = zeros(Nscans,p_detrend);
                for i = 1:p_detrend
                    d = (1:Nscans).^i;
                    nuisance_detrend(:,i+1) = d(:)./(Nscans.^i);
                end
            else
                nuisance_detrend= [];
            end
            
            fprintf('Removing regressors & Detrend................. \n ')
            nuisance = [nuisance_detrend nuisance];
            if ~isempty(nuisance)
                nuisance = bsxfun(@minus, nuisance, sum(nuisance, 1)./Nscans);% Remove the mean
                nuisance = [orth(nuisance) ones(Nscans, 1)];
                mu   = sum(data, 1)./Nscans;    % mean 
                data = data - nuisance*(nuisance\data);
                data = bsxfun(@plus, data, mu);
            end
            
            if ~isempty(Bands)
                fprintf('Frequency filter.................... \n ')
                data = wgr_band_filter(data, TR,Bands);
            end
            
            if job.Denoising.Despiking;
                fprintf(' Temporal despiking with a hyperbolic tangent squashing function... \n')
                data = wgr_despiking(data);
            end           
            
            %% HRF deconvolution
            para.TR = TR;
            %%% the following parameter (upsample grid) can be > 1 only for Canonical.
            %%% Set = 1 for FIR
            para.T  = job.HRFE.fmri_t; % magnification factor of temporal grid with respect to TR. i.e. para.T=1 for no upsampling, para.T=3 for 3x finer grid
            para.T0 = job.HRFE.fmri_t; % position of the reference slice in bins, on the grid defined by para.T. For example, if the reference slice is the middle one, then para.T0=fix(para.T/2)
            if para.T==1
                para.T0 = 1;
            end
            min_onset_search = min(job.HRFE.mdelay); % minimum delay allowed between event and HRF onset (seconds)
            max_onset_search = max(job.HRFE.mdelay); % maximum delay allowed between event and HRF onset (seconds)
            para.dt  = para.TR/para.T; % fine scale time resolution.
            if job.HRFE.hrfm==1
                para.TD_DD = 2; % time and dispersion derivative
            elseif job.HRFE.hrfm==3
                para.TD_DD = 1; % time and dispersion derivative
            end
            para.AR_lag = job.HRFE.cvi; % AR(1) noise autocorrelation.
            para.thr = job.HRFE.thr; % (mean+) para.thr*standard deviation threshold to detect event.
            para.len = job.HRFE.hrflen; % length of HRF, in seconds
            para.lag  = fix(min_onset_search/para.dt):fix(max_onset_search/para.dt);
            para.localK = para_global.localK;
            temporal_mask = ones(Nscans,1);
            if job.HRFE.hrfm==1 | job.HRFE.hrfm==3
                tic
                [beta_hrf, bf, event_bold] = wgr_rsHRF_estimation_canonhrf2dd_par2(data,para, temporal_mask);
                hrfa = bf*beta_hrf(1:size(bf,2),:); %HRF
            elseif job.HRFE.hrfm==2 | job.HRFE.hrfm==4
                tic
                if  job.HRFE.hrfm==2
                    para.estimation = 'FIR';
                elseif job.HRFE.hrfm==4
                    para.estimation = 'sFIR';
                end
                para.T=1; % this needs to be = 1 for FIR
                [hrfa,event_bold] = wgr_rsHRF_FIR(data,para, temporal_mask);
            end
            
            nvar = size(hrfa,2);
            PARA = zeros(3,nvar);
            for voxel_id=1:nvar
                hrf1 = hrfa(:,voxel_id);
                [PARA(:,voxel_id)] = wgr_rsHRF_get_parameters(hrf1,para.TR/para.T);% estimate HRF parameter
            end
            fprintf('\nDone HRF estimation %8.2f seconds\n',toc)
            
            fprintf('Deconvolving HRF ...\n');
            tic
            T = round(para.len/TR);
            if para.T>1
                hrfa_TR = resample(hrfa,1,para.T);
            else
                hrfa_TR = hrfa;
            end
            for voxel_id=1:nvar
                hrf=hrfa_TR(:,voxel_id);
                H=fft([hrf; zeros(Nscans-length(hrf),1)]);
                M=fft(data(:,voxel_id));
                data_deconv(:,voxel_id) = ifft(conj(H).*M./(H.*conj(H)+2));
                event_number(voxel_id)=length(event_bold{1,voxel_id});
            end
            toc
            fprintf('Save HRF deconvolution results....\n');
            v0 = v(1);   v0.dt = [16,0]; v0.n = [1 1];
            [fpath,name,ext] = fileparts(v0.fname);
            save(fullfile(outdir,[job.prefix,name, '_hrf.mat']), 'para', 'hrfa', 'event_bold', 'event_number','PARA','-v7.3');
            
            if ~flag_ROI
                %write nifti maps of the three HRF parameters
                HRF_para_str = {'Height.nii', 'Time2peak.nii','FWHM.nii'};
                dat= zeros(v0.dim);
                for i=1:3
                    v0.fname = fullfile(outdir,[job.prefix,name,'_',HRF_para_str{i}]);
                    dat(voxel_ind)=PARA(i,:);
                    spm_write_vol(v0,dat);
                end
                % write number of events
                v0.fname = fullfile(outdir,[job.prefix,name,'_event_number.nii']);
                dat(voxel_ind)=event_number;
                spm_write_vol(v0,dat);
                
                if job.rmoutlier
                    PARA_rm = PARA;
                    pvalue_rm=para_global.pvalue_rm;
                    Inpainted_method =para_global.Inpainted ;
                    for i=1:3
                        v0.fname = fullfile(outdir,[job.prefix,name,'_Olrm_',HRF_para_str{i}]);
                        dat(voxel_ind)=PARA(i,:);
                        if i==1
                            id = (PARA_rm(1,:)<=0);
                            PARA_rm(1,id)=nan;
                            [PARA_rm(1,:),idx,outliers] = deleteoutliers(PARA_rm(1,:),pvalue_rm,1);
                            fprintf('height outlier: negative/zeros #%d + extreme #%d, [%3.3f %3.3f];\n',nnz(id),length(idx),min(outliers),max(outliers));
                            dat(voxel_ind)=PARA_rm(1,:);
                            dat=inpaint_nans3(dat,Inpainted_method);
                            PARA_rm(1,:) = dat(voxel_ind);
                            id_rm = union(find(id),idx);
                            dat2 = zeros(v0.dim);
                            PARA_rm0=zeros(1,size(PARA,2));
                            PARA_rm0(1,id_rm)=1;
                            dat2(voxel_ind)=PARA_rm0;
                            v00 = v0;
                            v00.fname = fullfile(outdir,[job.prefix,name,'_outlier_NAN.nii']);
                            spm_write_vol(v00,dat2);  clear dat2
                        else
                            PARA_rm(i,id_rm)=nan;
                            dat(voxel_ind)=PARA_rm(i,:);
                            dat=inpaint_nans3(dat,Inpainted_method);
                            PARA_rm(i,:) = dat(voxel_ind);
                        end
                        spm_write_vol(v0,dat);
                    end
                    % write number of events
                    v0.fname = fullfile(outdir,[job.prefix,name,'_Olrm_event_number.nii']);
                    dat(voxel_ind)=event_number;
                    event_number_rm  = event_number;
                    event_number_rm(1,id_rm)=nan;
                    dat(voxel_ind)=event_number_rm;
                    dat=inpaint_nans3(dat,Inpainted_method);
                    event_number_rm = dat(voxel_ind);
                    spm_write_vol(v0,dat);
                    save(fullfile(outdir,[job.prefix,name, '_hrf.mat']), 'PARA_rm','event_number_rm','id_rm','-append')
                end

                % writing back deconvolved data into nifti file
                v1 = v; dat3 = zeros(v1(1).dim);
                for i=1:Nscans
                    [fpath,name,ext] = fileparts(v1(i).fname);
                    v1(i).fname = fullfile(outdir,[job.prefix,name,ext]);
                    dat3(voxel_ind) = data_deconv(i,:);
                    spm_write_vol(v1(i),dat3);
                end
                if job.rmoutlier & para_global.rmoutlier_deconv
                    v1 = v; dat3 = zeros(v1(1).dim);
                    
                    for i=1:Nscans
                        [fpath,name,ext] = fileparts(v1(i).fname);
                        v1(i).fname = fullfile(outdir,[job.prefix,name,'_Olrm',ext]);
                        data_deconv_rm= data_deconv(i,:);
                        data_deconv_rm(id_rm)=nan;
                        dat3(voxel_ind) = data_deconv_rm;
                        dat3=inpaint_nans3(dat3,Inpainted_method);
                        spm_write_vol(v1(i),dat3);
                    end
                    clear data_deconv_rm
                end
                clear data_deconv
            else
                save(fullfile(outdir,[job.prefix,name, '.mat']), 'roinfo','data','data_deconv','-v7.3');
                clear data data_deconv
            end
            save(fullfile(outdir,[job.prefix,name, '_job.mat']), 'job','para_global');            
        case 'sig'
            wgr_ROI_sig_deconvolution(job,para_global)
    end
    return
else
    code_path = fileparts(which('rsHRF.m')) ;
    a = imread(fullfile(code_path,'rsHRF_logo.png'));
    S.fig = figure('Visible','on',...
        'numbertitle','off',...    
        'menubar','none',...         
        'units','normalized',...
        'color','w',...
        'position',[0.4   0.4    0.15    0.3],...[563    98   480   360],...
        'name',['rsHRF v1.0(',getenv('USERNAME'),')'],...
        'resize','off');
    
    S.pb(1) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.05,0.65,0.9,0.28],...
        'style','pushbutton',...'string','Resting State HRF Deconvolution',...
        'backgroundc','w',...
        'CData',wgr_hrflo,....
        'foregroundcolor','b');
    
    %% ROI signal HRF deconvolution
    S.pb(2) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.05,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','ROI Signals',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.sig_rsHRF'');',...
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');


    %% ROI-wise HRF deconvolution
    S.pb(3) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.25,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','ROI Level',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.ROI_rsHRF'');',...        
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');
    
    %% voxelwise HRF deconvolution
    S.pb(4) = uicontrol('parent',S.fig,...
        'unit','norm',...
        'pos',[0.1,0.45,0.8,0.15],...
        'style','pushbutton',...'pushbutton',...
        'string','Voxel Level',...
        'CallBack','spm_jobman(''interactive'','''',''spm.tools.HRF.vox_rsHRF'');',...        
        'backgroundc','w',...
        'foregroundcolor',0*[1 1 1],...     'fontname','Segoe Script',...
        'fontname','Calibri',...'Times New Roman',...
        'fontunits', 'normalized',... 
        'fontsize', 0.35,... 
        'fontweight','bold');
                                                                                                                                                      
end


function x1 = wgr_despiking(x1)
my=repmat(median(x1,1),[size(x1,1),1]);
sy=repmat(4*median(abs(x1-my)),[size(x1,1),1]);
x1=my+sy.*tanh((x1-my)./max(eps,sy));

function  x = wgr_band_filter(x, TR,Bands)
x = conn_filter(TR,Bands,x,'full') +...%mean-center by default
     repmat(mean(x,1),size(x,1),1);    %mean back in

function [y,fy]=conn_filter(rt,filter,x,option)
% from conn toolbox
USEDCT=true;
if nargin<4, option='full'; end
if strcmpi(option,'base'), Nx=x; x=eye(Nx); end
if USEDCT % discrete cosine basis
    Nx=size(x,1);
    fy=fft(cat(1,x,flipud(x)),[],1);
    f=(0:size(fy,1)-1);
    f=min(f,size(fy,1)-f);
    switch(lower(option))
        case {'full','base'}
            idx=find(f<filter(1)*(rt*size(fy,1))|f>=filter(2)*(rt*size(fy,1)));
            %idx=idx(idx>1);
            fy(idx,:)=0;
            k=1; %2*size(fy,1)*(min(.5,filter(2)*rt)-max(0,filter(1)*rt))/max(1,size(fy,1)-numel(idx));
            y=real(ifft(fy,[],1))*k;
            y=y(1:Nx,:);
        case 'partial'
            idx=find(f>=filter(1)*(rt*size(x,1))&f<filter(2)*(rt*size(x,1)));
            %if ~any(idx==1), idx=[1,idx]; end
            y=fy(idx,:);
    end
else % discrete fourier basis
    fy=fft(x,[],1);
    f=(0:size(fy,1)-1);
    f=min(f,size(fy,1)-f);
    switch(lower(option))
        case 'full',
            idx=find(f<filter(1)*(rt*size(fy,1))|f>=filter(2)*(rt*size(fy,1)));
            %idx=idx(idx>1);
            fy(idx,:)=0;
            k=1; %2*size(fy,1)*(min(.5,filter(2)*rt)-max(0,filter(1)*rt))/max(1,size(fy,1)-numel(idx));
            y=real(ifft(fy,[],1))*k;
        case 'partial',
            idx=find(f>=filter(1)*(rt*size(x,1))&f<filter(2)*(rt*size(x,1)));
            %if ~any(idx==1), idx=[1,idx]; end
            y=fy(idx,:);
    end
end

function a = wgr_hrflo()
a = uint8(ones(80,177,3)*255);
id  = [930,931,932,933,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1162,1163,1164,1165,1166,1167,1168,1169,1247,1248,1249,1327,1328,1329,1407,1408,1409,1487,1488,1489,1492,1493,1564,1565,1566,1567,1568,1569,1570,1571,1572,1573,1641,1642,1643,1644,1645,1646,1647,1648,1649,1650,1651,1652,1653,1721,1722,1723,1724,1725,1726,1727,1728,1729,1730,1731,1732,1733,1802,1803,1804,1884,1885,1964,1965,1970,1971,1972,1973,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2123,2124,2125,2126,2127,2128,2129,2130,2131,2132,2133,2134,2203,2204,2205,2206,2207,2208,2209,2210,2213,2283,2284,2288,2289,2290,2363,2364,2368,2369,2370,2443,2444,2447,2448,2449,2450,2451,2523,2524,2525,2526,2527,2528,2529,2530,2531,2532,2603,2604,2605,2606,2607,2608,2610,2611,2612,2613,2684,2685,2686,2687,2691,2692,2693,2772,2773,2774,2852,2853,2854,2929,2930,2931,2932,2933,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,3013,3014,3083,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3163,3164,3165,3166,3167,3168,3169,3170,3243,3244,3245,3248,3249,3323,3324,3327,3328,3329,3402,3403,3404,3407,3408,3409,3468,3469,3482,3483,3484,3487,3488,3489,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3562,3563,3564,3567,3568,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3643,3644,3700,3701,3702,3703,3704,3705,3706,3780,3781,3782,3785,3786,3787,3860,3861,3864,3865,3866,3867,3940,3941,3942,3944,3945,3946,3947,3948,4020,4021,4022,4023,4024,4025,4027,4028,4029,4101,4102,4103,4104,4107,4108,4109,4110,4129,4130,4131,4132,4133,4182,4183,4188,4189,4190,4203,4204,4205,4206,4207,4208,4209,4210,4211,4212,4213,4265,4266,4267,4268,4269,4283,4284,4285,4286,4287,4288,4289,4290,4291,4292,4293,4297,4298,4344,4345,4346,4347,4348,4349,4350,4363,4364,4365,4366,4367,4368,4371,4372,4373,4376,4377,4423,4424,4425,4426,4427,4428,4429,4430,4443,4444,4445,4450,4451,4452,4456,4457,4502,4503,4504,4505,4506,4507,4508,4509,4510,4523,4524,4525,4530,4531,4532,4535,4536,4537,4582,4583,4584,4585,4586,4588,4589,4603,4604,4605,4610,4611,4612,4614,4615,4616,4662,4663,4664,4665,4667,4668,4669,4683,4684,4685,4689,4690,4691,4693,4694,4695,4696,4743,4744,4747,4748,4749,4750,4763,4764,4765,4768,4769,4770,4771,4772,4773,4774,4775,4776,4824,4825,4826,4828,4829,4830,4844,4845,4846,4847,4848,4849,4850,4851,4852,4853,4854,4855,4903,4904,4905,4906,4907,4908,4909,4910,4924,4925,4926,4927,4928,4929,4930,4931,4932,4933,4934,4982,4983,4984,4985,4986,4987,4988,4989,4990,5005,5006,5007,5008,5009,5010,5011,5012,5013,5062,5063,5064,5066,5067,5068,5069,5070,5083,5084,5085,5087,5088,5089,5090,5091,5092,5142,5143,5144,5146,5147,5148,5149,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5223,5224,5227,5228,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,5248,5249,5250,5251,5252,5253,5303,5304,5305,5306,5307,5308,5309,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5381,5382,5383,5384,5385,5386,5387,5388,5389,5390,5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5411,5412,5413,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5491,5492,5493,5540,5541,5542,5543,5544,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5570,5571,5572,5623,5624,5627,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5650,5651,5703,5704,5706,5707,5708,5710,5711,5712,5713,5714,5715,5716,5717,5718,5719,5720,5721,5729,5730,5731,5732,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,5807,5808,5809,5810,5811,5812,5813,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5886,5887,5888,5889,5890,5892,5893,5939,5940,5941,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5966,5967,5968,5972,5973,6017,6018,6019,6020,6021,6022,6023,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6046,6047,6048,6049,6051,6052,6053,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,6115,6127,6128,6131,6132,6133,6176,6177,6178,6179,6180,6181,6182,6183,6184,6185,6186,6187,6188,6189,6190,6191,6192,6193,6194,6210,6211,6212,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6289,6290,6291,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6351,6352,6353,6368,6369,6370,6371,6372,6373,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6447,6448,6449,6450,6451,6452,6453,6495,6496,6497,6498,6499,6500,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6526,6527,6528,6529,6532,6533,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6606,6607,6608,6611,6612,6613,6656,6657,6658,6659,6660,6661,6662,6663,6664,6665,6666,6668,6669,6670,6671,6672,6673,6686,6687,6688,6690,6691,6692,6738,6739,6740,6741,6742,6743,6744,6745,6746,6747,6748,6749,6750,6751,6752,6753,6754,6766,6767,6768,6769,6770,6771,6772,6819,6820,6821,6822,6823,6824,6825,6826,6827,6828,6829,6830,6831,6832,6833,6834,6835,6836,6847,6848,6849,6850,6900,6901,6902,6903,6904,6905,6906,6907,6908,6909,6910,6911,6912,6913,6914,6915,6916,6917,6927,6928,6929,6983,6984,6985,6986,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,6998,6999,7007,7008,7009,7063,7064,7066,7067,7068,7069,7070,7071,7072,7073,7074,7075,7076,7077,7078,7079,7080,7081,7087,7088,7089,7090,7091,7092,7142,7143,7144,7145,7146,7147,7148,7149,7150,7151,7152,7153,7154,7155,7156,7157,7158,7159,7160,7161,7162,7163,7166,7167,7168,7169,7170,7171,7172,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7246,7247,7248,7249,7250,7251,7303,7304,7305,7306,7312,7313,7314,7315,7316,7317,7318,7319,7320,7321,7322,7323,7324,7325,7326,7327,7328,7329,7330,7394,7395,7396,7397,7398,7399,7400,7401,7402,7403,7404,7405,7406,7407,7408,7409,7476,7477,7478,7479,7480,7481,7482,7483,7484,7485,7486,7487,7488,7489,7490,7491,7559,7560,7561,7562,7563,7564,7565,7566,7567,7568,7569,7570,7571,7572,7573,7574,7642,7643,7644,7645,7646,7647,7648,7649,7650,7651,7652,7653,7654,7655,7656,7657,7725,7726,7727,7728,7729,7730,7731,7732,7733,7734,7735,7736,7737,7738,7739,7783,7784,7788,7789,7790,7808,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7862,7863,7864,7865,7868,7869,7870,7889,7890,7891,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7941,7942,7943,7944,7945,7949,7950,7967,7968,7969,7970,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,8020,8021,8022,8024,8025,8026,8028,8029,8030,8046,8047,8048,8049,8050,8051,8052,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8100,8101,8102,8104,8105,8106,8108,8109,8110,8126,8127,8128,8129,8130,8131,8132,8133,8134,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8180,8181,8185,8186,8187,8188,8189,8211,8212,8213,8214,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8260,8261,8262,8265,8266,8267,8268,8269,8288,8289,8290,8291,8292,8293,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8340,8341,8342,8346,8347,8348,8367,8368,8369,8370,8371,8372,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8421,8422,8423,8424,8447,8448,8449,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8503,8504,8505,8506,8507,8508,8509,8528,8529,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8608,8609,8610,8611,8612,8613,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8687,8688,8689,8690,8691,8692,8693,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8740,8741,8742,8743,8744,8748,8749,8750,8766,8767,8768,8769,8770,8772,8773,8784,8785,8786,8787,8788,8789,8790,8791,8792,8793,8794,8795,8796,8823,8824,8827,8828,8829,8846,8847,8848,8851,8852,8853,8864,8865,8866,8867,8868,8869,8870,8871,8872,8873,8874,8875,8876,8903,8904,8907,8908,8926,8927,8928,8930,8931,8932,8933,8944,8945,8946,8947,8948,8949,8950,8951,8952,8953,8954,8955,8956,8983,8985,8986,8987,8988,8989,9006,9007,9008,9009,9010,9011,9012,9024,9025,9026,9027,9028,9029,9030,9031,9032,9033,9034,9035,9064,9065,9066,9067,9068,9069,9070,9087,9088,9089,9090,9091,9103,9104,9105,9106,9107,9108,9109,9110,9111,9112,9113,9114,9115,9143,9144,9145,9146,9148,9149,9167,9168,9169,9183,9184,9185,9186,9187,9188,9189,9190,9191,9192,9193,9194,9222,9223,9224,9227,9228,9229,9247,9248,9249,9262,9263,9264,9265,9266,9267,9268,9269,9270,9271,9272,9273,9274,9302,9303,9304,9305,9306,9307,9308,9309,9326,9327,9328,9329,9330,9331,9332,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9352,9353,9382,9383,9384,9385,9386,9387,9388,9389,9390,9402,9403,9404,9405,9406,9407,9408,9409,9410,9411,9412,9413,9421,9422,9423,9424,9425,9426,9427,9428,9429,9430,9431,9432,9463,9464,9465,9466,9467,9468,9469,9470,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9543,9544,9562,9563,9564,9571,9572,9573,9580,9581,9582,9583,9584,9585,9586,9587,9588,9589,9590,9623,9624,9625,9626,9627,9628,9629,9651,9652,9653,9660,9661,9662,9663,9664,9665,9666,9667,9668,9669,9670,9701,9702,9703,9704,9705,9706,9707,9708,9709,9710,9730,9731,9732,9739,9740,9741,9742,9743,9744,9745,9746,9747,9748,9749,9780,9781,9782,9783,9784,9785,9786,9787,9788,9789,9790,9809,9810,9811,9819,9820,9821,9822,9823,9824,9825,9826,9827,9828,9860,9861,9862,9863,9864,9868,9869,9870,9887,9888,9889,9890,9891,9892,9893,9898,9899,9900,9901,9902,9903,9904,9905,9906,9943,9944,9947,9948,9949,9966,9967,9968,9969,9970,9971,9972,9973,9978,9979,9980,9981,9982,9983,9984,9985,10023,10024,10027,10028,10047,10048,10049,10051,10052,10053,10058,10059,10060,10061,10062,10063,10064,10104,10105,10106,10107,10108,10109,10130,10131,10132,10133,10138,10139,10140,10141,10142,10143,10183,10184,10185,10186,10187,10188,10189,10190,10209,10210,10211,10212,10217,10218,10219,10220,10221,10222,10262,10263,10264,10265,10266,10267,10268,10269,10270,10286,10287,10288,10289,10290,10291,10297,10298,10299,10300,10342,10343,10344,10345,10346,10347,10348,10349,10350,10366,10367,10368,10369,10370,10371,10372,10377,10378,10379,10380,10422,10423,10424,10425,10426,10428,10429,10446,10447,10448,10449,10450,10451,10452,10457,10458,10459,10503,10504,10505,10507,10508,10509,10530,10531,10532,10536,10537,10538,10539,10587,10588,10607,10608,10609,10610,10611,10617,10618,10687,10688,10689,10690,10697,10698,10767,10768,10769,10770,10771,10772,10773,10774,10777,10778,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,10933,10934,11003,11004,11005,11006,11007,11008,11009,11087,11088,11167,11168,11169,11170,11171,11243,11244,11246,11247,11248,11249,11250,11251,11252,11253,11322,11323,11324,11326,11327,11328,11329,11330,11331,11332,11333,11402,11403,11404,11406,11407,11412,11413,11482,11483,11491,11492,11493,11570,11571,11572,11573,11649,11650,11651,11652,11728,11729,11730,11731,11732,11733,11807,11808,11809,11810,11811,11812,11813,11886,11887,11888,11889,11892,11893,11966,11967,11968,11971,11972,11973,12046,12047,12048,12050,12051,12052,12126,12127,12128,12129,12130,12131,12132,12207,12208,12209,12210,12211,12287,12288,12289,12367,12368,12369,12447,12448,12449,12450,12451,12452,12526,12527,12528,12529,12530,12531,12532,12606,12607,12608,12609,12610,12611,12687,12688,12689,12690,12767,12768,12769,12846,12847,12848,12849,12850,12851,12927,12928,12929,12930,12931,12932,13008,13009,13010,13011,13012,13090,13091,13092,13170,13171,13172,13249,13250,13251,13328,13329,13330,13408,13409,15090,15091,15092,15093,15163,15164,15165,15166,15167,15168,15169,15170,15171,15172,15173,15174,15242,15243,15244,15245,15246,15247,15248,15249,15250,15251,15252,15253,15322,15323,15324,15325,15326,15327,15328,15329,15407,15408,15409,15487,15488,15489,15567,15568,15569,15647,15648,15649,15652,15653,15724,15725,15726,15727,15728,15729,15730,15731,15732,15733,15801,15802,15803,15804,15805,15806,15807,15808,15809,15810,15811,15812,15813,15881,15882,15883,15884,15885,15886,15887,15888,15889,15890,15891,15892,15893,15962,15963,15964,16044,16045,16124,16125,16129,16130,16131,16132,16133,16203,16204,16205,16206,16207,16208,16209,16210,16211,16212,16213,16214,16283,16284,16285,16286,16287,16288,16289,16290,16291,16292,16293,16294,16363,16364,16365,16366,16367,16368,16369,16370,16373,16443,16444,16448,16449,16450,16523,16524,16528,16529,16530,16603,16604,16607,16608,16609,16610,16611,16683,16684,16685,16686,16687,16688,16689,16690,16691,16692,16763,16764,16765,16766,16767,16768,16770,16771,16772,16773,16844,16845,16846,16847,16851,16852,16853,16932,16933,16934,17012,17013,17014,17089,17090,17091,17092,17093,17163,17164,17165,17166,17167,17168,17169,17170,17171,17172,17173,17174,17243,17244,17245,17246,17247,17248,17249,17250,17251,17252,17253,17254,17323,17324,17325,17326,17327,17328,17329,17330,17403,17404,17405,17408,17409,17483,17484,17487,17488,17489,17562,17563,17564,17567,17568,17569,17628,17629,17642,17643,17644,17647,17648,17649,17701,17702,17703,17704,17705,17706,17707,17708,17709,17710,17722,17723,17724,17727,17728,17780,17781,17782,17783,17784,17785,17786,17787,17788,17789,17790,17803,17804,17860,17861,17862,17863,17864,17865,17866,17940,17941,17942,17945,17946,17947,18020,18021,18024,18025,18026,18027,18100,18101,18102,18104,18105,18106,18107,18108,18180,18181,18182,18183,18184,18185,18187,18188,18189,18261,18262,18263,18264,18267,18268,18269,18270,18289,18290,18291,18292,18293,18342,18343,18348,18349,18350,18363,18364,18365,18366,18367,18368,18369,18370,18371,18372,18373,18425,18426,18427,18428,18429,18443,18444,18445,18446,18447,18448,18449,18450,18451,18452,18453,18457,18458,18504,18505,18506,18507,18508,18509,18510,18523,18524,18525,18526,18527,18528,18531,18532,18533,18536,18537,18538,18583,18584,18585,18586,18587,18588,18589,18590,18603,18604,18605,18610,18611,18612,18616,18617,18662,18663,18664,18665,18666,18667,18668,18669,18670,18683,18684,18685,18690,18691,18692,18695,18696,18697,18742,18743,18744,18745,18746,18748,18749,18763,18764,18765,18770,18771,18772,18774,18775,18776,18822,18823,18824,18825,18827,18828,18829,18843,18844,18845,18849,18850,18851,18853,18854,18855,18856,18903,18904,18907,18908,18909,18910,18923,18924,18925,18928,18929,18930,18931,18932,18933,18934,18935,18936,18984,18985,18986,18988,18989,18990,19004,19005,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19063,19064,19065,19066,19067,19068,19069,19070,19084,19085,19086,19087,19088,19089,19090,19091,19092,19093,19094,19142,19143,19144,19145,19146,19147,19148,19149,19150,19165,19166,19167,19168,19169,19170,19171,19172,19173,19222,19223,19224,19226,19227,19228,19229,19230,19242,19243,19244,19245,19246,19247,19248,19249,19250,19251,19252,19302,19303,19304,19306,19307,19308,19309,19319,19320,19321,19322,19323,19324,19325,19326,19327,19328,19329,19330,19331,19332,19333,19383,19384,19387,19388,19396,19397,19398,19399,19400,19401,19402,19403,19404,19405,19406,19407,19408,19409,19410,19411,19412,19413,19463,19464,19465,19466,19467,19468,19469,19473,19474,19475,19476,19477,19478,19479,19480,19481,19482,19483,19484,19485,19486,19487,19488,19489,19490,19491,19492,19493,19541,19542,19543,19544,19545,19546,19547,19548,19549,19550,19551,19552,19553,19554,19555,19556,19557,19558,19559,19560,19561,19562,19563,19564,19565,19566,19567,19568,19569,19571,19572,19573,19620,19621,19622,19623,19624,19625,19626,19627,19628,19629,19630,19631,19632,19633,19634,19635,19636,19637,19638,19639,19640,19641,19642,19643,19644,19645,19646,19647,19648,19651,19652,19653,19700,19701,19702,19703,19704,19706,19707,19708,19709,19710,19711,19712,19713,19714,19715,19716,19717,19718,19719,19720,19721,19722,19723,19724,19730,19731,19732,19783,19784,19785,19786,19787,19788,19789,19790,19791,19792,19793,19794,19795,19796,19797,19798,19799,19800,19801,19802,19803,19810,19811,19858,19859,19860,19861,19862,19863,19864,19865,19866,19867,19868,19869,19870,19871,19872,19873,19874,19875,19876,19877,19878,19879,19880,19881,19889,19890,19891,19892,19935,19936,19937,19938,19939,19940,19941,19942,19943,19944,19945,19946,19947,19948,19949,19950,19951,19952,19953,19954,19955,19956,19957,19958,19959,19960,19967,19968,19969,19970,19971,19972,19973,20012,20013,20014,20015,20016,20017,20018,20019,20020,20021,20022,20023,20024,20025,20026,20027,20028,20029,20030,20031,20032,20033,20034,20035,20036,20037,20038,20046,20047,20048,20049,20050,20052,20053,20090,20091,20092,20093,20094,20095,20096,20097,20098,20099,20100,20101,20102,20103,20104,20105,20106,20107,20108,20109,20110,20111,20112,20113,20114,20115,20116,20117,20126,20127,20128,20132,20133,20168,20169,20170,20171,20172,20173,20174,20175,20176,20177,20178,20179,20180,20181,20182,20183,20184,20185,20186,20187,20188,20189,20190,20191,20192,20193,20194,20195,20196,20206,20207,20208,20209,20211,20212,20213,20246,20247,20248,20249,20250,20251,20252,20253,20254,20255,20256,20257,20258,20259,20260,20261,20262,20263,20264,20265,20266,20267,20268,20269,20270,20271,20272,20273,20274,20275,20287,20288,20291,20292,20293,20325,20326,20327,20328,20329,20330,20331,20332,20333,20334,20335,20336,20337,20338,20339,20340,20341,20342,20343,20344,20345,20346,20347,20348,20349,20350,20351,20352,20353,20354,20370,20371,20372,20403,20404,20405,20406,20407,20408,20409,20410,20411,20412,20413,20414,20415,20416,20417,20418,20419,20420,20421,20422,20423,20424,20425,20426,20427,20428,20429,20430,20431,20432,20433,20449,20450,20451,20483,20484,20485,20486,20487,20488,20489,20490,20491,20492,20493,20494,20495,20496,20497,20498,20499,20500,20501,20502,20503,20504,20505,20506,20507,20508,20509,20510,20511,20512,20513,20528,20529,20530,20531,20532,20533,20562,20563,20564,20565,20566,20567,20568,20569,20570,20571,20572,20573,20574,20575,20576,20577,20578,20579,20580,20581,20582,20583,20584,20585,20586,20587,20588,20589,20590,20591,20592,20607,20608,20609,20610,20611,20612,20613,20642,20643,20644,20645,20646,20647,20648,20649,20650,20651,20652,20653,20654,20655,20656,20657,20658,20659,20660,20661,20662,20663,20664,20665,20666,20667,20668,20669,20670,20671,20672,20686,20687,20688,20689,20692,20693,20722,20723,20724,20725,20726,20727,20728,20729,20730,20731,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20742,20743,20744,20745,20746,20747,20748,20749,20750,20751,20752,20753,20766,20767,20768,20771,20772,20773,20803,20804,20805,20806,20807,20808,20809,20810,20811,20812,20813,20814,20815,20816,20817,20818,20819,20820,20821,20822,20823,20824,20825,20826,20827,20828,20829,20830,20831,20832,20833,20846,20847,20848,20850,20851,20852,20884,20885,20886,20887,20888,20889,20890,20891,20892,20893,20894,20895,20896,20897,20898,20899,20900,20901,20902,20903,20904,20905,20906,20907,20908,20909,20910,20911,20912,20913,20914,20926,20927,20928,20929,20930,20931,20932,20965,20966,20967,20968,20969,20970,20971,20972,20973,20974,20975,20976,20977,20978,20979,20980,20981,20982,20983,20984,20985,20986,20987,20988,20989,20990,20991,20992,20993,20994,20995,20996,21007,21008,21009,21010,21047,21048,21049,21050,21051,21052,21053,21054,21055,21056,21057,21058,21059,21060,21061,21062,21063,21064,21065,21066,21067,21068,21069,21070,21071,21072,21073,21074,21075,21076,21077,21087,21088,21089,21129,21130,21131,21132,21133,21134,21135,21136,21137,21138,21139,21140,21141,21142,21143,21144,21145,21146,21147,21148,21149,21150,21151,21152,21153,21154,21155,21156,21157,21158,21159,21167,21168,21169,21211,21212,21213,21214,21215,21216,21217,21218,21219,21220,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21232,21233,21234,21235,21236,21237,21238,21239,21240,21241,21247,21248,21249,21250,21251,21252,21294,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21305,21306,21307,21308,21309,21310,21311,21312,21313,21314,21315,21316,21317,21318,21319,21320,21321,21322,21323,21326,21327,21328,21329,21330,21331,21332,21376,21377,21378,21379,21380,21381,21382,21383,21384,21385,21386,21387,21388,21389,21390,21391,21392,21393,21394,21395,21396,21397,21398,21399,21400,21401,21402,21403,21404,21406,21407,21408,21409,21410,21411,21460,21461,21462,21463,21464,21465,21466,21467,21468,21469,21470,21471,21472,21473,21474,21475,21476,21477,21478,21479,21480,21481,21482,21483,21484,21485,21486,21487,21488,21489,21490,21543,21545,21546,21547,21548,21549,21550,21551,21552,21553,21554,21555,21556,21557,21558,21559,21560,21561,21562,21563,21564,21565,21566,21567,21568,21569,21626,21627,21628,21629,21630,21631,21632,21633,21634,21635,21636,21637,21638,21639,21640,21641,21642,21643,21644,21645,21646,21647,21648,21649,21650,21651,21710,21711,21712,21713,21714,21715,21716,21717,21718,21719,21720,21721,21722,21723,21724,21725,21726,21727,21728,21729,21730,21731,21732,21733,21734,21793,21794,21795,21796,21797,21798,21799,21800,21801,21802,21803,21804,21805,21806,21807,21808,21809,21810,21811,21812,21813,21814,21815,21816,21817,21877,21878,21879,21880,21881,21882,21883,21884,21885,21886,21887,21888,21889,21890,21891,21892,21893,21894,21895,21896,21897,21898,21899,21943,21944,21948,21949,21950,21960,21961,21962,21963,21964,21965,21966,21967,21968,21969,21970,21971,21972,21973,21974,21975,21976,21977,21978,21979,21980,21981,22022,22023,22024,22025,22028,22029,22030,22044,22045,22046,22047,22049,22050,22051,22052,22053,22054,22055,22056,22057,22058,22059,22060,22061,22062,22063,22101,22102,22103,22104,22105,22109,22110,22127,22128,22129,22130,22132,22133,22134,22135,22136,22137,22138,22139,22140,22141,22142,22143,22144,22145,22180,22181,22182,22184,22185,22186,22188,22189,22190,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22218,22219,22220,22221,22222,22223,22224,22225,22226,22227,22260,22261,22262,22264,22265,22266,22268,22269,22270,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22300,22301,22302,22303,22304,22305,22306,22307,22308,22340,22341,22345,22346,22347,22348,22349,22371,22372,22373,22374,22376,22377,22378,22379,22380,22381,22382,22383,22384,22385,22386,22387,22388,22389,22390,22420,22421,22422,22425,22426,22427,22428,22429,22448,22449,22450,22451,22452,22453,22457,22458,22459,22460,22461,22462,22463,22464,22465,22466,22467,22468,22469,22470,22471,22500,22501,22502,22506,22507,22508,22527,22528,22529,22530,22531,22532,22539,22540,22541,22542,22543,22544,22545,22546,22547,22548,22549,22550,22551,22552,22553,22581,22582,22583,22584,22607,22608,22609,22620,22621,22622,22623,22624,22625,22626,22627,22628,22629,22630,22631,22632,22633,22634,22663,22664,22665,22666,22667,22668,22669,22688,22689,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22716,22741,22742,22743,22744,22745,22746,22747,22748,22749,22750,22768,22769,22770,22771,22772,22773,22783,22784,22785,22786,22787,22788,22789,22790,22791,22792,22793,22794,22795,22796,22797,22820,22821,22822,22823,22824,22825,22826,22827,22828,22829,22830,22847,22848,22849,22850,22851,22852,22853,22864,22865,22866,22867,22868,22869,22870,22871,22872,22873,22874,22875,22876,22877,22878,22900,22901,22902,22903,22904,22908,22909,22910,22926,22927,22928,22929,22930,22932,22933,22944,22945,22946,22947,22948,22949,22950,22951,22952,22953,22954,22955,22956,22957,22958,22959,22983,22984,22987,22988,22989,23006,23007,23008,23011,23012,23013,23024,23025,23026,23027,23028,23029,23030,23031,23032,23033,23034,23035,23036,23037,23038,23039,23063,23064,23067,23068,23086,23087,23088,23090,23091,23092,23093,23104,23105,23106,23107,23108,23109,23110,23111,23112,23113,23114,23115,23116,23117,23118,23119,23120,23143,23145,23146,23147,23148,23149,23166,23167,23168,23169,23170,23171,23172,23184,23185,23186,23187,23188,23189,23190,23191,23192,23193,23194,23195,23196,23197,23198,23199,23200,23224,23225,23226,23227,23228,23229,23230,23247,23248,23249,23250,23251,23263,23264,23265,23266,23267,23268,23269,23270,23271,23272,23273,23274,23275,23276,23277,23278,23279,23280,23303,23304,23305,23306,23308,23309,23327,23328,23329,23343,23344,23345,23346,23347,23348,23349,23350,23351,23352,23353,23354,23355,23356,23357,23358,23359,23360,23382,23383,23384,23387,23388,23389,23407,23408,23409,23422,23423,23424,23425,23426,23427,23428,23429,23430,23431,23432,23433,23434,23435,23436,23437,23438,23439,23462,23463,23464,23465,23466,23467,23468,23469,23486,23487,23488,23489,23490,23491,23492,23502,23503,23504,23505,23506,23507,23508,23509,23510,23511,23512,23513,23514,23515,23516,23517,23518,23542,23543,23544,23545,23546,23547,23548,23549,23550,23562,23563,23564,23565,23566,23567,23568,23569,23570,23571,23572,23573,23581,23582,23583,23584,23585,23586,23587,23588,23589,23590,23591,23592,23593,23594,23595,23596,23597,23598,23623,23624,23625,23626,23627,23628,23629,23630,23642,23643,23644,23645,23646,23647,23648,23649,23650,23651,23652,23653,23661,23662,23663,23664,23665,23666,23667,23668,23669,23670,23671,23672,23673,23674,23675,23676,23677,23703,23704,23722,23723,23724,23731,23732,23733,23740,23741,23742,23743,23744,23745,23746,23747,23748,23749,23750,23751,23752,23753,23754,23755,23756,23783,23784,23785,23786,23787,23788,23789,23811,23812,23813,23820,23821,23822,23823,23824,23825,23826,23827,23828,23829,23830,23831,23832,23833,23834,23835,23861,23862,23863,23864,23865,23866,23867,23868,23869,23870,23890,23891,23892,23899,23900,23901,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23913,23914,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23969,23970,23971,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23991,23992,23993,24020,24021,24022,24023,24024,24028,24029,24030,24047,24048,24049,24050,24051,24052,24053,24058,24059,24060,24061,24062,24063,24064,24065,24066,24067,24068,24069,24070,24071,24103,24104,24107,24108,24109,24126,24127,24128,24129,24130,24131,24132,24133,24138,24139,24140,24141,24142,24143,24144,24145,24146,24147,24148,24149,24150,24183,24184,24187,24188,24207,24208,24209,24211,24212,24213,24218,24219,24220,24221,24222,24223,24224,24225,24226,24227,24228,24264,24265,24266,24267,24268,24269,24290,24291,24292,24293,24298,24299,24300,24301,24302,24303,24304,24305,24306,24307,24343,24344,24345,24346,24347,24348,24349,24350,24369,24370,24371,24372,24377,24378,24379,24380,24381,24382,24383,24384,24385,24422,24423,24424,24425,24426,24427,24428,24429,24430,24446,24447,24448,24449,24450,24451,24457,24458,24459,24460,24461,24462,24463,24464,24502,24503,24504,24505,24506,24507,24508,24509,24510,24526,24527,24528,24529,24530,24531,24532,24537,24538,24539,24540,24541,24542,24543,24582,24583,24584,24585,24586,24588,24589,24606,24607,24608,24609,24610,24611,24612,24617,24618,24619,24620,24621,24622,24663,24664,24665,24667,24668,24669,24690,24691,24692,24697,24698,24699,24700,24701,24702,24747,24748,24767,24768,24769,24770,24771,24777,24778,24779,24780,24781,24847,24848,24849,24850,24857,24858,24859,24860,24927,24928,24929,24930,24931,24932,24933,24934,24937,24938,24939,25004,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25015,25083,25084,25085,25086,25087,25088,25089,25090,25091,25092,25093,25094,25163,25164,25165,25166,25167,25168,25169,25247,25248,25327,25328,25329,25330,25331,25403,25404,25406,25407,25408,25409,25410,25411,25412,25413,25482,25483,25484,25486,25487,25488,25489,25490,25491,25492,25493,25562,25563,25564,25566,25567,25572,25573,25642,25643,25651,25652,25653,25730,25731,25732,25733,25809,25810,25811,25812,25888,25889,25890,25891,25892,25893,25967,25968,25969,25970,25971,25972,25973,26046,26047,26048,26049,26052,26053,26126,26127,26128,26131,26132,26133,26206,26207,26208,26210,26211,26212,26286,26287,26288,26289,26290,26291,26292,26367,26368,26369,26370,26371,26447,26448,26449,26527,26528,26529,26607,26608,26609,26610,26611,26612,26686,26687,26688,26689,26690,26691,26692,26766,26767,26768,26769,26770,26771,26847,26848,26849,26850,26927,26928,26929,27006,27007,27008,27009,27010,27011,27087,27088,27089,27090,27091,27092,27168,27169,27170,27171,27172,27250,27251,27252,27330,27331,27332,27409,27410,27411,27488,27489,27490,27568,27569,29250,29251,29252,29253,29323,29324,29325,29326,29327,29328,29329,29330,29331,29332,29333,29334,29402,29403,29404,29405,29406,29407,29408,29409,29410,29411,29412,29413,29482,29483,29484,29485,29486,29487,29488,29489,29567,29568,29569,29647,29648,29649,29727,29728,29729,29807,29808,29809,29812,29813,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29961,29962,29963,29964,29965,29966,29967,29968,29969,29970,29971,29972,29973,30041,30042,30043,30044,30045,30046,30047,30048,30049,30050,30051,30052,30053,30122,30123,30124,30204,30205,30284,30285,30289,30290,30291,30292,30293,30363,30364,30365,30366,30367,30368,30369,30370,30371,30372,30373,30374,30443,30444,30445,30446,30447,30448,30449,30450,30451,30452,30453,30454,30523,30524,30525,30526,30527,30528,30529,30530,30533,30603,30604,30608,30609,30610,30683,30684,30688,30689,30690,30763,30764,30767,30768,30769,30770,30771,30843,30844,30845,30846,30847,30848,30849,30850,30851,30852,30924,30925,30926,30927,30928,30930,30931,30932,30933,31004,31005,31006,31007,31011,31012,31013,31092,31093,31094,31172,31173,31174,31249,31250,31251,31252,31253,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31403,31404,31405,31406,31407,31408,31409,31410,31411,31412,31413,31414,31483,31484,31485,31486,31487,31488,31489,31490,31563,31564,31565,31568,31569,31643,31644,31647,31648,31649,31722,31723,31724,31727,31728,31729,31788,31789,31802,31803,31804,31807,31808,31809,31861,31862,31863,31864,31865,31866,31867,31868,31869,31870,31882,31883,31884,31887,31888,31940,31941,31942,31943,31944,31945,31946,31947,31948,31949,31950,31963,31964,32020,32021,32022,32023,32024,32025,32026,32100,32101,32102,32105,32106,32107,32180,32181,32184,32185,32186,32187,32260,32261,32262,32264,32265,32266,32267,32268,32340,32341,32342,32343,32344,32345,32347,32348,32349,32421,32422,32423,32424,32427,32428,32429,32430,32449,32450,32451,32452,32453,32508,32509,32510,32523,32524,32525,32526,32527,32528,32529,32530,32531,32532,32533,32585,32586,32587,32588,32589,32603,32604,32605,32606,32607,32608,32609,32610,32611,32612,32613,32617,32618,32664,32665,32666,32667,32668,32669,32670,32683,32684,32685,32686,32687,32688,32691,32692,32693,32697,32698,32743,32744,32745,32746,32747,32748,32749,32750,32763,32764,32765,32770,32771,32772,32776,32777,32822,32823,32824,32825,32826,32827,32828,32829,32830,32843,32844,32845,32850,32851,32852,32855,32856,32857,32902,32903,32904,32905,32906,32908,32909,32923,32924,32925,32930,32931,32932,32934,32935,32936,32937,32982,32983,32984,32985,32987,32988,32989,33003,33004,33005,33009,33010,33011,33013,33014,33015,33016,33063,33067,33068,33069,33070,33083,33084,33085,33088,33089,33090,33091,33092,33093,33094,33095,33096,33144,33145,33146,33148,33149,33150,33164,33165,33166,33167,33168,33169,33170,33171,33172,33173,33174,33175,33223,33224,33225,33226,33227,33228,33229,33230,33244,33245,33246,33247,33248,33249,33250,33251,33252,33253,33254,33302,33303,33304,33305,33306,33307,33308,33309,33310,33325,33326,33327,33328,33329,33330,33331,33332,33333,33382,33383,33384,33386,33387,33388,33389,33390,33402,33403,33404,33405,33406,33407,33408,33409,33410,33411,33462,33463,33464,33466,33467,33468,33469,33479,33480,33481,33482,33483,33484,33485,33486,33487,33488,33489,33490,33491,33492,33493,33543,33544,33547,33548,33556,33557,33558,33559,33560,33561,33562,33563,33564,33566,33567,33568,33569,33570,33571,33572,33573,33623,33624,33625,33626,33627,33628,33629,33633,33634,33635,33636,33637,33638,33639,33640,33641,33642,33643,33644,33645,33646,33647,33648,33649,33650,33651,33652,33653,33701,33702,33703,33704,33705,33706,33707,33708,33709,33710,33711,33712,33713,33714,33715,33716,33717,33718,33719,33720,33721,33722,33723,33724,33725,33726,33727,33728,33729,33731,33732,33733,33780,33781,33782,33783,33784,33785,33786,33787,33788,33789,33790,33791,33792,33793,33794,33795,33796,33797,33798,33799,33800,33801,33802,33803,33805,33806,33807,33808,33811,33812,33813,33860,33861,33862,33863,33864,33866,33867,33868,33869,33870,33871,33872,33873,33874,33875,33876,33877,33878,33879,33880,33881,33882,33890,33891,33892,33943,33944,33945,33946,33947,33948,33949,33950,33951,33952,33953,33954,33955,33956,33957,33958,33959,33960,33970,33971,34018,34019,34020,34021,34022,34023,34024,34025,34026,34027,34028,34029,34030,34031,34032,34033,34034,34035,34036,34037,34038,34048,34049,34050,34051,34052,34095,34096,34097,34098,34099,34100,34101,34102,34103,34104,34105,34106,34107,34108,34109,34110,34111,34112,34113,34114,34115,34116,34127,34128,34129,34130,34131,34132,34133,34172,34173,34174,34175,34176,34177,34178,34179,34180,34181,34182,34183,34184,34185,34186,34187,34188,34189,34190,34191,34192,34193,34194,34195,34206,34207,34208,34209,34210,34212,34213,34250,34251,34252,34253,34254,34255,34256,34257,34258,34259,34260,34261,34262,34263,34264,34265,34266,34267,34268,34269,34270,34271,34272,34273,34286,34287,34288,34292,34293,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34343,34344,34345,34346,34347,34348,34349,34350,34351,34352,34366,34367,34368,34369,34371,34372,34373,34406,34407,34408,34409,34410,34411,34412,34413,34414,34415,34416,34417,34418,34419,34420,34421,34422,34423,34424,34425,34426,34427,34428,34429,34430,34447,34448,34451,34452,34485,34486,34487,34488,34489,34490,34491,34492,34493,34494,34495,34496,34497,34498,34499,34500,34501,34502,34503,34504,34505,34506,34507,34508,34509,34510,34530,34531,34532,34563,34564,34565,34566,34567,34568,34569,34570,34571,34572,34573,34574,34575,34576,34577,34578,34579,34580,34581,34582,34583,34584,34585,34586,34587,34588,34609,34610,34611,34643,34644,34645,34646,34647,34648,34649,34650,34651,34652,34653,34654,34655,34656,34657,34658,34659,34660,34661,34662,34663,34664,34665,34666,34667,34668,34688,34689,34690,34691,34692,34693,34722,34723,34724,34725,34726,34727,34728,34729,34730,34731,34732,34733,34734,34735,34736,34737,34738,34739,34740,34741,34742,34743,34744,34745,34746,34747,34748,34767,34768,34769,34770,34771,34772,34773,34802,34803,34804,34805,34806,34807,34808,34809,34810,34811,34812,34813,34814,34815,34816,34817,34818,34819,34820,34821,34822,34823,34824,34825,34826,34827,34828,34829,34846,34847,34848,34849,34852,34853,34882,34883,34884,34885,34886,34887,34888,34889,34890,34891,34892,34893,34894,34895,34896,34897,34898,34899,34900,34901,34902,34903,34904,34905,34906,34907,34908,34909,34926,34927,34928,34931,34932,34933,34963,34964,34965,34966,34967,34968,34969,34970,34971,34972,34973,34974,34975,34976,34977,34978,34979,34980,34981,34982,34983,34984,34986,34987,34988,34989,34991,34992,35006,35007,35008,35010,35011,35012,35044,35045,35046,35047,35048,35049,35050,35051,35052,35053,35054,35055,35056,35057,35058,35059,35060,35061,35062,35063,35064,35065,35066,35067,35068,35069,35071,35072,35073,35086,35087,35088,35089,35090,35091,35092,35125,35126,35127,35128,35129,35130,35131,35132,35133,35134,35135,35136,35137,35138,35139,35140,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35152,35153,35167,35168,35169,35170,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,35234,35247,35248,35249,35289,35290,35291,35292,35293,35294,35295,35296,35297,35298,35299,35300,35301,35302,35303,35304,35305,35306,35307,35308,35309,35312,35313,35314,35327,35328,35329,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35390,35391,35392,35393,35394,35395,35396,35407,35408,35409,35410,35411,35412,35454,35455,35456,35457,35458,35459,35460,35461,35462,35463,35464,35465,35466,35467,35468,35469,35470,35471,35472,35473,35474,35475,35476,35477,35478,35486,35487,35488,35489,35490,35491,35492,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,35556,35557,35558,35559,35560,35561,35566,35567,35568,35569,35570,35571,35620,35621,35622,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35647,35648,35649,35650,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35727,35728,35729,35786,35787,35788,35789,35790,35791,35792,35793,35794,35795,35796,35797,35798,35799,35800,35801,35802,35803,35804,35805,35806,35807,35808,35809,35810,35811,35870,35871,35872,35873,35874,35875,35876,35877,35878,35879,35880,35881,35882,35883,35884,35885,35886,35887,35888,35889,35890,35891,35892,35953,35954,35955,35956,35957,35958,35959,35960,35961,35962,35963,35964,35965,35966,35967,35968,35969,35970,35971,35972,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36103,36104,36108,36109,36110,36120,36121,36122,36123,36124,36125,36126,36127,36128,36129,36130,36131,36132,36133,36134,36135,36136,36137,36138,36182,36183,36184,36185,36188,36189,36190,36204,36205,36206,36207,36209,36210,36211,36212,36213,36214,36215,36216,36217,36218,36219,36220,36261,36262,36263,36264,36265,36269,36270,36287,36288,36289,36290,36292,36293,36294,36295,36296,36297,36298,36299,36300,36301,36302,36340,36341,36342,36344,36345,36346,36348,36349,36350,36366,36367,36368,36369,36370,36371,36372,36373,36374,36375,36376,36377,36378,36379,36380,36381,36382,36383,36384,36385,36420,36421,36422,36424,36425,36426,36428,36429,36430,36446,36447,36448,36449,36450,36451,36452,36453,36454,36455,36456,36457,36458,36459,36460,36461,36462,36463,36464,36465,36466,36467,36500,36501,36505,36506,36507,36508,36509,36531,36532,36533,36534,36536,36537,36538,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36580,36581,36582,36585,36586,36587,36588,36589,36608,36609,36610,36611,36612,36613,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36660,36661,36662,36666,36667,36668,36687,36688,36689,36690,36691,36692,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36710,36711,36712,36713,36741,36742,36743,36744,36767,36768,36769,36780,36781,36782,36783,36784,36785,36786,36787,36788,36789,36790,36791,36792,36793,36794,36823,36824,36825,36826,36827,36828,36829,36848,36849,36862,36863,36864,36865,36866,36867,36868,36869,36870,36871,36872,36873,36874,36875,36876,36901,36902,36903,36904,36905,36906,36907,36908,36909,36910,36928,36929,36930,36931,36932,36933,36943,36944,36945,36946,36947,36948,36949,36950,36951,36952,36953,36954,36955,36956,36957,36980,36981,36982,36983,36984,36985,36986,36987,36988,36989,36990,37007,37008,37009,37010,37011,37012,37013,37024,37025,37026,37027,37028,37029,37030,37031,37032,37033,37034,37035,37036,37037,37038,37060,37061,37062,37063,37064,37068,37069,37070,37086,37087,37088,37089,37090,37092,37093,37104,37105,37106,37107,37108,37109,37110,37111,37112,37113,37114,37115,37116,37117,37118,37119,37143,37144,37147,37148,37149,37166,37167,37168,37171,37172,37173,37185,37186,37187,37188,37189,37190,37191,37192,37193,37194,37195,37196,37197,37198,37199,37223,37224,37227,37228,37246,37247,37248,37250,37251,37252,37253,37265,37266,37267,37268,37269,37270,37271,37272,37273,37274,37275,37276,37277,37278,37279,37280,37303,37305,37306,37307,37308,37309,37326,37327,37328,37329,37330,37331,37332,37345,37346,37347,37348,37349,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37384,37385,37386,37387,37388,37389,37390,37407,37408,37409,37410,37411,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37463,37464,37465,37466,37468,37469,37487,37488,37489,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37518,37519,37520,37542,37543,37544,37547,37548,37549,37567,37568,37569,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37622,37623,37624,37625,37626,37627,37628,37629,37646,37647,37648,37649,37650,37651,37652,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37702,37703,37704,37705,37706,37707,37708,37709,37710,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37783,37784,37785,37786,37787,37788,37789,37790,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37834,37835,37836,37837,37863,37864,37882,37883,37884,37891,37892,37893,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37943,37944,37945,37946,37947,37948,37949,37971,37972,37973,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37995,38021,38022,38023,38024,38025,38026,38027,38028,38029,38030,38050,38051,38052,38061,38062,38063,38064,38065,38066,38067,38068,38069,38070,38071,38072,38073,38074,38100,38101,38102,38103,38104,38105,38106,38107,38108,38109,38110,38129,38130,38131,38141,38142,38143,38144,38145,38146,38147,38148,38149,38150,38151,38152,38153,38180,38181,38182,38183,38184,38188,38189,38190,38207,38208,38209,38210,38211,38212,38213,38220,38221,38222,38223,38224,38225,38226,38227,38228,38229,38230,38231,38263,38264,38267,38268,38269,38286,38287,38288,38289,38290,38291,38292,38293,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38343,38344,38346,38347,38348,38367,38368,38369,38371,38372,38373,38379,38380,38381,38382,38383,38384,38385,38386,38387,38388,38424,38425,38426,38427,38428,38429,38450,38451,38452,38459,38460,38461,38462,38463,38464,38465,38466,38467,38503,38504,38505,38506,38507,38508,38509,38510,38529,38530,38531,38532,38538,38539,38540,38541,38542,38543,38544,38545,38582,38583,38584,38585,38586,38587,38588,38589,38590,38606,38607,38608,38609,38610,38611,38618,38619,38620,38621,38622,38623,38624,38662,38663,38664,38665,38666,38667,38668,38669,38670,38686,38687,38688,38689,38690,38691,38692,38698,38699,38700,38701,38702,38703,38742,38743,38744,38745,38746,38748,38749,38766,38767,38768,38769,38770,38771,38772,38777,38778,38779,38780,38781,38782,38823,38824,38825,38827,38828,38829,38850,38851,38852,38857,38858,38859,38860,38861,38862,38907,38908,38927,38928,38929,38930,38931,38937,38938,38939,38940,38941,39007,39008,39009,39010,39017,39018,39019,39020,39087,39088,39089,39090,39091,39092,39093,39094,39098,39099,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,39243,39244,39245,39246,39247,39248,39249,39250,39251,39252,39253,39254,39323,39324,39325,39326,39327,39328,39329,39407,39408,39487,39488,39489,39490,39491,39563,39564,39566,39567,39568,39569,39570,39571,39572,39573,39642,39643,39644,39646,39647,39648,39649,39650,39651,39652,39653,39722,39723,39724,39726,39727,39732,39733,39802,39803,39811,39812,39813,39890,39891,39892,39893,39969,39970,39971,39972,40048,40049,40050,40051,40052,40053,40127,40128,40129,40130,40131,40132,40133,40206,40207,40208,40209,40212,40213,40286,40287,40288,40291,40292,40293,40366,40367,40368,40370,40371,40372,40446,40447,40448,40449,40450,40451,40452,40527,40528,40529,40530,40531,40607,40608,40609,40687,40688,40689,40767,40768,40769,40770,40771,40772,40846,40847,40848,40849,40850,40851,40852,40926,40927,40928,40929,40930,40931,41007,41008,41009,41010,41087,41088,41089,41166,41167,41168,41169,41170,41171,41247,41248,41249,41250,41251,41252,41328,41329,41330,41331,41332,41410,41411,41412,41490,41491,41492,41569,41570,41571,41648,41649,41650,41728,41729];
b = [250,221,171,188,236,211,188,158,127,97,55,14,0,0,14,231,217,5,0,0,0,0,0,15,60,87,104,180,236,82,69,110,171,165,0,146,219,0,171,213,0,179,190,0,185,171,0,212,246,249,252,234,212,84,0,92,92,53,11,58,253,94,37,24,1,0,0,0,0,0,1,0,71,245,28,0,31,77,127,170,197,212,224,233,237,250,235,232,254,254,254,70,162,231,202,193,236,190,0,54,108,98,67,26,0,0,0,45,254,125,0,11,0,0,15,70,96,119,87,76,254,70,48,244,214,227,218,111,230,253,37,82,172,0,189,40,89,84,0,85,85,30,179,0,34,0,128,164,0,132,201,15,34,240,63,0,172,254,69,0,0,16,201,216,8,12,219,243,145,124,221,158,0,75,87,0,224,229,103,242,252,233,210,192,218,230,152,173,139,97,62,36,3,0,0,0,210,135,0,0,0,1,6,0,57,101,100,104,229,143,0,128,207,252,107,0,234,99,10,248,54,46,49,50,243,6,98,248,11,87,201,0,154,251,250,226,0,100,198,35,223,254,206,224,192,140,99,62,34,17,15,195,247,40,146,254,252,222,6,0,0,0,16,39,56,63,41,202,246,253,203,0,105,177,222,110,163,165,22,252,34,31,243,137,30,219,12,0,83,154,5,239,74,56,154,0,117,222,5,46,47,0,195,100,0,166,172,20,30,185,245,37,11,238,248,219,188,205,254,253,253,200,89,242,203,70,176,149,94,50,14,0,0,0,151,209,120,80,116,231,124,0,0,0,0,16,54,92,42,0,130,171,231,111,0,0,3,0,38,243,153,0,95,184,218,249,75,0,214,236,124,100,0,163,76,90,197,0,190,155,0,214,230,0,78,152,170,197,0,209,231,6,191,214,0,206,126,0,238,158,0,169,213,108,246,164,4,148,14,89,77,48,117,0,233,62,19,246,238,105,194,241,61,0,104,125,11,221,154,0,204,202,0,141,240,118,159,249,254,254,169,216,216,243,206,0,131,237,43,35,246,239,124,150,238,252,150,80,207,222,0,165,71,0,128,144,21,0,192,235,118,158,233,245,124,0,0,32,246,243,0,154,230,57,0,0,14,185,213,111,180,231,238,216,0,150,220,0,139,223,0,199,250,173,157,218,168,129,213,228,235,135,4,242,108,8,55,39,253,250,234,238,215,136,153,208,211,246,143,25,250,237,44,0,183,246,231,233,248,204,140,83,48,24,4,0,107,254,178,185,254,253,253,241,228,232,250,212,134,133,87,0,41,57,15,58,0,161,112,25,247,205,159,141,209,248,234,225,234,252,216,136,115,192,175,0,140,214,27,147,251,0,108,251,218,72,0,9,0,0,0,15,224,254,242,229,225,236,253,216,137,113,173,231,246,122,0,87,7,107,232,0,142,189,6,0,0,16,106,168,222,180,0,193,235,226,227,238,252,215,136,112,169,229,231,217,217,212,89,35,151,152,0,225,196,79,175,58,75,149,13,217,230,231,239,249,216,138,111,167,228,232,219,213,216,238,243,24,118,48,112,223,26,160,249,237,244,220,144,111,162,226,233,220,215,212,226,250,78,69,77,182,242,240,234,238,225,159,109,154,224,234,220,217,213,216,239,110,0,58,163,253,241,216,187,163,122,96,109,171,117,139,215,235,222,217,215,212,225,250,197,30,0,28,25,0,150,251,219,239,238,88,0,0,0,5,4,0,104,204,237,224,219,216,214,214,236,183,0,57,193,251,42,65,145,0,130,108,62,139,201,176,99,174,236,227,220,218,216,213,218,245,45,2,210,48,85,254,250,146,11,166,231,239,187,125,204,233,224,219,217,216,213,222,250,153,1,37,251,216,0,167,254,231,233,240,223,228,227,179,99,89,26,62,24,21,205,222,216,213,222,252,232,221,82,39,254,235,237,231,219,223,221,237,96,0,19,12,0,13,102,210,219,214,218,250,150,5,211,246,237,228,218,221,221,221,222,225,102,57,3,98,212,237,218,215,213,239,185,0,135,249,230,218,221,221,221,221,227,204,13,21,175,244,226,215,216,214,221,254,209,12,0,0,37,222,248,220,220,221,221,221,221,237,144,0,153,245,231,236,223,215,213,227,222,37,0,84,116,0,114,247,219,220,221,221,221,221,232,175,2,0,17,40,89,191,222,213,226,228,22,18,194,24,117,234,217,221,221,221,221,220,239,117,75,92,43,0,73,229,227,229,248,92,7,232,178,0,187,254,232,218,220,221,221,221,225,214,121,216,86,107,240,121,141,244,70,0,205,181,0,68,237,219,219,221,221,220,230,215,114,145,107,201,238,130,0,165,246,218,25,4,14,0,71,242,246,226,218,220,221,237,175,27,0,0,68,241,232,49,42,221,232,253,137,1,138,191,254,238,221,236,155,0,42,184,81,7,175,251,151,0,190,220,222,247,202,3,222,209,2,72,237,245,31,116,156,149,119,1,202,223,213,215,231,251,216,2,211,92,40,242,70,57,233,214,93,0,39,180,227,228,216,212,217,236,252,166,1,69,58,53,163,251,16,108,211,50,0,37,20,0,0,83,199,137,116,164,217,231,218,212,218,235,251,155,0,6,41,11,0,119,59,0,0,22,67,85,112,147,190,231,230,235,204,143,115,144,199,230,223,213,217,233,214,160,213,97,0,111,217,141,209,254,242,227,219,222,234,217,164,120,127,175,220,229,216,214,242,245,59,0,166,248,236,225,221,230,229,188,135,116,147,200,230,231,58,7,214,254,247,235,225,226,232,211,160,121,131,169,22,11,99,132,202,254,247,235,228,232,227,188,142,59,0,0,0,0,138,240,244,254,247,236,232,233,225,174,107,77,0,64,238,216,222,238,253,254,247,237,238,240,197,5,48,158,205,229,218,218,234,250,246,251,244,133,214,253,111,9,192,163,116,134,192,229,221,215,229,248,114,0,41,218,228,0,97,154,0,177,244,230,173,120,123,181,229,222,214,228,246,116,0,93,6,72,23,78,215,123,5,181,252,242,237,244,243,193,125,118,181,230,221,213,228,248,215,0,150,147,0,217,242,3,124,236,18,0,0,52,160,250,252,238,233,242,250,199,125,118,193,235,218,215,231,251,140,6,241,229,0,132,179,0,195,252,152,145,140,58,0,31,87,185,247,231,226,242,253,199,116,132,216,231,214,218,238,102,29,64,36,253,54,48,186,23,0,118,245,223,221,242,250,176,107,176,237,221,215,225,249,129,0,176,179,0,5,2,195,238,161,62,0,41,165,253,233,216,222,247,231,127,141,230,224,217,220,242,222,13,60,138,52,181,198,11,0,44,169,253,240,218,217,227,246,159,128,230,223,220,218,235,238,251,207,185,194,0,105,239,219,220,219,242,156,132,232,220,221,217,234,111,25,248,208,158,136,211,83,41,232,218,221,220,238,131,176,235,219,221,217,239,251,220,73,0,11,0,0,0,15,224,93,20,94,32,102,246,249,221,220,221,224,216,119,236,225,220,220,220,248,190,7,0,0,16,104,166,220,179,0,192,243,32,0,13,35,0,135,230,219,221,220,236,145,173,249,220,221,218,234,195,76,173,58,75,148,17,242,253,72,0,125,250,25,107,236,218,221,221,228,182,138,245,234,219,220,225,254,49,111,237,32,172,130,0,184,216,0,166,236,217,221,221,227,189,138,233,239,222,220,223,253,72,178,245,224,62,4,234,237,43,26,244,232,216,221,221,229,177,144,231,235,228,218,225,254,251,240,125,29,18,142,172,0,49,81,11,16,204,224,217,221,221,235,146,171,228,233,230,217,232,192,18,0,69,49,20,246,113,0,60,113,232,249,216,219,221,222,222,116,214,221,235,227,218,245,183,0,55,222,87,57,186,7,233,235,213,220,221,234,163,142,235,220,239,219,229,246,22,91,123,16,220,216,1,209,253,220,216,221,224,219,109,213,222,231,234,220,250,202,0,167,211,66,0,140,253,246,174,4,130,149,184,251,238,212,219,221,236,134,161,234,220,240,221,243,251,76,0,0,1,14,0,21,234,230,127,78,36,1,0,0,0,0,0,70,251,253,219,215,220,233,177,119,233,218,235,229,236,234,162,191,227,238,179,68,239,113,0,4,46,103,152,185,205,207,106,0,167,235,212,219,227,211,104,213,224,228,235,234,203,188,218,190,240,212,0,155,250,217,216,222,231,114,181,231,222,238,236,111,23,238,192,138,116,201,120,1,229,231,212,219,237,140,147,236,219,237,239,253,245,203,66,0,3,0,0,0,9,219,181,0,156,248,216,216,234,175,118,232,219,234,245,253,183,0,0,0,21,124,183,234,190,0,193,177,8,140,231,212,225,209,104,216,223,231,250,254,202,96,190,62,76,137,22,246,171,114,11,8,30,52,214,252,218,217,232,116,183,229,229,252,46,114,235,37,183,233,15,0,10,57,81,0,116,241,212,234,157,137,234,229,254,84,186,240,237,209,194,231,214,0,158,231,218,208,109,220,231,254,248,136,43,17,31,172,236,34,51,254,223,231,130,170,240,253,231,43,0,18,26,41,4,223,181,18,54,239,251,225,191,117,236,251,252,47,35,237,67,113,226,0,189,247,152,40,0,92,254,244,229,127,181,174,4,244,174,1,228,186,0,223,93,0,6,7,0,74,244,240,194,117,244,177,0,57,0,151,30,92,215,216,240,238,127,0,181,240,141,167,130,62,179,92,56,249,159,0,227,253,224,117,223,225,248,254,229,233,21,118,193,131,228,18,13,69,163,156,209,0,42,214,183,125,109,200,206,219,253,227,186,91,0,20,7,0,0,0,40,254,139,16,0,0,0,0,61,131,189,232,196,155,92,26,110,196,126,19,251,138,38,97,66,241,220,241,226,248,252,50,0,1,0,6,87,232,161,0,184,210,22,51,84,93,49,0,84,106,0,207,254,249,29,43,243,235,200,0,134,245,37,53,252,254,70,13,224,252,88,0,0,53,225,230,53,0,72,104,0,117,233,29,9,183,25,116,98,5,226,185,0,183,68,0,215,192,4,61,211,19,10,22,0,61,238,133,0,125,179,253,199,4,224,216,1,210,174,2,80,69,65,172,158,0,2,32,10,0,115,206,143,208,104,0,100,249,71,0,153,77,7,222,250,26,13,129,165,224,147,17,0,0,1,171,248,228,187,8,67,251,18,102,126,4,224,161,0,173,151,0,170,129,195,249,218,168,188,234,209,185,156,125,95,53,12,0,0,15,232,216,4,0,0,0,0,0,15,61,89,105,182,236,83,69,111,172,165,0,147,219,0,171,212,0,179,190,0,185,170,0,212,244,246,251,232,209,82,0,87,90,51,9,56,253,92,36,22,0,0,0,0,0,0,1,0,71,245,29,0,32,78,128,171,198,213,225,233,237,250,236,233,254,254,254,66,161,254,229,199,190,234,190,0,50,107,95,64,24,0,0,0,45,254,123,0,11,0,0,15,71,97,119,87,77,254,69,48,244,214,228,217,110,230,254,37,82,172,0,189,40,88,81,0,84,86,28,178,0,35,0,126,164,0,131,197,13,35,240,64,0,171,254,69,0,0,17,202,216,9,11,218,243,147,126,221,159,0,74,88,0,224,230,104,242,251,231,207,191,217,229,151,170,135,93,60,34,3,0,0,0,208,135,0,0,0,1,6,0,58,103,101,105,229,143,0,128,208,253,106,0,234,98,10,248,52,47,49,51,243,6,98,247,10,87,201,0,154,250,250,226,0,100,199,35,223,204,221,189,137,96,59,32,14,13,193,247,40,147,254,252,222,6,0,0,0,16,40,57,63,42,202,247,253,202,0,107,178,222,107,162,165,22,252,34,30,242,137,30,219,12,0,80,154,4,238,70,57,154,0,116,222,6,42,45,0,195,100,0,164,174,21,31,185,246,38,9,236,247,217,185,203,254,253,253,200,90,242,200,66,173,147,91,48,12,0,0,0,150,206,116,76,112,228,124,0,0,0,0,16,55,94,43,0,130,169,228,107,0,0,4,0,35,243,153,0,96,185,219,249,76,0,214,240,104,251,98,0,164,77,91,198,0,190,155,0,214,230,0,79,136,126,196,0,210,230,6,192,212,0,206,124,0,238,158,0,169,203,57,218,164,4,145,14,89,76,48,117,0,233,62,19,246,217,75,148,242,61,0,105,120,10,222,155,0,204,201,0,143,204,82,126,227,254,254,170,217,212,242,206,0,128,234,40,36,242,180,58,119,208,252,146,78,203,222,0,164,71,0,126,141,19,3,172,138,37,126,202,242,123,0,0,31,245,243,0,154,232,60,0,0,21,126,76,33,153,201,236,215,0,151,221,0,137,223,0,200,244,162,113,94,43,82,187,203,235,135,4,242,109,7,54,39,253,250,234,213,176,132,78,71,137,177,192,247,144,25,250,237,45,0,184,253,240,225,205,163,117,70,70,74,46,17,2,0,107,253,179,183,254,253,253,243,228,216,192,148,114,82,72,120,81,0,44,59,15,58,0,159,112,25,245,202,156,140,206,252,243,230,217,207,177,131,108,96,85,108,166,142,0,142,211,25,149,251,0,108,250,215,71,0,8,0,0,0,13,219,252,231,218,211,198,157,114,109,112,102,110,149,188,214,115,0,82,6,109,231,0,142,187,4,0,0,17,111,171,218,167,0,165,225,208,184,136,102,117,133,117,108,143,186,195,203,219,215,90,35,152,150,0,225,197,83,179,59,74,246,247,127,16,193,170,116,97,131,157,128,103,140,185,193,200,212,219,238,242,22,118,48,97,234,219,198,26,91,115,101,149,179,135,98,135,185,191,196,211,216,227,249,77,69,250,238,225,217,219,65,157,226,194,138,96,135,168,197,143,94,129,184,190,191,209,216,218,239,104,0,54,159,251,239,226,216,214,223,219,218,206,180,121,44,29,63,100,148,99,117,178,191,186,203,217,214,225,250,195,28,0,28,26,0,147,254,244,229,217,213,213,216,217,184,209,180,56,0,0,0,12,6,0,87,169,195,183,194,214,217,215,236,179,0,58,193,251,42,65,251,235,221,214,213,215,216,216,234,129,0,62,114,74,57,118,168,147,84,146,196,186,183,205,219,215,218,245,44,2,208,46,86,249,232,217,212,214,216,216,216,216,219,219,82,3,117,189,203,212,216,155,105,169,193,183,187,211,219,213,222,250,154,1,37,251,216,0,167,251,230,215,212,215,216,216,216,216,216,222,196,102,114,183,194,189,147,82,73,19,50,19,14,176,220,218,213,222,252,233,222,81,40,254,238,218,212,215,216,216,216,216,216,216,222,191,89,134,195,187,183,196,81,0,17,11,0,9,91,210,220,214,218,250,149,6,212,254,230,212,215,216,216,216,216,216,216,216,219,212,92,149,196,183,183,183,184,187,86,46,3,82,174,226,220,215,213,239,184,0,131,229,212,216,216,216,216,216,216,216,216,216,228,140,123,196,182,183,183,183,188,169,11,18,146,199,200,218,216,214,221,254,207,12,0,0,36,221,246,214,215,216,216,216,216,216,216,216,216,216,221,114,174,185,183,183,183,183,196,119,0,125,201,187,217,226,215,213,227,221,35,0,84,117,0,114,239,213,216,216,216,216,216,216,216,216,216,217,215,114,181,183,183,183,183,183,192,145,2,0,12,29,81,191,222,213,226,227,21,19,195,23,118,250,215,215,216,216,216,216,216,216,216,216,216,228,131,157,191,182,183,183,183,182,198,100,64,77,36,0,73,229,226,230,248,91,7,232,177,0,187,239,213,215,216,216,216,216,216,216,216,216,221,197,103,187,189,182,183,183,183,186,177,103,180,221,70,106,241,120,136,244,71,0,203,179,0,69,240,215,213,216,216,216,216,216,216,216,215,227,180,104,183,194,181,183,183,182,190,179,96,119,88,168,229,134,0,163,247,219,25,4,13,0,72,242,249,228,214,213,216,216,216,216,216,216,215,228,187,107,146,199,188,181,183,197,142,22,0,0,54,200,221,52,41,221,232,253,137,1,139,192,244,225,214,213,215,216,216,216,216,215,225,217,135,115,163,196,202,127,0,35,154,66,7,144,208,134,0,191,220,222,247,202,3,222,247,230,217,212,214,216,216,216,215,218,229,189,125,123,147,6,67,198,200,24,98,131,125,96,0,191,226,215,215,231,251,216,2,211,251,237,224,215,213,214,216,216,215,222,229,194,42,10,165,197,58,48,192,175,75,0,33,149,201,221,219,214,218,236,252,164,0,66,56,52,162,248,235,222,214,213,214,215,219,218,20,78,99,15,0,30,24,0,0,70,165,115,95,137,194,223,221,214,218,235,251,154,0,7,42,12,0,119,254,246,234,223,215,215,218,50,0,2,23,60,67,26,62,147,204,199,195,169,120,95,120,178,219,224,215,218,233,214,160,213,95,0,111,248,237,233,189,117,175,214,227,233,212,163,120,114,142,176,197,202,181,137,98,105,155,208,226,218,215,242,245,58,0,167,254,240,223,215,212,218,229,222,185,138,109,113,144,180,203,197,157,111,96,129,185,224,232,59,7,215,254,245,234,224,216,213,219,229,218,180,134,108,115,145,184,206,183,133,98,111,154,20,12,97,129,200,250,240,229,219,215,220,228,215,177,133,107,114,147,188,201,163,118,51,0,0,0,0,136,241,244,253,245,234,224,217,221,227,215,177,134,109,114,150,190,200,153,92,66,0,61,235,219,223,238,253,250,240,228,220,221,227,215,177,134,108,116,155,198,167,3,40,138,190,222,219,221,234,250,244,250,244,130,212,253,244,232,222,222,227,214,177,131,121,65,5,158,148,99,113,171,216,219,219,231,248,112,0,38,216,228,0,96,247,235,224,236,127,0,103,109,128,165,153,110,104,156,209,216,217,230,247,114,0,94,7,70,23,78,206,108,2,160,207,150,105,107,142,150,116,103,151,203,210,214,231,249,215,0,150,148,0,215,242,3,124,236,18,0,0,40,136,219,246,230,178,125,102,123,133,113,108,159,201,202,213,234,252,140,6,242,229,0,132,179,0,195,252,152,146,141,61,0,28,73,158,232,219,197,147,110,113,113,98,121,177,194,195,214,241,102,29,64,36,253,54,48,184,22,0,119,232,218,211,198,162,125,106,85,91,158,193,183,192,219,251,129,0,174,180,0,5,3,196,237,159,60,0,41,166,249,232,214,196,193,177,134,87,47,124,196,181,179,195,236,222,13,60,138,52,182,198,10,0,45,170,253,248,225,198,182,194,182,130,31,90,197,185,179,179,213,254,238,252,207,183,194,0,104,254,237,198,180,185,196,175,75,100,194,187,181,176,199,241,111,25,246,204,155,135,208,83,41,242,191,180,182,188,202,97,65,184,189,182,178,197,229,251,250,217,72,0,9,0,0,0,13,223,93,20,92,26,99,246,234,181,182,183,185,188,64,84,177,188,182,182,207,219,243,188,5,0,0,16,105,167,221,179,0,192,242,32,0,14,37,0,134,203,178,183,183,195,135,109,101,186,184,180,196,217,215,243,196,78,174,58,75,148,16,242,253,71,0,126,250,25,107,228,179,183,183,189,150,132,137,123,194,181,187,216,215,215,246,49,112,236,31,173,128,0,185,215,0,166,237,186,181,183,187,157,118,193,99,179,183,185,214,217,213,224,72,179,245,224,63,4,234,236,42,26,244,235,192,180,183,190,147,121,205,118,151,187,187,215,216,216,214,248,251,239,123,26,17,141,173,0,47,80,11,17,204,226,193,180,183,195,122,143,201,127,143,188,193,218,216,216,213,243,190,17,0,71,50,20,246,113,0,61,114,232,249,218,191,181,184,184,98,177,195,117,152,186,206,218,216,216,213,246,182,0,56,223,87,57,186,7,233,236,211,186,182,194,136,119,195,184,101,176,193,218,216,216,214,219,254,246,22,91,120,16,220,216,1,209,253,222,205,181,185,181,92,177,195,139,115,195,212,217,216,216,212,238,202,0,166,207,63,0,139,251,244,171,4,128,145,182,250,238,215,193,180,196,113,135,195,184,93,171,208,219,216,216,212,227,251,77,0,0,1,14,0,20,234,228,123,76,34,0,0,0,0,0,0,69,250,253,221,209,182,193,148,100,192,196,113,129,211,218,216,216,213,222,253,233,162,192,227,239,180,69,239,112,0,5,48,104,153,186,205,208,107,0,166,235,215,195,185,176,88,176,197,147,97,207,218,216,216,213,219,250,203,187,219,191,241,212,0,155,250,219,209,183,190,96,150,198,173,85,190,222,216,216,213,219,249,111,24,236,189,135,115,197,119,1,230,232,215,193,193,117,123,198,187,89,167,227,216,216,213,221,250,243,200,64,0,3,0,0,0,7,218,180,0,156,248,218,207,191,145,100,193,194,103,145,230,216,216,212,224,252,182,0,0,0,21,125,183,235,190,0,193,176,7,140,231,214,195,171,88,179,199,115,129,230,217,215,212,230,254,203,98,191,62,76,136,22,246,168,110,9,7,29,49,213,251,220,205,189,98,152,204,123,120,228,218,213,216,238,46,115,234,36,184,233,15,0,11,57,81,0,116,242,214,202,129,115,208,127,117,226,217,212,225,249,85,186,237,236,210,195,232,214,0,158,233,208,171,92,197,130,116,226,216,216,238,247,132,40,14,28,167,233,29,52,254,226,204,106,156,144,112,224,216,226,250,228,39,0,19,27,42,4,223,177,17,55,239,252,221,161,108,161,102,222,217,235,252,45,36,238,67,113,226,0,189,245,148,38,0,90,253,247,213,107,146,102,206,222,242,174,4,245,173,0,229,183,0,223,92,0,7,8,0,71,243,241,171,110,123,162,227,237,177,0,54,0,153,28,93,215,217,240,239,128,0,180,234,122,124,118,221,227,131,63,180,88,57,249,159,0,227,211,110,115,159,228,247,226,248,254,227,231,20,119,180,106,113,209,239,228,17,10,70,163,57,150,248,208,0,42,214,181,122,106,198,208,149,236,253,225,183,90,0,18,6,0,0,0,40,254,138,15,0,0,0,0,61,132,190,233,198,156,92,27,111,197,126,19,251,137,38,97,65,241,220,239,222,247,252,49,0,1,0,4,84,231,157,0,184,210,23,52,85,94,50,0,83,106,0,208,254,250,29,44,244,235,199,0,135,243,35,54,253,254,70,11,223,252,84,0,0,51,225,228,51,0,73,106,0,117,232,29,9,184,24,116,97,5,227,184,0,184,68,0,212,191,4,61,212,19,9,21,0,61,238,134,0,126,180,253,199,4,224,216,1,210,172,1,77,67,64,170,157,0,3,32,10,0,115,206,144,208,102,0,100,249,70,0,154,77,7,222,250,26,13,126,162,222,148,18,0,0,0,169,248,229,188,9,66,250,18,102,124,4,224,161,0,174,151,0,170,130,196,248,217,168,187,234,208,184,155,123,94,52,11,0,0,15,231,216,4,0,0,0,0,0,17,64,90,107,184,237,83,71,116,174,170,0,146,219,0,172,212,0,179,190,0,185,170,0,212,244,246,251,231,209,82,0,87,89,50,7,54,253,91,36,21,0,0,0,0,0,0,3,3,75,245,28,0,34,81,131,174,199,216,226,236,243,251,237,234,254,254,254,65,161,254,228,199,190,233,190,0,50,104,93,63,23,0,0,0,44,253,123,0,12,0,0,17,73,99,123,90,79,254,69,48,246,214,230,219,110,230,254,37,83,171,0,189,40,88,81,0,84,86,28,177,0,36,0,126,165,0,130,196,12,37,243,66,0,170,72,0,0,17,202,217,9,10,217,244,149,127,223,160,0,73,88,0,224,231,107,242,250,230,206,190,217,229,149,170,134,92,59,34,3,0,0,0,208,135,0,0,0,1,6,0,61,105,101,106,230,142,0,131,211,254,106,0,234,98,11,249,52,47,48,51,243,6,99,247,10,88,201,0,154,250,250,226,0,100,199,37,224,203,220,188,136,95,58,31,13,13,193,247,45,149,254,253,221,5,0,0,0,18,42,60,69,44,203,248,253,202,0,109,180,225,110,162,165,22,252,34,30,241,137,30,218,13,0,80,154,4,238,70,58,158,0,115,223,7,41,44,0,197,102,0,163,175,26,35,188,247,39,9,236,246,216,184,202,254,202,92,243,200,66,173,146,90,47,11,0,0,0,149,205,115,76,111,228,124,0,0,0,0,19,57,96,44,0,130,250,252,107,0,0,5,0,34,242,153,0,99,188,222,250,76,0,214,230,250,97,0,169,78,91,200,0,190,155,0,215,230,0,79,238,210,196,1,212,229,6,193,212,0,207,124,0,238,158,0,170,243,203,226,164,4,143,12,91,75,50,117,0,233,61,20,247,233,224,208,251,242,63,0,108,120,12,224,155,0,204,200,0,143,218,218,221,232,254,172,218,211,242,208,0,128,234,39,36,246,199,188,222,223,254,145,76,202,222,0,164,74,0,125,141,18,6,183,173,173,222,222,251,122,0,0,30,245,243,0,154,232,61,0,0,22,132,137,176,227,224,252,215,0,152,225,0,136,223,0,200,247,181,120,113,151,215,234,229,253,135,4,242,110,7,53,40,254,248,238,232,194,143,152,212,227,196,221,144,26,250,239,48,0,185,251,238,233,228,184,123,123,202,187,62,4,4,1,103,252,179,183,254,253,252,240,229,229,218,170,119,124,193,124,0,52,71,15,60,0,159,112,25,245,201,155,139,205,252,241,228,223,227,206,152,111,134,204,247,243,153,0,168,240,29,149,251,0,108,249,214,70,0,7,0,0,0,13,219,251,228,219,224,223,186,133,111,150,220,251,230,211,242,137,0,96,6,108,231,0,144,187,3,0,0,18,114,174,219,168,0,164,230,227,213,163,118,119,173,235,250,227,210,218,241,239,90,35,156,149,0,226,198,85,182,60,74,245,244,124,20,218,199,140,113,137,196,244,246,226,211,215,236,253,241,21,120,48,96,231,220,211,31,109,136,117,159,214,245,242,227,212,212,231,251,76,70,250,238,225,217,218,65,161,244,225,166,116,158,187,224,239,239,229,214,210,224,247,254,104,0,54,159,251,239,226,216,214,223,217,221,226,209,145,50,31,69,109,214,241,232,217,210,218,240,194,27,0,31,29,0,146,254,244,229,217,213,213,216,215,183,224,209,68,0,0,0,9,4,0,192,232,211,213,229,252,179,0,62,197,253,44,65,251,235,221,214,213,215,216,216,233,130,0,75,134,89,69,142,182,212,232,207,216,212,217,242,44,2,208,46,86,249,232,217,212,214,216,216,216,215,219,239,100,8,142,223,239,249,248,252,252,218,215,216,221,249,159,3,37,251,216,0,167,251,230,215,212,215,216,216,216,216,215,222,218,123,134,218,229,224,173,91,88,90,59,13,16,208,234,223,80,41,238,218,212,215,216,216,216,216,216,216,222,210,106,157,230,220,216,232,95,0,23,6,0,13,111,247,148,7,214,254,230,212,215,216,216,216,216,216,216,216,217,220,109,175,232,216,216,216,216,221,210,71,1,100,209,183,0,133,229,212,216,216,216,216,216,216,216,216,216,228,146,147,232,215,216,216,216,219,218,56,17,176,236,235,207,12,0,0,35,220,246,214,215,216,216,216,216,216,216,216,216,216,220,120,208,218,216,216,216,216,231,141,0,148,237,222,244,220,34,0,88,118,0,114,239,213,216,216,216,216,216,216,216,216,216,217,213,121,216,216,216,216,216,216,226,173,6,0,14,32,94,224,227,21,21,197,23,118,250,215,215,216,216,216,216,216,216,216,216,216,228,129,177,228,215,216,216,216,215,223,200,123,78,48,0,86,91,7,233,177,0,187,239,213,215,216,216,216,216,216,216,216,216,221,196,103,210,225,215,216,216,216,214,228,243,254,84,126,143,160,72,0,202,178,0,71,240,215,213,216,216,216,216,216,216,216,215,227,179,102,201,230,216,216,216,216,214,235,234,148,98,198,159,0,192,219,25,4,13,0,75,243,249,228,214,213,216,216,216,216,216,216,215,228,187,104,155,227,224,215,216,233,161,20,0,0,57,226,63,48,139,1,143,196,244,225,214,213,215,216,216,216,216,215,225,217,133,114,179,227,239,149,0,40,184,74,44,233,234,153,0,224,202,3,222,247,230,217,212,214,216,216,216,215,218,230,189,122,126,163,8,83,236,235,23,130,135,0,217,216,2,211,251,237,224,215,213,214,216,216,215,222,230,193,39,10,183,227,67,57,222,189,122,0,91,238,228,247,163,0,65,56,51,161,248,235,222,214,213,214,215,219,218,20,77,96,14,0,36,30,1,0,75,221,238,233,227,231,246,154,0,8,43,12,0,121,254,246,234,223,215,215,218,51,0,3,24,62,69,27,72,176,243,229,214,219,231,233,231,233,244,254,214,164,215,95,0,115,248,237,232,192,121,178,216,227,233,212,163,124,128,169,211,229,222,218,226,232,233,234,242,252,242,57,0,169,239,223,215,212,218,229,221,182,137,116,131,172,213,227,222,223,230,234,236,240,250,70,13,230,254,245,234,224,216,213,219,228,216,177,134,116,133,174,212,227,226,227,232,239,234,25,10,111,148,213,250,240,229,219,215,220,227,214,174,134,115,133,173,211,228,230,240,149,32,0,0,0,160,253,245,234,224,217,220,227,213,175,135,116,132,172,210,244,236,222,190,11,64,250,240,228,220,221,227,213,175,134,116,133,174,225,237,14,102,253,239,248,244,250,243,129,212,253,244,232,222,223,226,212,175,135,135,71,5,201,247,238,233,234,242,253,111,0,37,215,228,0,95,247,235,224,235,126,0,112,125,138,188,234,244,235,229,234,249,113,0,95,8,70,23,78,206,106,3,161,213,163,122,117,154,211,246,238,224,227,244,215,0,152,150,0,215,242,3,124,236,18,0,0,39,134,216,245,237,194,146,114,127,188,243,244,220,220,239,253,139,6,242,229,0,132,178,0,196,253,154,149,144,63,0,27,71,154,230,226,220,176,122,114,168,237,243,215,217,235,250,102,29,65,35,253,53,50,186,23,0,120,231,216,221,228,196,138,110,164,239,236,210,216,231,248,131,0,173,180,0,5,3,198,236,158,59,0,45,171,249,229,214,218,231,209,141,111,175,237,220,211,215,229,248,223,14,60,143,58,184,198,9,0,48,173,254,247,222,212,218,230,208,137,127,216,221,216,213,215,232,253,239,252,206,183,194,0,105,254,233,214,215,218,231,188,174,222,216,221,215,213,219,240,111,25,246,204,154,135,207,84,41,239,214,215,215,222,219,221,143,202,224,215,214,212,226,251,250,216,71,0,8,0,0,0,13,222,94,19,91,26,98,246,239,214,216,216,215,225,199,103,206,222,216,216,213,218,243,188,4,0,0,17,108,170,223,180,0,193,242,31,0,16,38,0,134,226,213,216,216,213,241,189,106,220,217,216,216,214,215,243,197,80,177,59,75,147,17,242,253,71,0,129,252,25,107,246,215,216,216,214,223,248,145,143,229,216,216,216,214,215,246,48,112,236,34,174,128,0,187,215,0,166,223,214,216,215,222,234,214,114,210,217,216,216,216,213,224,75,180,246,227,64,4,233,235,41,28,245,230,213,216,214,225,231,227,138,177,223,216,216,216,216,214,248,252,238,122,26,16,140,174,0,47,79,9,18,206,231,213,216,213,230,226,227,149,167,225,216,216,216,216,213,243,190,16,0,73,51,20,246,114,0,64,119,234,227,213,216,216,236,217,228,136,179,222,216,216,216,216,213,246,182,0,57,225,86,57,186,7,232,253,219,215,213,227,231,214,217,117,210,217,216,216,216,214,219,254,246,21,96,119,16,221,216,1,209,242,214,215,216,238,217,228,162,136,229,216,216,216,216,212,238,202,0,165,205,62,0,140,250,244,170,5,127,144,181,249,228,213,213,233,227,215,217,108,205,219,216,216,216,212,227,252,79,0,0,1,14,0,19,234,227,122,75,33,0,0,0,0,0,0,69,250,247,215,213,225,236,213,232,133,154,229,215,216,216,213,222,253,235,166,195,228,238,181,72,241,111,0,5,50,106,155,190,206,209,109,0,166,230,212,218,239,217,227,173,116,227,216,216,216,213,219,250,203,186,220,193,243,212,0,155,247,215,213,237,223,220,205,101,209,221,216,216,213,219,249,111,24,235,188,134,115,196,118,1,230,228,210,232,230,216,222,107,182,227,215,216,213,221,250,243,199,63,0,3,0,0,0,7,217,179,0,158,245,212,225,236,214,229,123,154,231,215,216,212,224,252,181,0,0,0,22,128,185,237,191,0,194,175,8,141,224,216,239,217,231,138,134,230,216,215,212,230,254,204,100,194,63,76,135,21,246,167,109,9,8,28,48,212,242,211,236,224,229,148,123,228,217,213,216,238,46,115,235,40,185,234,15,0,11,59,82,0,116,222,226,232,228,152,118,225,217,212,225,249,88,187,254,238,238,211,196,233,214,0,160,244,216,237,230,153,116,224,216,216,238,247,130,39,13,26,167,233,29,54,227,230,239,159,113,222,216,226,250,228,39,0,21,28,43,3,222,176,17,58,239,250,223,245,179,106,220,218,235,252,44,38,241,67,114,227,0,189,245,147,36,0,93,254,237,234,219,102,203,222,242,174,5,246,171,1,230,182,0,224,93,0,12,10,0,70,242,231,247,133,160,227,237,177,0,53,0,154,28,95,218,219,245,241,130,0,180,248,236,211,111,219,227,133,66,183,88,59,251,158,0,228,241,247,146,155,228,247,227,249,254,226,231,19,120,241,230,109,207,239,228,17,10,72,254,155,136,248,208,0,42,213,180,120,106,198,185,229,253,225,182,89,0,17,6,0,0,0,41,254,137,14,0,0,0,0,65,136,193,236,199,158,96,31,114,200,127,19,251,137,38,97,65,239,218,239,221,247,252,49,0,1,0,4,83,231,157,0,184,211,24,55,87,94,53,0,82,106,0,208,254,250,29,44,245,238,198,0,136,243,35,56,253,254,69,11,224,251,84,0,0,50,225,228,50,0,76,107,0,116,232,29,11,186,24,116,96,5,227,183,0,184,69,0,212,190,3,63,212,19,9,21,0,64,238,135,0,130,184,254,199,3,224,216,1,210,171,1,76,67,63,169,157,0,3,34,11,0,117,208,149,211,102,0,104,248,69,0,157,76,9,224,249,26,13,125,161,222,149,20,0,0,0,168,249,231,191,9,67,250,18,105,123,5,227,160,0,174,150,0,172,131,198];
a(id)=b;  clear id b

function [mat,atlas,nii]= wgr_check_ROI(ROI, funii, flag_delete)
mat = {};  atlas = {}; nii  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'ROI');
    if flag
        for j=1: size(tmp.ROI,1)
            tmp2 = tmp.ROI(j,:);
            xY = [];
            xY.def='sphere';
            xY.xyz=tmp2(1:3)';
            xY.spec=tmp2(4);
            [xY, XYZmm, id] = spm_ROI(xY, funii);
            mat{j,1} = id;
            mat{j,2} = tmp2;
            mat{j,3} = '';
            continue;
        end
    end
        
    flag = isfield(tmp,'atlas');
    if flag
        for j=1: length(tmp.atlas)
            tmp2 = strcat(tmp.atlas{j});
            atlas{k2,1} = tmp2;
            niinew  = spm_file(tmp2,'prefix','bin_');
            spm_imcalc({funii;tmp2},niinew,'(i1~=0).*i2',{0,0,0,16});
            v = spm_vol(niinew);
            datam = spm_read_vols(v); datam(isnan(datam)) = 0;
            idu = unique(datam(:)); idu(idu==0)=[];
            for k=1:length(idu)
                atlas{k2,1} = find(datam==idu(k)); 
                atlas{k2,2} = tmp2; 
                atlas{k2,3} = idu(k); 
                k2 = k2+1;
            end            
            clear datam
            if flag_delete
                delete(v.fname)
            end
            
        end
        continue;
    end
    
    flag = isfield(tmp,'images');
    if flag
        for j=1: length(tmp.images)
            tmp2 = strcat(tmp.images{j});            
            nii{k3,1} = tmp2;
            niinew  = spm_file(tmp2,'prefix','bin_');
            spm_imcalc({funii;tmp2},niinew,'(i1~=0).*i2',{0,0,0,16});
            v  =spm_vol(niinew);
            datam = spm_read_vols(v);
            nii{k3,1} = find(datam); clear datam
            nii{k3,2} = tmp2; 
            nii{k3,3} = ''; 
            if flag_delete
                delete(v.fname)
            end
            k3 = k3+1;
        end
        continue;
    end
end

function [txt,mat,nii]= wgr_check_covariates(covariates)
txt={};  mat = {};  nii  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(covariates)
    tmp  = covariates{i};
    flag = isfield(tmp,'multi_reg');
    if flag
        for j=1: length(tmp.multi_reg)
            tmp2 = strcat(tmp.multi_reg{j});
            [fpath,name,ext] = fileparts(tmp2);
            if ~isempty(strfind(ext,'txt'))
                txt{1,k1} = load(tmp2);
                k1 = k1+1;
            elseif ~isempty(strfind(ext,'mat'))                
                tmp3  = load(tmp2);
                try
                    mat{1,k2} = tmp3.R;
                catch
                    tmp4 = fieldnames(tmp3);
                    if length(tmp4)==1
                        eval(['mat{1,k2} = tmp3.',tmp4{1},';']);
                    else
                        error('there are more than one variable in your mat file');
                    end
                end
                k2 = k2+1;
            else
                error('Unknown File Types')
            end
            continue;
        end
    end
        
    flag = isfield(tmp,'images');
    if flag
        for j=1: length(tmp.images)
            tmp2 = strcat(tmp.images{j});
            nii{k3,1} = tmp2;
            k3 = k3+1;
        end
        continue;
    end
end
txt = cell2mat(txt);
mat = cell2mat(mat);

function wgr_ROI_sig_deconvolution(job,para_global)
TR = job.HRFE.TR ; 
ROI = job.Datasig; %cell file
[mat_name,mat_txt]= wgr_check_ROIsig(ROI);
tmp = mat_txt(:,1)';
data = cell2mat(tmp);
Nscans = size(data,1);
datainfo = mat_txt(:,2);

if isempty(mat_txt{1,2})
    error('No data input!')
else
    [fpath,name,ext] = fileparts(mat_txt{1,2});
end

outdir = job.outdir{1};
if isempty(outdir)
    outdir = fpath;
end
covariates = job.Denoising.generic;
fprintf('Reading Covariates ...\n')
if ~isempty(covariates)
    [txt,mat,nii]= wgr_check_covariates(covariates);     
    nuisance = [txt mat];
else
    nuisance = [];
end

if length(job.Denoising.bands)>1
    error('please check your setting for band-pass filtering \n')
elseif length(job.Denoising.bands)==1
    Bands = job.Denoising.bands{1};   
else
    Bands =[];
end
p_detrend = job.Denoising.Detrend; 
if p_detrend
    nuisance_detrend = zeros(Nscans,p_detrend);
    for i = 1:p_detrend
        d = (1:Nscans).^i;
        nuisance_detrend(:,i+1) = d(:)./(Nscans.^i);
    end
else
    nuisance_detrend= [];
end
            
fprintf('Removing regressors & Detrend................. \n ')
nuisance = [nuisance_detrend nuisance];
if ~isempty(nuisance)
    nuisance = bsxfun(@minus, nuisance, sum(nuisance, 1)./Nscans);% Remove the mean
    nuisance = [orth(nuisance) ones(Nscans, 1)];
    mu   = sum(data, 1)./Nscans;    % mean 
    data = data - nuisance*(nuisance\data);
    data = bsxfun(@plus, data, mu);
end
            
if ~isempty(Bands)
    fprintf('Frequency filter.................... \n ')
    data = wgr_band_filter(data, TR,Bands);
end
            
if job.Denoising.Despiking;
    fprintf(' Temporal despiking with a hyperbolic tangent squashing function... \n')
    data = wgr_despiking(data);
end           
            
%% HRF deconvolution
para.TR = TR;
%%% the following parameter (upsample grid) can be > 1 only for Canonical.
%%% Set = 1 for FIR
para.T  = job.HRFE.fmri_t; % magnification factor of temporal grid with respect to TR. i.e. para.T=1 for no upsampling, para.T=3 for 3x finer grid
para.T0 = job.HRFE.fmri_t; % position of the reference slice in bins, on the grid defined by para.T. For example, if the reference slice is the middle one, then para.T0=fix(para.T/2)
if para.T==1
    para.T0 = 1;
end
min_onset_search = min(job.HRFE.mdelay); % minimum delay allowed between event and HRF onset (seconds)
max_onset_search = max(job.HRFE.mdelay); % maximum delay allowed between event and HRF onset (seconds)
para.dt  = para.TR/para.T; % fine scale time resolution.
if job.HRFE.hrfm==1
    para.TD_DD = 2; % time and dispersion derivative
elseif job.HRFE.hrfm==3
    para.TD_DD = 1; % time and dispersion derivative
end
para.AR_lag = job.HRFE.cvi; % AR(1) noise autocorrelation.
para.thr = job.HRFE.thr; % (mean+) para.thr*standard deviation threshold to detect event.
para.len = job.HRFE.hrflen; % length of HRF, in seconds
para.lag  = fix(min_onset_search/para.dt):fix(max_onset_search/para.dt);
para.localK = para_global.localK;
temporal_mask = ones(Nscans,1);
if job.HRFE.hrfm==1 | job.HRFE.hrfm==3
    tic
    [beta_hrf, bf, event_bold] = wgr_rsHRF_estimation_canonhrf2dd_par2(data,para, temporal_mask);
    hrfa = bf*beta_hrf(1:size(bf,2),:); %HRF
elseif job.HRFE.hrfm==2 | job.HRFE.hrfm==4
    tic
    if  job.HRFE.hrfm==2
        para.estimation = 'FIR';
    elseif job.HRFE.hrfm==4
        para.estimation = 'sFIR';
    end
    para.T=1; % this needs to be = 1 for FIR
    [hrfa,event_bold] = wgr_rsHRF_FIR(data,para, temporal_mask);
end

nvar = size(hrfa,2);
PARA = zeros(3,nvar);
for voxel_id=1:nvar
    hrf1 = hrfa(:,voxel_id);
    [PARA(:,voxel_id)] = wgr_rsHRF_get_parameters(hrf1,para.TR/para.T);% estimate HRF parameter
end
fprintf('Done HRF estimation %8.2f seconds\n',toc)

fprintf('Deconvolving HRF ...\n');
tic
T = round(para.len/TR);
if para.T>1
    hrfa_TR = resample(hrfa,1,para.T);
else
    hrfa_TR = hrfa;
end
for voxel_id=1:nvar
    hrf=hrfa_TR(:,voxel_id);
    H=fft([hrf; zeros(Nscans-length(hrf),1)]);
    M=fft(data(:,voxel_id));
    data_deconv(:,voxel_id) = ifft(conj(H).*M./(H.*conj(H)+2));
    event_number(voxel_id)=length(event_bold{1,voxel_id});
end
toc
fprintf('Save HRF deconvolution results....\n');
save(fullfile(outdir,[job.prefix,name, 'hrf.mat']), 'para', 'hrfa', 'event_bold', 'event_number','PARA','-v7.3');
save(fullfile(outdir,[job.prefix,name, '_deconv.mat']), 'datainfo','data','data_deconv','-v7.3');
save(fullfile(outdir,[job.prefix,name, 'job.mat']), 'job');

function [mat_name,mat_txt]= wgr_check_ROIsig(ROI)
mat_txt = {}; mat_name  = {};
k1 =1 ; k2 = 1; k3 = 1;
for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'name');
    if flag
        if size(tmp.name,1)>1
            error('more than 1 variable names')
        else
            tmp2 = strcat(tmp.name);
            mat_name = tmp2;            
        end
        break
    end
end

for i=1:length(ROI)
    tmp  = ROI{i};
    flag = isfield(tmp,'sigdata');
    if flag
        for j=1: size(tmp.sigdata,1)
            tmp2 = tmp.sigdata{j};
            [fpath,name,ext] = fileparts(tmp2);
            if strfind(ext,'txt')
                mat_txt{j,1} = load(tmp2);
                mat_txt{j,2} = tmp2;
            elseif strfind(ext,'mat')
                tmp3 = load(tmp2);
                try
                    eval(['mat_txt{j,1} = tmp3.',mat_name,';']);
                catch
                    tmp4 = fieldnames(tmp3);
                    if length(tmp4)==1
                        eval(['mat_txt{j,1} = tmp3.',tmp4{1},';']);
                    else
                        error(['there are more than one variable in mat file, and no variable ''',mat_name,'" in mat file']);
                    end
                end
                mat_txt{j,2} = tmp2;
            end
            continue;
        end
    end  
>>>>>>> 9c46ae5c4cc843f01b9a6e057c623af732c071ed
end